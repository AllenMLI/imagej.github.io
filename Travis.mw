{{Development | tools}}{{Minibox | logo=Travis.png | blurb='''Travis CI:''' Build your code in the cloud!}}[https://travis-ci.org/ Travis] is a tool for [[Project_management#Continuous_integration|continuous integration]]. It has excellent integration with [[GitHub]], making it a viable alternative to [[Jenkins]] for automating tasks.

= Automatic Deployment of Maven Artifacts =

Deploying your library to [[Maven]] makes it available for other developers. It is also a [[Fiji/Contribution_requirements|contribution requirement for the Fiji project]].

== Requirements ==
* An open-source project hosted on [[GitHub]]
* Logging in to [https://travis-ci.org/auth Travis CI] with your corresponding GitHub account
* [https://github.com/travis-ci/travis.rb#installation Travis command line tools]
* Contact an ImageJ admin in [[Chat#Gitter|Gitter]] or [http://forum.imagej.net/ the ImageJ forum] and request a <code>Nexus Deployment</code> account for the [[ImageJ Maven repository]].

== Instructions ==
<div style="overflow: hidden">
<tabs>
<tab name="Maven">
<ol>
<li>Use the following code for your repository's <code>.travis.yml</code>:

<source lang="yaml">
language: java
install: true
script: mvn -Pdeploy-to-imagej deploy --settings settings.xml
</source>
</li>
<li>From the command line in your repository, create an [https://docs.travis-ci.com/user/environment-variables/#Encrypting-Variables-Using-a-Public-Key encrypted environment variable] for your [http://maven.imagej.net maven.imagej.net] password—be careful with escaping special characters correctly:

<source lang="bash">
$ travis encrypt MAVEN_PASS=my_maven_password --add env.matrix
</source>

Note that this will automatically modify your <code>.travis.yml</code> file.
</li>
<li>Create a <code>settings.xml</code> in your repository using the following template, using your [http://maven.imagej.net maven.imagej.net] username:

<source lang="xml">
<settings>
  <servers>
    <server>
      <id>imagej.releases</id>
      <username>my_maven_username</username>
      <password>${env.MAVEN_PASS}</password>
    </server>
    <server>
      <id>imagej.snapshots</id>
      <username>my_maven_username</username>
      <password>${env.MAVEN_PASS}</password>
    </server>
  </servers>
</settings>
</source>
</li>
<li>Commit all your files with Git and push them back to your repository. If everything works as intended, you should start seeing new builds in your [https://travis-ci.org Travis dashboard] with each new commit, with corresponding SNAPSHOT and release artifacts immediately deployed automatically to [http://maven.imagej.net/index.html#view-repositories maven.imagej.net].
</li>
</ol>
</tab>
<tab name="Gradle">
<ol>
<li>Add the following code to your <code>build.gradle</code> file:
<source lang="Groovy">
// this _must_ be at the top, with the other plugins
apply plugin: 'maven'
apply plugin: 'maven-publish'

// more towards the end
uploadArchives {
    repositories {
        mavenDeployer {
            repository(url: "http://maven.imagej.net/content/repositories/releases") {
                authentication(userName: "$System.env.MAVEN_USER", password: "$System.env.MAVEN_PASS")
            }
            snapshotRepository(url: "http://maven.imagej.net/content/repositories/snapshots") {
                authentication(userName: "$System.env.MAVEN_USER", password: "$System.env.MAVEN_PASS")
            }
        }
    }
}
</source>

If you also want your Javadoc JAR to be published, also add the following:
<source lang="Groovy">
task javadocJar(type: Jar, dependsOn:javadoc) {
        classifier = 'javadoc'
        from javadoc.destinationDir
}

artifacts
{
        archives sourcesJar
        archives javadocJar
    archives testsJar
}

publishing {
        publications {
                maven(MavenPublication) {
                        from components.java
                        artifact sourcesJar { classifier "sources" }
                }
        }
}
</source>
</li>
<li>From the command line in your repository, create an [https://docs.travis-ci.com/user/environment-variables/#Encrypting-Variables-Using-a-Public-Key encrypted environment variable] for your [http://maven.imagej.net maven.imagej.net] username and password—be careful with escaping special characters correctly:

<source lang="bash">
$ travis encrypt MAVEN_USER=my_maven_username --add env.matrix
$ travis encrypt MAVEN_PASS=my_maven_password --add env.matrix
</source>

Note that this will automatically modify your <code>.travis.yml</code> file.
</li>
<li>Commit all your files with Git and push them back to your repository. If everything works as intended, you should start seeing new builds in your [https://travis-ci.org Travis dashboard] with each new commit, with corresponding SNAPSHOT and release artifacts immediately deployed automatically to [http://maven.imagej.net/index.html#view-repositories maven.imagej.net].
</li>
</ol>
</tab>
</tabs>
</div>
