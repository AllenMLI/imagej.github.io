{{Infobox Plugin
| name                   = Advanced Weka Segmentation
| software               = Fiji
| author                 = [[User:Iarganda | Ignacio Arganda-Carreras]], [http://albert.rierol.net Albert Cardona], [http://www.kaynig.de Verena Kaynig]
| maintainer             = [[User:Iarganda | Ignacio Arganda-Carreras]]
| source                 = [http://pacific.mpi-cbg.de/cgi-bin/gitweb.cgi?p=fiji.git;a=tree;f=src-plugins/Trainable_Segmentation/trainableSegmentation;h=c38082682b56b221492a84f48fcc586d28dbd6fa;hb=HEAD on gitweb]
| released               = May 19<sup>th</sup>, 2011
| latest version         = May 19<sup>th</sup>, 2011
| status                 = '''BETA''', active
| category               = [[:Category:Segmentation|Segmentation]], [[:Category:Machine Learning|Machine Learning]]
}}

== Introduction ==
The [[Advanced Weka Segmentation]] is a Fiji plugin that combines a collection of machine learning algorithms with a set of selected image features to produce pixel-based segmentations. [http://www.cs.waikato.ac.nz/ml/weka/ Weka] (Waikato Environment for Knowledge Analysis) can itself be called from the plugin. It contains a collection of visualization tools and algorithms for data analysis and predictive modeling, together with graphical user interfaces for easy access to this functionality. As described on their wikipedia site, the advantages of [http://www.cs.waikato.ac.nz/ml/weka/ Weka] include: 

* freely availability under the GNU General Public License 

* portability, since it is fully implemented in the Java programming language and thus runs on almost any modern computing platform 

* a comprehensive collection of data preprocessing and modeling techniques 

* ease of use due to its graphical user interfaces

[http://www.cs.waikato.ac.nz/ml/weka/ Weka] supports several standard data mining tasks, more specifically, data preprocessing, clustering, classification, regression, visualization, and feature selection.

The main goal of this plugin is to work as a '''bridge between the Machine Learning and the Image Processing''' fields. It provides the framework to use and, more important, '''compare''' any available classifier to perform image segmentation based on pixel classification.

== The Graphical User Interface ==
[[Image:Advanced-Weka-Segmentation-GUI.png|thumb|400px|Example of the first look of the plugin window when using it on a TEM image]] [[Advanced Weka Segmentation]] runs on any 2D image or 2D stack of images. If the image or stack is not 8-bit grayscale, it will be converted.


By default, the plugin starts with two classes, i.e. it will produce '''binary pixel classification'''. The user can add traces to both classes using the whole set of tools for ROI (region of interest) drawing available in Fiji. That includes rectangular, round rectangular, oval, elliptical, brush polygon and freehand selections. By default, the freehand selection tool (of 1 pixel width) is automatically selected. 

The user can pan, zoom in and out, or scroll between slices (if the input image is a stack) in the main canvas as if it were any other Fiji window. On the left side of the canvas there are two panels of buttons, one for the training and one for the general options. On the right side of the image canvas we have a panel with the list of traces for each class and a button to add the current ROI to that specific class. All buttons contain a short explanation of their functionality that is displayed when the cursor lingers over the buttons.

=== Training panel ===
==== Train classifier ====
This button activates the training process. One trace of two classes is the minimum required to start training. The first time this button is pressed, the features of the input image will be extracted and converted to a set of vectors of float values, which is the format the [http://www.cs.waikato.ac.nz/ml/weka/ Weka] classifiers are expecting. This step can take some time depending on the size of the images, the number of features and the number of cores of the machine where Fiji is running. The feature calculation is done in a completely multi-thread fashion. The features will be only calculated the first time we train after starting the plugin or after changing any of the feature options.

If the training ends correctly, then the displayed image will be completely segmented and the result will be overlayed with the corresponding class colors.  Notice that all buttons are now enabled, since all their functionalities are possible after training.
