<div style="background:#ffd; padding: 10px 10px 0 10px; border: 1px solid black;">
This draft is a work in progress of a new Coloc2 page focusing on the plugin itself and its usage. It will go hand in hand with the [[Colocalization Cookbook]] page, which will eventually replace the page [[Colocalization Analysis]].
</div>


{{Infobox Plugin
| name                   = Coloc 2 - Standardized, modular, Colocalization analysis. 
| software               = ImageJ - Fiji - imglib
| author                 = Daniel J White, Tom Kazimiers, Johannes Schindelin
| maintainer             = [mailto:white_at_mpi-cbg_dot_de Daniel White]
| filename               = Colocalization.jar
| source                 = [http://fiji.sc/cgi-bin/gitweb.cgi?p=fiji.git;a=tree;f=src-plugins/Colocalisation_Analysis;hb=HEAD on gitweb].
| latest version         = Dec 2011
| website                = Fiji
| status                 = beta. Under development, but stable enough for real work. 
}}

= How to use Coloc 2 =

* Open images to analyze. 
** You need a 2 color channel image. If the image has more than 2 channels, identify the two you want to analyze with each other, then split the channels into separate images (Image- Color - Split Channels)
* If you want to analyze only some region of interest (ROI), there are 2 ways to do that:
** Select a region of interest with one of the ImageJ selection tools, in one of the images. 
*** If the image is a z stack, then the ROI applies in all "slices" of the stack. 
**You can have a third "binary mask" image, with the same x,y,z dimensions as the 2 images to be analyzed:
*** where the mask image is white (255 pixel value for an 8 bit greyscale image) colocalization will be analyzed for those pixels only. Where it is black (zero pixel value), the pixels will be ignored: not included in the analysis. 
*** you can use a z stack as a 3D mask... it's up to you how you make that mask image, manually or by some automated method. 
*Launch the Coloc 2 plugin from the menu item: Analyze - Colocalization Analysis - Coloc 2 
** or use the command finder: press L then start typing Coloc, then choose the plugin with the arrow keys and hit enter, or double mouse click it to launch the plugin. 
* In the plugin's graphical user interface (GUI) choose the 2 images you want to analyze in the first 2 drop down lists.
** Select the images according to which you want to be channel 1 and which to be channel 2. 
** In the third drop down list selection, select the image/channel you want to use that has the correct ROI
*** or you can choose a mask image - it must have the same xyz dimensions (number of pixels and slices) as the other 2 images. 
* Choose which "Algorithms" are run and which statistics you wish to calculate, and if you want to save the "standardized" PDF result file, when the OK button is pressed. 
** Turn the options on and off by clicking the selection button at the left of the Algorithm description
** Also choose the approximate size of the point spread function (PSF) in your images, and the number of iterations to run the Costes statistical significance test (We suggest a large number... the larger the number the longer the analysis will take. Do, at the very very least, 10 iterations (100 would be better).
*** You should know approximately how big the PSF is (in pixels) in your images. 
**** If you dont, go back and read about what it is and why it's important in colocalization analysis (for instance read the [[Media:Costes_etalColoc.pdf|Costes paper]] )
**** This size determines what size of image chunks are shuffled in the randomization process. PSF sized image pieces make physical sense, as that's the size of the smallest objects in the image. 
* Click OK to run the analysis. 
** You will be asked if you want to save the results as a PDF file (if the Show "save PDF" dialog button was checked. So tell it where to save the PDF. This is standard output format, so you can compare with your friend,  same vs. same.
*** Feel free to tell us what things you think should be included in this standardized PDF output file.

= Something to do before using Coloc2 =

==Open the sample data==
First, let's open a sample data set that we know should have very good colocalization because the 2 subunits of a dimeric protein are stained with green and red dyes respectively. The methods of Pearson, Manders, Costes and Li should work very well for this sample, but maybe we can see some problems with the data? Maybe we can decide if the data is suitable for this analysis or not? 

'''Open this sample data file [http://fiji.sc/samples/colocsample1bRGB_BG.tif colocsample1bRGB_BG.tif].''' Then use the "Image-Color-Split Channels" menu command to get a separate z stack for the 2 dyes (you can throw the blue one away!).

If you like, you can change the look up tables of the images (LUTs) so one is "green" and one is "magenta". Of course the colors here are always false. These false colors are only useful to tell which channel is which. The optoelectronic detectors we use only see photons, and don't know what color they are; that is determined by the fluorescence emission filters we use. There is no such thing as a green dye or a red dye, since they have broad emission spectra not a single wavelength corresponding to a certain "color".
If I want to show DAPI in green and EGFP as magenta, there is nothing "wrong" about that.  

[[Image:SplitChannels.png|300px]]

==Questions you should ask before attempting colocalization analysis from 2 color channel images, using the pixel intensity spatial correlation methods of Manders and Costes:==

*Q1) Is the image data noisy?
*Q2) Has there been lossy compression?
*Q3) Is the intensity information saturated / clipped / overexposed?
*Q4) Is there a problem with uniform background / detector offset?
*Q5) What is the spatial resolution?

==Check image data for problems and suitability for analysis==
To begin with, we should check the images for problems that might make the colocalisation analysis methods fail or be unreliable.

*1) Significant noise (uncertainty in the pixel values - usually from detection of too few photons) means the methods we will use will significantly underestimate the true colocalization, or even completely fail to give the "right" result.
*2) Lossy compression messes up the intensity information of the pixels, causing the colocalization result to be more or less wrong. 
*3) Intensity clipping/saturation is bad news. Pixel intensity correlation measurements rely on the pixel intensities being true and not clipped to 255 when they were really higher!. We did this in the [[DetectInformationLoss]] tutorial, so do that first if you didn't already!  
*4) We should look for wrong offset / high background (since this confuses the auto threshold method, since zero signal is not zero pixel intensity but some larger number, see below), 
*5) Spatial resolution)
The spatial resolution of the images, by definition, determines the spatial resolution that you are measuring colocalization at. The results will be different at different levels of spatial resolution. If the image is one big pixel, everything will colocalize! 

The spatial resolution of the light microscope is limited by the wavelength of the light (and the NA of the objective lens) according to Ernst Abbe's work. Molecules / proteins are an order of magnitude smaller than the wavelength of visible light, so they could be many nm apart, but still appear in the same image pixel. Is that true colocalization? Maybe.... it depends how you define it! 

Are the images spatially calibrated? If not then we need to calibrate them so we know the spatial sampling rate (think pixel or voxel size) in x, y and z. See the [[SpatialCalibration]] tutorial for how to do that. We need the images to be spatially calibrated in order for the Costes statistical significance test (below) method to work properly.

We need to think carefully about the correct or adequate spatial resolution in x, y and probably z. This depends on the [http://en.wikipedia.org/wiki/Numerical_aperture Numerical Aperture] of the objective lens. You can calculate the correct pixel or voxel sizes for the objective lens you are using, to get the maximum resolution that that objective lens can really see: [http://support.svi.nl/wiki/NyquistCalculator Nyquist Calculator]]. Essentially the pixels / voxels should be about 3 times smaller then the resolution of the lens. On the other hand, if you are only interested in larger objects, and not the smallest details the objective can see, it makes sense to have larger pixels or voxels. Again, these should be about 3 times smaller than the smallest feature you want to resolve.  

[http://en.wikipedia.org/wiki/Nyquist–Shannon_sampling_theorem Nyquist] tells us the spatial sampling should be about three times smaller then the smallest object we want to resolve. Remember, spatial intensity correlation analysis, as we will perform here, can not tell you that 2 proteins are bound together in some biophysical bonding interaction. However, it might suggest that the 2 molecules occur with the same relative amounts when they are present in the set of spatial samples (pixels or voxels) with intensities above the thresholds we will calculate below. In any case, it might be a hint that "maybe they are binding partners or in the same macromolecular complex". You SHOULD follow up by determining true binding using [http://en.wikipedia.org/wiki/FLIM FLIM], [http://en.wikipedia.org/wiki/Förster_resonance_energy_transfer FRET] and biochemical methods like Immuno co-Precipitation etc.

There is another (badly behaved) sample data file here which we will use later: [http://fiji.sc/samples/150707_WTstack.lsm 150707_WTstack.lsm].

= Notes and details on performing Coloc2 =


<li>
''' Real problems and pitfalls using the Manders and Costes methods for colocalization analysis. '''

    <ol>

        <li>
      '''The auto threshold calculation method can fail''' if you feed it inappropriate information. That means it does not like images with high offset / high flat background, which adds a constant number to the "real proportional" intensity relationship to the "concentration" of the dye. If pixels that contain no real signal have large intensity values, the algorithm has no way of knowing that, and can reach a result for the thresholds where one or both of them is below the value of the lowest intensity value present in that channels of the image. This means that ALL of that channel's pixels are considered to be colocalized, then the Manders Coefficients that you get will reflect that aberrant situation. In these cases, the background / offset should be carefully removed/subtracted before running the [[Colocalization Threshold]] plugin. The images below are an example of this situation, using the badly behaved data set:[http://fiji.sc/samples/150707_WTstack.lsm 150707_WTstack.lsm]. Note that the vaules for M1 and tM1 are the same! This should not be the case. You can see the green channel threshold is wrongly set below the intensity where the image data actually starts :-O

[[Image:BadOffsetConfusesCostesAutoThreshold.png|300px]]
     </li>      

    <li>
'''Effect of noise on Manders Coefficients'''.
In the case of perfect colocalization, where the intensities of the 2 channels are always the same: Low red with low green, and high green with high red, the scatterplot would have all the data point falling on a straight diagonal line, since the green intensity would always bee the same as that of the red! however, that is the ideal case and real biological data is noisy! Noise (be it from the dyes not staining every single molecule, or from statistical photon shot noise from recording the signal from too few photons, or from other noise sources) will cause the pixel intensities to deviate from the perfect case, to be lower or higher than they really are on average. This causes scatter in the distribution of the data point in the scatterplot perpendicular to the line of regression fit. So you can see the noise by looking at how spread or tight the scatterplot points are. Also, since Manders coefficients are measuring correlation, and noise lowers the similarity of two identical signals, noise lowers the Manders coefficients to less than they should be for an image with very low noise. So for the same object under the microscope, a nosier images will appear to give less colocalization than a clean low noise image. That means you cant compare different images with different signal:noise levels, unless you have some way of estimating the noise and correcting for it. 
   </li>

   <li>
''' Fluorescence Emission Bleed Through Looks Like Perfect Colocalization!'''
As is often true for DAPI nuclear stain and GFP dye pairs, when images are captured at the same time, with both dyes being excited and detected simultaneously, fluorescence emission bleed through gives misleading results, as the signal from the DAPI also appears also in the GFP detection channel! Where there is more DAPI, there is also more signal in the GFP channel. This looks like really good colocalization, but of course it is totally false! It is a problem with the imaging systems not being set up correctly or not used correctly. This can also happen with many other dye combinations, if they have overlapping emission spectra. Always check your spectra. You can do that here: [http://probes.invitrogen.com/servlets/spectraviewer Invitrogen Fluorescent Dye Spectra Viewer]]. To be safe, check your emission filter sets don't allow in the wrong signal, and do '''"sequential imaging"''', so you only excite and image one dye at a time. 

[[Image:ColocBleedThru.png|300px]]

   </li>

   
     <li>
Next is the topic: '''Regions of Interest (ROIs)''', and whether or not to consider zero - zero pixels as part of the interesting data for the algorithms to deal with. If you think about it, in a fluorescence image there is typically quite a large area which is black in both channels... for instance where there is space between cells, or just no signal in either channel since that area is not part of an interesting area of the sample. A philosophical point... but a significant one: Why bother taking images of black areas? Why bother analyzing black areas for colocalization?  Surely you are not interested in those regions, as they contain no information of use to you? If you perform these pixel intensity correlation methods and include zero zero pixels, then of course these pixels have a very high correlation! They have the same value. But they are totally uninteresting! Sure, the auto threshold method excludes them from the tM1 and tM2 figures, but why include them in the first place? Probably better not to include them unless there is a good reason to do that. Why not just image the area, or just analyze the area where your biology is happening? If you analyze an image with large areas of close to zero and zero intensities, then the autothreshold method will tend to lower the thresholds to include more of that non interesting background. If you image the same sample, but only image a patch of the interesting part, say cytoplasm, then the autothreshold will probably give higher thresholds, and exclude more non interesting background, so the thresholded Manders coefficients will better reflect the biologically interesting parts of the image data - right? You can analyze only a region of interest by making an ROI then selecting the use ROI option in the plugin. You can use a regular shape (rectangle or ellipse) or even a freehand ROI to manually select the interesting part of the image and ignore the part you know is background. Yes, this is a subjective decision, so be careful! You can see in the following example screenshot that for the same misbehaving data set, using an ROI which roughly gets just the cell, the thresholds were calculated properly and the tM1 and tM2 are sensible and lower then 1.00:  

[[Image:ColocWithROI.png|300px]]
     </li>


     
      </ol>

[[Category:Tutorials]]
[[Category:Colocalization]]
[[Category:Color processing]]
