The third DAIS Learnathon will take place from June 23 until June 29 2019.<br>
You can also view the [https://imagej.net/2017-06-18_-_DAIS_learnathon 2017 Learnathon] and the  [https://imagej.net/2018-06_-_DAIS_learnathon 2018 Learnathon] wiki pages!

== Instructors ==

'''[https://imagej.net/User:Bwilhelm Benjamin Wilhelm]'''
''"I am currently a Working Student at KNIME working on KNIME Image Processing and KNIME Deep Learning. I did an internship in the Jug-Lab at MPI-CBG / CSBD working on a Fiji Plugin for CARE and bringing CARE to KNIME. I love Linux, Git and open-source software."''

'''[https://imagej.net/User:Bnorthan Brian Northan]'''
''"I currently work as a contract Image Processing R&D Engineer. I have helped groups develop and commercialize deconvolution and single particle localization algorithms for novel instruments. I have strong ties to the open source community, and have made several contributions to ImageJ, specifically imagej-ops and imagej-tutorials. I've worked with groups such as the Open Science Foundation to develop reproducible workflows using KNIME. I'm also an adjunct instructor at the Department of Informatics, University at Albany, teaching Data Analysis using Python and KNIME."''

'''[https://imagej.net/User:Frauzufall Deborah Schmidt]'''

'''[https://imagej.net/Users:Jug Florian Jug]'''
''"Florian is a group leader at the Center for Systems Biology Dresden (CSBD). His research aims at pushing the boundary of what computer vision and machine learning can do for the automated and semi-automated quantification of biological image data. Florian studied Computer Science at the TU Munich and obtained a PhD in the field of Computational Neuroscience from ETH Zurich. Next to developing novel methods for the (semi-)automated analysis of biomedical image data, his team is also critically involved in maintaining and developing the image analysis platform Fiji (www.fiji.sc)."''

'''Florian Levet'''
''"After working as an engineer in the Bordeaux Imaging Center, I am currently a researcher in the Sibarita lab at the Interdisciplinary Institute for Neuroscience in Bordeaux. I wrote several ImageJ plugins for segmenting or quantifying the apposition or the morphology of different kind of biological models. I also developed from scratch two platforms called SR-Tesseler and Coloc-Tesseler for quantifying single-molecule localization microscopy data."''

'''[https://imagej.net/User:Bogovic John Bogovic]'''
''''I am a postdoc in the Saalfeld lab at Janelia, working on anatomical templates, and large scale, multimodal image registration.  I am the author of the Bigwarp Fiji plugin, and contribute to imglib2 and bigdataviewer. There is lots of room in my heart for both the "new hotness" of deep learning and "old school" computer vision techniques."''

'''[https://imagej.net/User:Maarzt Matthias Arzt]'''
''"I started developing for FIJI, about three years ago. I'm actively developing Labkit, a FIJI Plugin for easy but big data capable image segmentation. And I'm contributing to the core of ImageJ and FIJI. I'm a big fan of simple, powerful and working software. I'm happy to discuss: How to integrate whatever amazing tools you have into ImageJ / FIJI.''

'''[https://imagej.net/User:Hanslovsky Philipp Hanslovsky]'''
''''I am currently a grad student in the Saalfeld lab at Janelia. I work on neuron reconstruction from electron microscopy data with machine learning and develop proof-reading and data annotation tools. I am an ImgLib2 and recent Kotlin enthusiast and enjoy writing efficient image processing and analysis software"''

'''[https://imagej.net/User:Tibuch Tim-Oliver Buchholz]'''
''''I am a PhD student in the Jug-Lab at MPI-CBG / CSBD. I work on content-aware image restoration applications for electron microscopy data. I learned about the ImageJ-Universe via KNIME Image Processing, contributed to imagej-ops and I am a fan of BigDataViewer."''

'''Pavel Moravec'''

'''[https://imagej.net/User:Pietzsch Tobias Pietzsch]'''
''''I'm a postdoc in the Jug and Zechner labs at MPI-CBG / CSBD. I am the coauthor and maintainer of ImgLib2, BigDataViewer, BigVolumeViewer, Mastodon, etc."''

'''[https://imagej.net/User:Haesleinhuepf Robert Haase]'''
''''I'm a postdoc in Myers lab at MPI CBG / CSBD. I'm the creator of [https://clij.github.io CLIJ]. In my actual job, I develop, run and maintain custom smart microscopes on the [https://github.com/ClearControl ClearControl] platform. Analysing images after acquistion but before writing them to disc is my thing. Our microscopes are so smart, they even use [https://twitter.com/XWingScope twitter]."''

'''[https://imagej.net/User:Skalarproduktraum Ulrik GÃ¼nther]'''

==Schedule==

See [https://indico.mpi-cbg.de/event/162/timetable/#20190623 this page]!

==Preparation==

=== Knowledge === 

We expect the course participants to be comfortable with:
# Using the Terminal / Unix Shell.
# Using Git Versioning Tool
# Programming Java

If you didn't use the Terminal / Unix yet. Please go through chapters 1 to 3 of this online tutorial https://swcarpentry.github.io/shell-novice/.

If you don't know git, please have a look at this tutorial: http://swcarpentry.github.io/git-novice/.

There many beginner books for Java. If you want to be well prepared, you may also want to learn about generics in Java.

=== Software ===

'''Bring your Laptop''' and make sure you have a Terminal, Git, and a Java IDE (Eclipse or IntelliJ) installed.

==Monday==
'''9:00 - 10:00'''
* Welcome by [https://twitter.com/haesleinhuepf/status/1143052112798060544 Florian Jug] and Pavel Tomancak.
* [https://twitter.com/PavelTomancak/status/1143079972506128386 Scientific speed dating]
'''10:00 - 12:00 ImageJ2 API beating'''
* [https://github.com/fiji/learnathon-2019/tree/master/ImageJ2_API_beating slides]
* [https://github.com/haesleinhuepf/daisLEARNATHON2019/blob/step2_empty_workspace/src/main/java/de/mpicbg/imagej/CellCountingWorkflow.java Coding a ImageJ2 plugin template]
* [https://github.com/haesleinhuepf/daisLEARNATHON2019/blob/what_we_did_at_dais_learnation_2019/src/main/java/de/mpicbg/imagej/CellCountingWorkflow.java Coding a workflow with ImageJ2]
* [https://github.com/haesleinhuepf/daisLEARNATHON2019/blob/step9_put_results_table/src/main/java/de/mpicbg/imagej/CellCountingWorkflow.java Translating a workflow to the GPU]

'''13:00-14:00 Reading and Writing Images'''

We will now use Simplified-IO, which is, as its creator Gaby Turek sais, putting lipstick on a pig. Never the less, it is very useful if you just want to open an image from disk or from some remote source. It is also useful to save TIFF files. The sole intention of this repository is to make loading and saving simple. (Yes, there are 1000 ways to open an image in ImageJ/Fiji, and this is yet another way... but since it is only wrapping other ways to open/save images, we will attempt to keep simplified-io stable even if we change what actually happens behind the scenes.)

For this little lecture our aim is to:
* Start a new Maven project called <code>io-lecture</code> or similar.
* Either use the POM from an earlier project of yours, or be inspired by this page: [https://imagej.net/Building_a_POM https://imagej.net/Building_a_POM]
* If you do so, be sure that you also create folders <code>src/main/java</code> next to the new POM. Then import into your IDE (e.g. Eclipse).
* Please update the version of the SciJava parent POM to the latest version. Find out what version this is by using [https://maven.scijava.org/#nexus-search;quick~pom-scijava https://maven.scijava.org/#nexus-search;quick~pom-scijava].
* You will have to add the suitable dependency to your POM in order to use Simplified-IO. The readme at [https://github.com/fiji/simplified-io https://github.com/fiji/simplified-io] will tell you more...
* Now please try to open the image at [http://imagej.net/images/t1-head.zip http://imagej.net/images/t1-head.zip] and show it on your screen.
** How to load the image might be seen in the readme at [https://github.com/fiji/simplified-io https://github.com/fiji/simplified-io].
** Soon we will learn more about how to view images, but for now you can, for example, use <code>ij.ui().show( "img", loadedImage )</code>, which is available as soon as you started an ImageJ2 via <code>final ImageJ ij = new ImageJ()</code>.
* Just for fun you might also want to save the image you just loaded.


'''14:00-14:30 Viewing Images'''

Please download the [https://github.com/fiji/learnathon-2019 Learnathon repo].  Or get the code [https://github.com/bnorthan/viewing-images-tutorial here]

The images are [https://www.dropbox.com/sh/7pi29fi88bzu5ns/AABg7pQHwuWo17rEx3Yu6JJAa?dl=0 here]

Unzip and place the 'images' directory beside the learnathon-2019/ directory

Or if you cloned the 'viewing-images' repository independently, place 'images' directory 2 levels up.  

Slides can be found [https://bnorthan.github.io/viewing-images-tutorial/slides/#/ here]

==Tuesday==

==Wednesday==

==Thursday==

== Friday ==
