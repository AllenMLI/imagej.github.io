{{Infobox Plugin
| name                   = Elastic Align and Montage
| software               = Fiji
| author                  = [[User:Saalfeld|Stephan Saalfeld]] ([mailto:saalfeld@mpi-cbg.de])
| maintainer             = [[User:Saalfeld|Stephan Saalfeld]]
| source                 = [http://pacific.mpi-cbg.de/cgi-bin/gitweb.cgi?p=mpicbg.git;a=tree;f=mpicbg/ij/plugin]
| released               = March 11<sup>th</sup>, 2011
| latest version         = March 11<sup>th</sup>, 2011
| status                 = experimental, active
| category               = [[:Category:Plugins|Plugins]], [[:Category:Registration|Registration]]
}}
The plugins '''Elastic Stack Alignment''' and '''Elastic Montage''' implement automatic elastic registration of 2d-images.  The applications are:

;Elastig Montage
:montaging mosaics from overlapping tiles where the tiles have non-linear relative deformation
;Elastic Stack Alignment
:alignment of deformed section series from serially sectioned volumes

Images are warped such that corresponding regions overlap optimally.  The warp for each single image is calculated such that each image in the whole global montage or series will be deformed minimally.  That way, arbitrarily large series of images can be aligned without accumulating artificial warps.

[[Image:Mesh.png|thumb|right|166px|Fig. 1: Triangular section mesh with a resolution of 5 vertices per each long row.]]
==Elastic Deformation with Spring Meshes==

We achieve this globally minimized deformation by simulating the alignment as an elastic system of spring connected vertices.  Zero-length springs connect corresponding locations between two overlapping images and warp the images towards perfect overlap.  Non-zero length springs within the image preserve each images shape at locally rigid transformation.  That way, the system penalizes arbitrary warp and distributes the deformation evenly among all images.

Each image is tessellated into a mesh of regular triangles with each vertex being connected to its neighboring vertices by a spring (see Fig. 1).  A triangle of springs has two families of of cost minima in the plane: 1) at rigid transformations and 2) at rigid transformations flipped.  That is, for all local deformations smaller than the size of a triangle, the mesh will drag towards a rigid transformation.  For larger deformation, it may fold.  The vertices of a triangel define an affine transformation for all pixels in the triangle.

For those vertices overlapping another image, we identify its corresponding location in that image and its mesh.  The vertex is then connected into this mesh by a zero-length spring that ends in an arbitrary triangle of the target mesh.

[[Image:Edge-filter.png|thumb|right|247px|Fig. 2: Edge response filter. The ratio of the two principal curvatures (Hessian eigenvalues) of at a detection determines how well it is defined in both dimensions. A large ratio signalizes an edge response.]]

==Block Matching==

Corresponding locations are searched through block matching.  Initialized from an approximate linear pairwise alignment that is estimated using [[Feature Extraction|local image features]], the local vicinity around each vertex is inspected for an optimal match.  We use the The [http://en.wikipedia.org/wiki/Pearson_product-moment_correlation_coefficient PMCC coefficent] ''r'' of a patch around the vertex and the overlapping patch in the other image as the quality measure for a match.  The location with maximal ''r'' specifies the offset of the vertex relative to the initial linear alignment.  In order to reject wrong matches. three local filters based on the correlation surface are in place:

;minimal threshold for ''r''
:if the match has an ''r'' lower than a given threshold it is rejected
;edge response filter
:if the principal curvatures of ''r(x,y)'' at matches location are related by a factor larger than a given threshold, the match is rejected for being an edge response.<ref name="Lowe2004">{{cite journal
| author = D. Lowe
| title = Distinctive Image Features from Scale-Invariant Keypoints
| journal = International Journal of Computer Vision
| volume = 60
| number = 2
| pages = 91&ndash;110
| year = 2004
| doi = [http://dx.doi.org/10.1023%2FB%3AVISI.0000029664.99615.94 10.1023/B:VISI.0000029664.99615.94]
}}</ref>
;ambiguity filter
:if the second best ''r(x,y)'' is very similar to the best, the match is rejected for being ambiguous.  Similar means related by a factor larger than a given threshold.<ref name="Lowe2004" />


[[Image:Correlation.png|thumb|right|361px|Fig. 3: Match filter based on the correlation surface. Starting from an approximate alignment (e.g. affine), for each vertex of the spring mesh, an offset is searched calculating the PMCC coefficient r of a block at all possible x,y translations in a given local vicinity over the overlapping image. The above windows display six examples of such correlation surfaces for translations in a square region with the origin in the middle. The [http://en.wikipedia.org/wiki/Pearson_product-moment_correlation_coefficient PMCC coefficent] r is grey-coded in the range from -0.7 to 0.7. The candidate for the translational offset is the translation with maximal r. Candidates are rejected if either r was too low (not similar), there was more than one maximum with very similar r (ambiguous), the maximum is not well localized in both dimensions (an edge pattern that fits everywhere alongside the edge). ]]

==References==

<references />
