[[Image:Warping-error-comparison.png|thumb|400px|Application of the topology-preserving warping error. Example A and B have the same amount of pixel with respect the ground truth, but example B has no topological error.]]
The '''warping error''' is a [[:Category:Segmentation|segmentation]] metric that tolerates disagreements over boundary location, penalizes topological disagreements, and can be used directly as a cost function for learning boundary detection<ref name="Viren2010">{{cite journal
|author = Jain, Viren and Bollmann, Benjamin and Richardson, Mark and Berger,
	Daniel R. and Helmstaedter, Moritz N. and Briggman, Kevin L. and
	Denk, Winfried and Bowden, Jared B. and Mendenhall, John M. and Abraham,
	Wickliffe C. and Harris, Kristen M. and Kasthuri, Narayanan and Hayworth, Ken J. and Schalek, Richard and Tapia, Juan Carlos and Lichtman,
	Jeff W. and Seung, H. Sebastian
| title = Boundary Learning by Optimization with Topological Constraints
| booktitle = 2010 IEEE CONFERENCE ON COMPUTER VISION AND PATTERN RECOGNITION
	(CVPR)
|  year = 2010
|  series = IEEE Conference on Computer Vision and Pattern Recognition
|  pages = 2488-2495
|  organization = IEEE Comp Soc
|  doi = 10.1109/CVPR.2010.5539950
}}</ref>.

In other words, instead of focusing on the geometric differences (pixel disagreement) between two segmentations, the '''warping error''' focuses on the objects and measures the topological error between them.

== Pixel error ==
The simplest way of evaluating a segmentation is by measuring the pixel error between the original labels and the segmented ones. Let <math>l_i</math> denote the value of the boundary labeling ''L'' at image location ''i''. The pixel error of ''L'' with respect to another binary labeling ''L''<sup>*</sup> is the number of pixel locations at which the two labelings disagree. This can also be written as the squared [http://en.wikipedia.org/wiki/Euclidean_distance Euclidean distance] <math>\parallel L - L^*\parallel^2</math>, which is equivalent to the [http://en.wikipedia.org/wiki/Hamming_distance Hamming distance] since the labels are binary-valued. 
The pixel error is appealing because of its simplicity, but suffers from a serious defect. It is overly sensitive to minor displacements in the location of a boundary that are ubiquitous even when comparing one human boundary labeling to another. These disagreements cause no qualitative differences in the interpretation of the image, but can lead to large quantitative differences in pixel error.

== Digital topology and the warping error ==
Jain ''et al.'' <ref name="Viren2010" /> introduced the '''warping error''', another metric for comparing boundary labelings based on concepts from the field of [http://en.wikipedia.org/wiki/Digital_topology digital topology]. 

If ''L''<sup>*</sup> can be transformed into <math>L</math> by a sequence of pixel flips that each

1. preserve a set of desired topological properties

2. occur only at locations within a mask ''M'',

then we will say ''L'' is a ''warping of'' ''L''<sup>*</sup>, or <math>L 	\triangleleft L^*</math>. The first condition constrains ''L'' and ''L''<sup>*</sup> to be '''topologically equivalent'''. The second condition can be used to constrain ''L'' to be geometrically similar to ''L''<sup>*</sup>. Both conditions will be explained in more detail below.

Now consider the pixel error of ''T'' relative to warpings of ''L''<sup>*</sup>. The ''warping error'' between some candidate labeling ''T'' and a reference labeling ''L''<sup>*</sup> is the [http://en.wikipedia.org/wiki/Hamming_distance Hamming distance] (or equivalently squared [http://en.wikipedia.org/wiki/Euclidean_distance Euclidean distance]) between ''L''<sup>*</sup> and the "best warping" of ''L''<sup>*</sup> onto ''T'':

<math>D(T \parallel L^*) = \underset{L \triangleleft L^*}{min} \parallel T-L \parallel ^2 </math>                     (Eq. 1)

In other words, the warping error between two segmentations is the '''minimum mean square error between the pixels of the target segmentation and the pixels of a topology-preserving warped source segmentation'''.

===Topological constraints===
To impose topological constraints on the warping, we use concepts from [http://en.wikipedia.org/wiki/Digital_topology digital topology], a field that extends the concepts of continuous-space topology to digital images. One of the most fundamental principles of this field is that
complementary definitions of adjacency must be used for foreground (“1”) and background (“0”) pixels, so that a digital analog of the [http://en.wikipedia.org/wiki/Jordan_Curve_Theorem Jordan Curve Theorem] holds. We use the 4-adjacency for foreground and the 8-adjacency for background, and calculate [http://en.wikipedia.org/wiki/Connected-component_labeling connected components] based on these adjacencies.

A major practical goal of digital topology is to identify methods of altering the ''geometry'' of objects within a digital image without altering any topological properties of the image. A '''simple point''' is defined as a location in a binary image at which the pixel can be flipped to its complementary value without changing any topological properties of the image. These properties include, for example, the number of <math>\kappa</math>-connected components of the foreground and the number of <math>\bar{\kappa}</math>-connected components of the background.

Although flipping a single simple point is guaranteed to preserve topology, it is not true that simultaneously flipping an arbitrary set of ''multiple'' simple points will preserve topology. Hence, many algorithms that deform digital images
by altering simple points instead perform a sequence of flips, where any particular flip is made at a point that is simple relative to the current state of the image. Since all flips preserve topology, such a sequence of flips is a topology-preserving deformation of the original image (sometimes
called a [http://en.wikipedia.org/wiki/Homotopy homotopic deformation]). The converse has also been proven: two images that are topologically equivalent
in the sense of sharing isomorphic adjacency trees can always be transformed into each other by a sequence of changes in the values of simple pixels.

In short, by definition '''flipping a simple point is a topology-preserving operation and flipping a non-simple point is not topology-preserving'''. Non-simple points can be classified by the nature of the topological change they
would cause by being flipped. The possible topological changes are '''splitting, merging, hole addition/deletion, or object addition/deletion'''. We may wish to allow some of these types of changes, and therefore flipping of some types of non-simple pixels.

We will write simple(''L'') to denote the set of simple points of ''L''.

===Geometric constraints===
There are many ways to define the mask, depending on the exact nature of the desired geometric constraints. In our implementation below, we choose ''M'' to be the set of all pixels within [http://en.wikipedia.org/wiki/Euclidean_distance Euclidean distance] 5 from the background of ''L''. This allows the foreground of ''L'' to expand arbitrarily, as long as topology is preserved. But the foreground can shrink by only a limited amount. Note that basing ''M'' on ''L'' makes warping an asymmetric relation.

===Descent algorithm for warping===
[[Image:Warping-error-animation.gif|thumb|300px|Example of the topology-preserving warping of one (binary) source image onto a target one.]]
We do not know of an efficient algorithm for finding the global minimum in Eq. (1), and indeed this is likely to be an NP-hard problem. However, there is a very simple descent algorithm for finding local minima. During warping, we are
allowed to flip simple points of ''L'' that lie inside the mask ''M'', i.e., points in the set <math>simple(L) \cap M</math>. Flipping any such pixel ''j'' of ''L'' satisfying <math> \mid t_j - l_j \mid > 0.5 </math> produces a new warping with smaller error. The descent algorithm greedily picks the pixel for which this error reduction is the largest, breaking ties randomly.

Algorithm:
:<math>warp(L^* \in B,T \in A,M \in B)</math>
:<math>L</math> := <math>L^*</math>
:do
::<math>S := simple(L) \cap M</math>
::<math>i := argmax_{j \in S} \mid t_j - l_j \mid</math> , breaking ties randomly
::if <math>\mid t_i - l_i \mid > 0.5</math>
:::<math>l_i := 1 - l_i</math>
::else
:::return <math>L</math>
::end

Since <math>\parallel T-L \parallel ^2</math> is decreasing, the algorithm is guaranteed to converge to a local minimum of the warping error. How problematic is the lack of an efficient algorithm for finding a global minimum? We do not think that it is a problem in practice. The warpings found by our descent
algorithm look reasonable to the eye. In spite of the random choice of flipped pixels, the results are highly reproducible in practice.

===Warping error versus Rand error===
At first glance, it may seem that the warping error measures only boundary detection performance. But we would like to argue that it is also a good measure of segmentation performance. This is because digital topology tells us
how any single pixel affects the global topology of an image.
The warping error is an upper bound on the number of topologically-relevant
boundary labeling errors in T (if a geometric mask is used, then the warping error also includes labeling errors of a geometric nature). Therefore, if segmentations are generated from ''T'' and ''L''<sup>*</sup> by finding their connected components, then the warping error should be a reasonable measure of the topological disagreements between the segmentations.

The [http://en.wikipedia.org/wiki/Rand_index Rand error] is becoming more popular as a metric of segmentation performance, and can be used as a cost function for gradient learning of image segmentation.
The [http://en.wikipedia.org/wiki/Rand_index Rand error] can be used to compare segmentations in which regions are noncontiguous clusters of pixels. Such segmentations are not equivalent to boundary labelings, so the warping error cannot be applied. In many applications, such as the one studied below, this is not a significant limitation.

The warping error can be distinguished from the [http://en.wikipedia.org/wiki/Rand_index Rand error] in other respects. The warping error can penalize all kinds of topological errors, including the presence of holes and handles, but the [http://en.wikipedia.org/wiki/Rand_index Rand error] penalizes only connectivity errors. In certain medical imaging situations, control of such aspects of topology is especially important. The [http://en.wikipedia.org/wiki/Rand_index Rand error] mildly penalizes shifts in boundary location, while the warping error ignores them altogether. The warping
error weights a topological error by the number of pixels involved in the error itself, while the [http://en.wikipedia.org/wiki/Rand_index Rand error] weights a split or merger by the number of pixels in the objects associated with the errors.

==References==

<references />

[[Category:Segmentation]]
