{{Infobox Plugin
| name                   = Selective Plane Illumination Microscopy Registration
| software               = ImageJ
| author                 = Stephan Preibisch
| maintainer             = Stephan Preibisch
| filename               = SPIM_Registration.jar
| released               = February 2010
| latest version         = February 2010
| category               = [[:Category:Registration|SPIM Registration]]
| website                = [http://fly.mpi-cbg.de/~preibisch Stephan Preibisch's homepage]
}}

== Introduction ==

Selective Plane Illumination Microscopy (SPIM) allows ''in toto'' imaging of large specimens by acquiring image stacks from multiple angles. We developed an algorithm for registration of multi-angle SPIM acquisitions using fluorescent beads in rigid mounting medium as fiduciary markers. The beads are matched by invariant, local geometric point descriptors and their displacement is minimized for globally optimal, sample-independent registration. The matching is computed very efficiently using a variation of geometric hashing reducing the matching problem to logarithmic complexity; the computation of the registration for a time point on a single computer takes less time than it takes to acquire the images making it suitable for real-time use. The framework can also be applied to register time-points to each other thus providing optimal alignment of time series.

The developed bead-based registration framework is able to reconstruct long-term, time-lapse, multi-view acquisitions of developing samples with yet unattainable temporal and spatial resolution allowing new insights into the development of biological specimen.

== Overview of the SPIM Registration Plugin ==

The SPIM Registration plugin reconstructs an image from several input images, called views. For this reconstruction process some parameters defining the input and output data are required. The user has to define the naming convention of the input images, an approximate bead-brightness as well as the strategies for creating the fused output image. 

=== Creating a cropped output image ===

As the output images are typically very big (bounding box around all registered views) it is strongly recommended to define a cropping area where the imaged sample is positioned in the output image. As this is not possible in the first run, there is an option to first create a down-sampled version of the output image from which one can extract the cropping area. By running the plugin again and loading the previous registration parameters the cropped full-resolution output image can be created efficiently.

=== Processing a Time Lapse Acqusition ===

To process a time lapse

There are two plugins which take those input parameters in different formats:

* '''[[SPIM Registration#Registration | SPIM Registration]]''': Allows the registration of SPIM data with a subset of necessary options presented in the graphical user interface
* '''[[SPIM Registration#Registration | Advanced SPIM Registration]]''': Registration of SPIM data using all possible options via loading a configuration file

== SPIM Registration ==
[[Image:SPIM Registration.png|thumb|432px|Shows the SPIM Registration Dialog.]]

* '''SPIM Data Directory''': Fill in the directory name that contains all the image files. You can either drag&drop the directory, browse for it or type the name directly.

* '''Time Points to process''': Define the timepoint(s) that should be processed. You can give single numbers (e.g. 18), enumerate (e.g. 1, 18, 19, 100), define ranges (e.g. 1-18) or combine all of them in any combination wanted (e.g. 1,2,10,20-50).

* '''Pattern of SPIM files''': Define the naming convention of the input files by explaining how the angle and the timepoint is encoded into the filename. For example the file names are named in following way <br>''spim_tl1_angle0.lsm'', ''spim_tl1_angle45.lsm'' ... ''spim_tl1_angle270.lsm''<br>''spim_tl2_angle0.lsm'', ... ''spim_tl2_angle270.lsm''<br>''spim_tl100_angle0.lsm'', ... ''spim_tl100_angle270.lsm''.<br> That means the pattern of the file names corresponds to '''spim_tl{t}_angle{a}.lsm''', where '''{t}''' is replaced with the current timepoint and '''{a}''' with the current angle. If the numbers contain leading zeros (e.g. 000, 045, 090, 135 instead of 0, 45, 90, 135), this can be encoded by simply adding more letters to the placeholder, in this case '''{aaa}'''.

* '''Angles to process''': Define the angles (at least 2) that should be processed (for each timepoint if applicable). You can enumerate angles (e.g. 0, 90, 180, 270), define ranges in steps (e.g. 0-270:45 which means use angle 0 to 270 in steps of 45, i.e. 0, 45, 90, 135, 180, 225, 270) or combine all of them in any combination wanted (e.g. 0, 45, 180-270:45).

* '''Timelapse processing''': Checked if a timelapse processing should be performed. In this case the '''pre-registered''' timepoints are re-registered to one reference timepoint which results in an aligned time series.

* '''Reference Timepoint''': Define the reference timepoint for timelapse processing if timelapse processing above is checked.

* '''Load segmented beads''': If the registration of the time point is carried out more than once (to recompute the registration) the initial segmentation of the beads can be loaded to speed up processing. Note: if '''Load registration''' is checked, '''Load segmented beads''' is implicitly checked as well.

* '''Bead Brightness''': Define the brightness of the used beads relative to the sample.

* '''Load Registration''': If the registration of the time point is carried out more than once (either to define the correct cropping area or to perform timelapse processing) the initial segmentation of the beads and the final affine matrices of the views can be loaded to speed up processing. Note: if '''Load registration''' is checked, '''Load segmented beads''' is implicitly checked as well and '''Display registration''' will be ignored.

* '''Register only (no fusion)''': Checked if no fusion of the data should be performed.

* '''Display registration''': This will display an interactive window visualizing the gloabal optimzation process. '''Note:''' This slows down the optimization.

* '''Fusion Method''': There are three options available. <br> ''Fuse all images at once'' loads all the input images and computes the output image. This is the fastest method but it also needs significant amouts of RAM. <br> ''Fuse images sequentially'' loads one input image after the other and computes the contribution sequentially. This is significantly slower but typically uses less RAM. However, this methods needs to allocate the output image twice during the fusion process as it needs to store image content and weights separatetly. <br> ''Create independent registered images'' is a special output option where each view is transformed into a compatible bounding box and written as a separate file for further processing.

* '''Fusion use Blending''': Checked if blending at the edges of the overlapping views should be applied; this removes brightness differences at the hyperplanes where the overlapping images intersect

* '''Fusion use Content based Weightening''': Checked if the content-based weightening should be used; this weights each pixel of each view by its local information content and thereby increases the contrast of the output image. '''Note:''' The content based weightening is rather fast but consumes a lot of RAM.

* '''Output Image Scaling''': The factor defines the downsampling of the output image, e.g. 2 means that the output image will be half as big in each dimension and therefore need 8x less RAM than the full resolution output image. This is especially useful if the bounding box around the imaged sample (defined below) is not known yet as has to be determined.

* '''Crop Offset Output Image X/Y/Z''': Defines the cropping offset in the x/y/z-dimension of the output image relative to the uncropped image. A value of 0 means no cropping. '''Note:''' All the values are relative to the downsampling factor in '''Output Image Scaling'''.
* '''Crop Size Output Image X/Y/Z''': Defines the cropped size in the x/y/z-dimension of the output image relative to the uncropped image. A value of 0 means no cropping. '''Note:''' All the values are relative to the downsampling factor in '''Output Image Scaling'''.

== Advanced SPIM Registration ==

[[Image:Advanced SPIM Registration.png|thumb|539px|Shows the Advanced SPIM Registration Dialog.]]<br/>
