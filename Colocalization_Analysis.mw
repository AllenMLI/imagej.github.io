== Colocalization Analysis - What is Colocalization anyway? ==


Suppose you are given some images by a colleague, or have some images of your own, and you want to measure the amount of colocalization between two of the dyes or stains in the images. First you have to define what you mean by colocalization, and that is not trivial. One place to start reading about coloclaization is here: [https://info.med.tu-dresden.de/MTZimaging/images/2/25/White_QuantitativeColocAnalysis0408a.pdf QuantitativeColocAnalysis] and for how to correctly capture quantitative fluorescence microscopy images suitable for colocalization analysis, look here: [https://info.med.tu-dresden.de/MTZimaging/images/6/63/White_QuantitativeColocAnalysis0408b.pdf Quantitative Imaging]

Also you should read these 2 papers very carefully: [[Image:Manders.pdf]] and [[Image:Costes etalColoc.pdf]], since we are going to use these methods for the analysis in this tutorial. Don't be scared by the maths, its actually very simple :-)

First, lets open a sample data set that we know should have very good colocalization because the 2 subunits of a dimeric protein are dyes with green and red dyes respectively. The methods of Manders and Costes should work very well for this sample, but maybe we can see some problems with the data? Maybe we can get an idea of if the data is good for this analysis or not? 

'''Open this sample data file [http://pacific.mpi-cbg.de/samples/colocsample1bRGB_BG.tif colocsample1bRGB_BG.tif].''' Then use the "Image-Color-Split Channels" menu command to get a separate z stack for the 2 dyes (you can throw the blue one away!).

If you like, you can change the look up tables of the images (LUTs) so one is "green" and one is "red". Of course the colours here are always false, and only useful to use as apes with trichomatic vision to tell which channel is which: We are evolved to find red fruit in green trees. The detectors we use only see photons, and don't know what colour they are... that is determined by the fluorescence emission filters we use. There is no such thing as a green dye or a red dye, since they have broad emission spectra not a single wavelength corresponding to a certain "colour". 

[[Image:SplitChannels.png|300px]]

----

'''Questions you should ask before attempting colocalization analysis from 2 colour channel images, using the pixel intensity spatial correlation methods of Manders and Costes:'''

*Q) Has there been lossy compression?
*Q) Is the intensity information saturated / clipped / overexposed?
*Q) Is there a problem with uniform background / detector offset?

----

To Begin with, we should check the images for problems that might make the colocalisation analysis methods fail or be unreliable. We should looks for wrong offset / high background (as this confuses the auto threshold method, since zero signal is not zero pixel intensity but some larger number, see below), clipping/saturation (pixel intensity correlation measurements rely on the pixel intensities being true and not clipped to 255 when they were really higher!). We did this in the [[DetectInformationLoss]] tutorial, so do that first if you didn't already!  

Are the images spatially calibrated? If not then we need to calibrate them so we know how the spatial sampling rate (think pixel or voxel size) in x, y and z. See the [[SpatialCalibration]] tutorial for how to do that. We need the images to be spatially calibrated in order for the Costes statistical significance test (below) method to work properly, 

We need to think carefully about the correct or adequate spatial resolution in x, y and probably z. This depends on the [http://en.wikipedia.org/wiki/Numerical_aperture Numerical Aperture] of the objective lens at the high resolution limit (bigger NA, higher spatial resolution the lens can see and you can digitise, or on the smallest size of the objects you are interested in.

[http://en.wikipedia.org/wiki/Nyquist–Shannon_sampling_theorem Nyqvist] tells us the spatial sampling should be about three times smaller then the smallest object we want to resolve. Remember, spatial intensity correlation analysis, as we will perform here, can not tell you that 2 proteins are bound together in some biophysical bonding interaction... rather, it might suggest that the 2 molecules occur with the same relative amounts when they are present the set of spatial samples (pixels or voxels) above the thresholds we will calculate below. However, it is a hint in the "maybe they are binding partners or in the same macromolecular complex" direction, and you SHOULD follow up by determining true binding using [http://en.wikipedia.org/wiki/FLIM FLIM], [http://en.wikipedia.org/wiki/Förster_resonance_energy_transfer FRET] and biochemical methods like Immuno co-Precipitation etc.

There is another (badly behaved) sample file here which we will use later: [http://pacific.mpi-cbg.de/samples/150707_WTstack.lsm 150707_WTstack.lsm].



== Colocalization Analysis - Using the methods of Manders and Costes, for spatial intensity correlation analysis, automatic thresholding and statistical significance testing. ==



<ol>
<li>
'''[[Colocalization Threshold]] plugin:''' 

<p>
This plugin performs several functions for you in one go. With the "green" and "red" stacks of the [http://pacific.mpi-cbg.de/samples/colocsample1bRGB_BG.tif colocsample1bRGB_BG.tif] dataset open and the channels split (see above) choose the menu item "Analyze-Colocalization-Colocalization Threshold". Next select the right stacks for the analysis in Channel1 and Channel2, You can use a region of interest (ROI) if you like, which should be defined before you run the plugin. Check on "Show Colocalized Pixels" and "Show Scatter Plot", and others off. You can explore the options in Set options. Turn ALL the options on the first time you use it, so you see what it can do. 
</p>

<p>
[[Image:Coloc1.png|300px]]
[[Image:Coloc1b.png|300px]]
[[Image:Coloc2.png|300px]]
<\p>

   <ol>

   <li>
It generates a 2D Histogram / Scatterplot / Fluorogram. this is a really good way to visualise the correlation of the pixel intensities, over all pixels/voxels in the image, and can tell you immediately about problems such as intensity saturation/clipping, wrong offset, emission bleedthrough (fluorescence signal from the wrong dye in the detection channel), and even if there are multiple populations of coloclaizing species with different ratios of dyes in the same sample. Think of it just like a FACS or Flow cytometry scatter plot; indeed it is very similar.
   </li>

   <li>
It makes a linear regression fit of the data in the scatter plot. That is the diagonal white line in the scatter plot, the gradient of which is the ratio of the intensities of the 2 channels. 
   </li>

    <li>
It does the Costes method auto threshold determination. The thresholds are the intensity levels above which for both channels you say the two dyes are "colocalized". This method uses an iterative procedure to determine what pair of thresholds for the 2 channels of the scatterplot give a [http://en.wikipedia.org/wiki/Correlation Pearson's correlation coefficient (r)] of zero for the pixels below the thresholds. That means that all the pixels which have intensities above the two thresholds have greater than zero correlation, and the pixels below the thresholds have none or anti correlated intensities. The method is pretty robust (so long as you don't stupidly defeat it, ie. with image data with high offsets / background), and is fully reproducible, meaning you will always get the same thresholds for the same data set, and similar thresholds for similar datasets. Threshold setting is a big problem in colocalization analysis. If you use a tool that allows you to manually set the thresholds, obviously you can get any result you like, since you are subjectively deciding what is colocalized and what isn't. This might please your boss, but it's not very scientific is it? So don't do that! Use the Costes auto threshold instead! Some people say the Costes method sets the thresholds too low, and lower than they would set them by eye. That might be true, but manual methods are subjective and totally unreliable. THe thresholds that Costes method sets always mean the correlation below the thresholds is zero. Thats a good thing. 
   </li>

   <li>
The plugin finally sends a bunch of statistics and results to the results window. You need to turn them all on using the "set options" checkbox of the plugin GUI. Some of these resutls are pretty uninformative. They are listed here, in arguably order of usefullness:

         <ol>


          <li>
The thresholded Mander's split colocalisation coefficients (zero is no colocalization, one means perfect colocalization. There is one coefficient per channel, which tells you the proportion of signal in that channels that colocalizes with the other channel. Of course this might be different for the two channels! The thresholded Mander's coefficients are probably the numbers you would publish (not the Pearson's coefficients as these are less informative).
          </li>
    
            <li>
The thresholds that were set by the Costes Auto threshold method. 
            </li>
 
             <li>
The Pearson's coefficients for: the whole image, image above thresholds (should be close to 1 for very good colocalizing dyes) and image below thresholds (should be around zero, because that's how the Costes auto threshold method tries to set them... so if it is not close to zero, something went wrong!)
            </li>

             <li>
Linear regression solution: If the image data are close to ideal, with comparable total intensity in both channels and no problems with offset/background, then by definition, the gradient of the regression line will be close to 0.5 and the intercept will be close to zero. These are both good things for the quality of the result. This information might be less useful in other situations, eg where there is only sparse data in one channel, or there are multiple colocalizing populations of signals (several clearly independent patches/blobs in the scatterplot).
           </li>

           <li>
The % volume and intensity colocalized values are pretty useless as they are very dependent on how much background there is in the image, and you will get totally different values for different images of the same sample, that happen to have different areas of background. Maybe % intensity above threshold colocalized might be useful..?
           </li>
         
           </ol>

   </li>

  
   </ol>

----

<li>
''' Real problems and pitfalls using the Manders and Costes methods for colocalization analysis. '''

    <ol>

        <li>
      The auto threshold calculation method can fail if you feed it inappropriate information. That means it does not like images with high offset / high flat background, which adds a constant number to the "real proportional" intensity relationship to the abundance of the dye. If pixels that contain no real signal have large intensity values, the algorithm has no way of knowing that, and can reach a result for the thresholds where one or both of them is below the value of the lowest intensity value present in that channels of the image. This means that ALL of that channel's pixels are considered to be colocalised, then the Manders Coefficients that you get will reflect that aberrant situation. In these cases, the background / offset should be carefully removed/subtracted before running the [[Colocalization Threshold]] plugin. The images below are an example of this situation, using the badly behaved data set:[http://pacific.mpi-cbg.de/samples/150707_WTstack.lsm 150707_WTstack.lsm]. Note that the vaules for M1 and tM1 are the same! This should not be the case. You can see the green channel threshold is wrongly set below the intensity where the image data actually starts :-O

[[Image:BadOffsetConfusesCostesAutoThreshold.png|300px]]
     </li>      

     <li>
This naturally brings us to the topic Regions of Interest (ROIs), and wether or not to consider zero - zero pixels as part of the interesting data for the algorithms to deal with. If you think about it, in a fluorescence image there is typically quite a large area which is black in both channels... for instance where there is space between cells, or just no signal in either channel since that area is not part of an interesting area of the sample. A philosophical point... but a significant one: Why bother taking images of black areas? Why bother analyzing black areas for colocalization?  Surely you are not interested in those regions, as they contain no information of use to you? If you perform these pixel intensity correlation methods and include zero zero pixels, then of course these pixels have a very high correlation! They have the same value. But they are totally uninteresting! Sure, the auto threshold method excludes them from the tM1 and tM2 figures, but why include them in the first place? Probably better not to include them unless there is a good reason to do that. Why not just image the area, or just analyze the area where your biology is happening? If you analyse an image with large areas of close to zero and zero intensities, then the autothreshold method will tend to lower the thresholds to include more of that non interesting background. If you image the same sample, but only image a patch of the interesting part, say cytoplasm, then the autothreshold will probably give higher thresholds, and exclude more non interesting background, so the thresholded Manders coefficients will better reflect the biologically interesting parts of the image data - right? You can analyze only a region of interest by making an ROI then selecting the use ROI option in the plugin. You can use a regualr shape (rectangle or ellipse) or even a freehand ROI to manually select the interesting part of the image and ignore the part you know is background. Yes, this is a subjective decision, so be careful! You can see in the following example screenshot that for the same misbehaving dataset, using an ROI which roughly gets just the cell, the thresholds were calculated properly and the tM1 and tM2 are sensible and lower then 1.00:  

[[Image:ColocWithROI.png|300px]]
     </li>


     
      </ol>



----

<li>'''[[Colocalization Test]] plugin:''' 
</p>
    

   <p>
To perform the Costes test for statistical significance (which you should ALWAYS do after calculating the thresholded Manders coefficients and the scatterplot), choose menu item: "Analyse-Colocalization-Colocalization Test"
   </p>

   <p>
[[Image:ColocTestGUI1.png|400px]]
   </p>

   <p>
Choose the correct Channel 1 and Channel 2 images stacks from the drop down lists. Make sure "Current Slice Only" is off, and "Keep Example Randomized Image" and Show All R values" are on. Then click "OK"
</p>

[[Image:ColocTestGUI2.png|200px]]

<p>
The results window will then display the calculated P-value, and some other details of the test calculation. 
</p>

[[Image:ColocTestResult.png|400px]]

   <p> The Costes method for [[http://en.wikipedia.org/wiki/Statistical_significance Statistical Significance]] relies on the spatial calibration of the image, knowledge of the [[http://en.wikipedia.org/wiki/Numerical_aperture  Numerical Aperture (N.A.)]] of the objective lens, and the fluorescence emission wavelength to calculate how many pixels the [http://en.wikipedia.org/wiki/Point_spread_function point spread function] covers in the image. Then it takes the image in one of the channels, and randomizes it by moving PSF sized chunks of the image to random locations in a new random test image. Then it calculates the [[http://en.wikipedia.org/wiki/Correlation Pearson's correlation coefficient (r)]] between the randomized image and the original image of the other channel. If the correlation of the randomized image with the real image of the other channel is as good as or better then the correlation betwen the two real images, then any correlation that you measure is no better then what you would have got by chance for this image.  This test is performed many (100) times, and the P-value is output, which is the proportion of random images that had better correlation than the real image. A P-value of 1.00 means that nono of the randomized images had better correlation. 0.95 is the normal statistical confidence limit of 95%. Anything lower than that, and the correlation / colocalization that you measure in the real images is not likely to be better than random chance, and thus is probably not interesting. 
    </p>

   <p>
In this case the P-value should be 1.00. Since you told it to display the Pearsons correlation (r) values (R values here), they are in another window. You can see they are all close to zero, and in the results you can see that on average the randomized R value is about zers, meaning that the randomized images all had no correlation wioth the real image. Which is a good thing! 
   </p>

   <p>
Other available methods, such as Fay and Van Steensel, do the same thing but randomize the image in less rigorous but very simple ways, which may lead to errors such as over or under estimation of the P-value. However, they are faster than the Costes method. 

   </p>

   <p>
Again, as for the [[Colocalization Threshold]] plugin, using an ROI here may well make very good sense, as you are only interested in the correlation between the 2 colour channels in parts of the image where the biology you are interested in is located. Background its typically uninteresting, and you can exclude it from the analysis. Its probably sensible to to use the same ROI as you used in the [[Colocalization Threshold]] plugin!

   </p>

</li>

</ol>





[[Category:Tutorials]]
[[Category:Color processing]]
