{{Infobox Plugin
| software               = ImageJ
| name                   = Auto Threshold
| author                 = Gabriel Landini, plus others (see below)
| maintainer             = Gabriel Landini (G.Landini at bham. ac. uk)
| filename               = Auto_Threshold.jar
| source                 = [http://pacific.mpi-cbg.de/cgi-bin/gitweb.cgi?p=fiji.git;a=tree;f=src-plugins/Auto_Threshold;hb=HEAD on gitweb] (1 file)
| latest version         = v1.1 (08 April 2009)
| status                 = active 
}}

== Purpose ==
This plugin binarises 8-bit images using various global (histogram-derived) thresholding methods.


== Installation ==
'''ImageJ''': requires v1.42m or newer. Copy the Auto_Threshold.jar file from http://www.dentistry.bham.ac.uk/landinig/software/auto_threshold.jar into the ImageJ/Plugins folder and either restart ImageJ or run the '''Help>Update Menus''' command. After this a new command should appear in '''Image>Adjust>Auto Threshold'''.

'''Fiji''': this plugin is part of the Fiji distribution, there is no need to download.

== Use ==
'''Method''' selects the algorithm to be applied (detailed below).

The '''Ignore black''' and '''Ignore white''' options set the image histogram bins for [0] and [255] greylevels to 0 respectively. This may be useful if the digitised image has under- or over- exposed pixels.

'''White object on black background''' sets to white the pixels with values above the threshold value (otherwise, it sets to white the values less or equal to the threshold).

'''Set Threshold instead of Threshold (single images)''' sets the thresholding LUT, without changing the pixel data. This works only for single images.

It you are using a stack, an additional option '''Stack''' can be used to process all the slices (the threshold of each slice will be computed separately). If this option is left unchecked, only the current slice will be processed.

== Available methods ==

=== Try all ===
Which method segments your data best? You can attempt to answer this question using the '''Try all''' option.
This produces a montage with the results from all the methods, so one can explore how the different algorithms perform on an image or stack.
If you use stacks, you will realise that sometimes it might not be a good idea to segment each slice separately rather than with a single threshold for all slices (try the mri-stack.tif from the sample images to understand this issue).


[[Image:lymp.png]]

Original image


[[Image:lympm.png]]

Try all methods.

=== Huang ===
Implements Huang's fuzzy thresholding method. This uses Shannon's entropy function (one can also use Yager's entropy function).

* {{Citation
| last = Huang
| first = L-K
| last2 = Wang
| first2 = M-J J
| year = 1995
| journal = Pattern Recognition
| url = http://portal.acm.org/citation.cfm?id=638891
| title = Image thresholding by maximizing the index of nonfuzziness of the 2-D grayscale histogram
| volume = 28(1)
| pages = 41-51
}}

Ported from ME Celebi's fourier_0.8 routines linked [http://sourceforge.net/projects/fourier-ipal and http://www.lsus.edu/faculty/~ecelebi/fourier.htm].


=== Intermodes ===
This assumes a bimodal histogram. The histogram is iteratively smoothed using a running average of size 3, until there are only two local maxima: j and k. The threshold t is then computed as (j+k)/2. Images with histograms having extremely unequal peaks or a broad and ﬂat valley are unsuitable for this method.

* {{Citation
| last = Prewitt
| first = JMS
| last2 = Mendelsohn
| first2 = ML
| year = 1966
| journal = Annals of the New York Academy of Sciences
| url = http://www3.interscience.wiley.com/journal/119758871/abstract?CRETRY=1&SRETRY=0
| title = The analysis of cell images
| volume = 128
| pages = 1035-1053
}}

Ported from Antti Niemist&ouml;'s Matlab code. See [http://www.cs.tut.fi/~ant/histthresh/ here] for an excellent slide presentation and the original Matlab code.


=== IsoData ===
Iterative procedure based on the isodata algorithm of:

* {{Citation
| last = Ridler
| first = TW
| last2 = Calvard
| first2 = S
| year = 1978
| journal = IEEE Transactions on Systems, Man and Cybernetics
| url = http://ieeexplore.ieee.org/xpls/abs_all.jsp?arnumber=4310039
| title = Picture thresholding using an iterative selection method
| volume = 8
| pages = 630-6032
}}

This should return the same values as the '''Image>Adjust>Threshold>Auto''', but it was implemented here to allow pre-selecting the bright or dark phases in the image. (ImageJ tries to guess which is the object and which is the background).

The procedure divides the image into objects and background by taking an initial threshold,then the averages of the pixels at or below the threshold and pixels above are computed. The averages of those two values are computed, the threshold is incremented and the process is repeated until the threshold is larger than the composite average. That is, threshold = (average background + average objects)/2. 
The code in ImageJ that implements this function is the '''getAutoThreshold()''' method in the '''ImageProcessor''' class. 

Posted to sci.image.processing on 1996/06/24 by Tim Morris:

 Subject: Re: Thresholding method?
 The algorithm implemented in NIH Image sets the threshold as 
 that grey value, G, for which the average of the averages of
 the grey values below and above G is equal to G. It does this
 by initialising G to the lowest sensible value and iterating:
 L = the average grey value of pixels with intensities < G
 H = the average grey value of pixels with intensities > G
 is G = (L + H)/2?
 yes => exit
 no => increment G and repeat


=== Li ===
Implements Li's Minimum Cross Entropy thresholding method based on the iterative version (2nd reference below) of the algorithm.


* {{Citation
| last = Li
| first = CH
| last2 = Lee
| first2 = CK
| year = 1993
| journal = Pattern Recognition
| title = Minimum Cross Entropy Thresholding
| volume = 26(4)
| pages = 617-625
}}

* {{Citation
| last = Li
| first = CH
| last2 = Tam
| first2 = PKS
| year = 1998
| journal = Pattern Recognition Letters
| title = An Iterative Algorithm for Minimum Cross Entropy Thresholding
| volume = 18(8)
| pages = 771-776
}}

* {{Citation
| last = Sezgin
| first = M
| last2 = Sankur
| first2 = B
| year = 2004
| journal = Journal of Electronic Imaging
| title = Survey over Image Thresholding Techniques and Quantitative Performance Evaluation
| volume = 13(1)
| pages = 146-165
| url = http://citeseer.ist.psu.edu/sezgin04survey.html
}}

Ported from ME Celebi's fourier_0.8 routines [http://sourceforge.net/projects/fourier-ipal] and [http://www.lsus.edu/faculty/~ecelebi/fourier.htm].


=== MaxEntropy ===
Implements Kapur-Sahoo-Wong (Maximum Entropy) thresholding method:

* {{Citation
| last = Kapur
| first = JN
| last2 = Sahoo
| first2 = PK
| last3 = Wong
| first3 = ACK
| year = 1985
| journal = Graphical Models and Image Processing
| title = A New Method for Gray-Level Picture Thresholding Using the Entropy of the Histogram
| volume = 29(3)
| pages = 273-285
}}

Ported from ME Celebi's fourier_0.8 routines [http://sourceforge.net/projects/fourier-ipal] and [http://www.lsus.edu/faculty/~ecelebi/fourier.htm].


=== Minimum ===
Similarly to the Intermodes method, this assumes a bimodal histogram. The histogram is iteratively smoothed using a running average of size 3, until there are only two local maxima. The threshold t is such that yt−1 &gt; yt &lt;&#061; yt+1.

Images with histograms having extremely unequal peaks or a broad and ﬂat valley are unsuitable for this method.

* {{Citation
| last = Prewitt
| first = JMS
| last2 = Mendelsohn
| first2 = ML
| year = 1966
| journal = Annals of the New York Academy of Sciences
| url = http://www3.interscience.wiley.com/journal/119758871/abstract?CRETRY=1&SRETRY=0
| title = The analysis of cell images
| volume = 128
| pages = 1035-1053
}}

Ported from Antti Niemist&ouml;'s Matlab code. See [http://www.cs.tut.fi/~ant/histthresh/ here] for an excellent slide presentation and the original Matlab code.


=== Moments ===
Tsai's method attempts to preserve the moments of the original image in the thresholded result.

* {{Citation
| last = Tsai
| first = W
| year = 1985
| journal = Computer Vision, Graphics, and Image Processing
| url = http://portal.acm.org/citation.cfm?id=201578
| title = Moment-preserving thresholding: a new approach
| volume = 29
| pages = 377-393
}}

Ported from ME Celebi's fourier_0.8 routines [http://sourceforge.net/projects/fourier-ipal] and [http://www.lsus.edu/faculty/~ecelebi/fourier.htm].


=== Otsu ===
Otsu's threshold clustering algorithm searches for the threshold that minimizes the intra-class variance, defined as a weighted sum of variances of the two classes


* {{Citation
| last = Otsu
| first = N
| year = 1979
| journal = IEEE Trans. Sys., Man., Cyber.
| url = http://ieeexplore.ieee.org/xpl/freeabs_all.jsp?&arnumber=4310076
| title = A threshold selection method from gray-level histograms
| volume = 9
| pages = 62-66
| doi = 10.1109/TSMC.1979.4310076
}}

See also the [http://en.wikipedia.org/wiki/Otsu's_method Wikipedia article on Otsu's method].

Ported from C++ code by Jordan Bevik.


=== Percentile ===
Assumes the fraction of foreground pixels to be 0.5.

* {{Citation
| last = Doyle
| first = W
| year = 1962
| journal = Journal of the Association for Computing Machinery
| url = http://portal.acm.org/citation.cfm?id=321119.321123
| title = Operation useful for similarity-invariant pattern recognition
| volume = 9
| pages = 259-267
| doi = 10.1145/321119.321123
}}

Ported from Antti Niemist&ouml;'s Matlab code. See [http://www.cs.tut.fi/~ant/histthresh/ here] for an excellent slide presentation and the original Matlab code.


=== RenyiEntropy ===
Similar to the '''MaxEntropy''' method, but using Renyi's entropy instead.


* {{Citation
| last = Kapur
| first = JN
| last2 = Sahoo
| first2 = PK
| last3 = Wong
| first3 = ACK
| year = 1985
| journal = Graphical Models and Image Processing
| title = A New Method for Gray-Level Picture Thresholding Using the Entropy of the Histogram
| volume = 29(3)
| pages = 273-285
}}

Ported from ME Celebi's fourier_0.8 routines [http://sourceforge.net/projects/fourier-ipal] and [http://www.lsus.edu/faculty/~ecelebi/fourier.htm].

=== Shanbhag ===


{{Citation
| first = Abhijit G.
| last =  Shanbhag 
| title = Utilization of information measure as a means of image thresholding
| journal = Graph. Models Image Process.
| volume = 56
| number = 5
| year = 1994
| issn = 1049-9652
| pages = 414--419
| doi = 10.1006/cgip.1994.1037
| publisher = Academic Press, Inc.
| address = {Orlando, FL, USA},
}}

Ported from ME Celebi's fourier_0.8 routines [http://sourceforge.net/projects/fourier-ipal] and [http://www.lsus.edu/faculty/~ecelebi/fourier.htm].


=== Triangle ===
This is an implementation of the Triangle method:

*{{Citation
|author=Zack GW, Rogers WE, Latt SA
|title=Automatic measurement of sister chromatid exchange frequency
|journal=J. Histochem. Cytochem.
|volume=25
|issue=7
|pages=741–53
|year=1977
|month=July
|pmid=70454
|doi=
|url=http://www.jhc.org/cgi/pmidlookup?view=long&pmid=70454
}}

Incorporated from from Johannes Schindelin plugin [http://wbgn013.biozentrum.uni-wuerzburg.de/ImageJ/triangle-algorithm.html Triangle_Algorithm].

See also: http://www.ph.tn.tudelft.nl/Courses/FIP/noframes/fip-Segmenta.html#Heading118


=== Yen ===
Implements Yen's thresholding method from:

*{{Citation
| author = Yen JC, Chang FJ, Chang S
| title = A New Criterion for Automatic Multilevel Thresholding
| journal = IEEE Trans. on Image Processing
| volume = 4
| issue = 3
| pages = 370-378
| year = 1995
| doi = 10.1109/83.366472
| url=http://ieeexplore.ieee.org/xpl/freeabs_all.jsp?arnumber=366472
| issn = 1057-7149
}}

* {{Citation
| last = Sezgin
| first = M
| last2 = Sankur
| first2 = B
| year = 2004
| journal = Journal of Electronic Imaging
| title = Survey over Image Thresholding Techniques and Quantitative Performance Evaluation
| volume = 13(1)
| pages = 146-165
| url = http://citeseer.ist.psu.edu/sezgin04survey.html
}}

Ported from ME Celebi's fourier_0.8 routines [http://sourceforge.net/projects/fourier-ipal] and [http://www.lsus.edu/faculty/~ecelebi/fourier.htm].






[[Category:Plugins]]
[[Category:Segmentation]]
