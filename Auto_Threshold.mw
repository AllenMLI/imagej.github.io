{{Infobox Plugin
| software               = ImageJ
| name                   = Auto Threshold
| author                 = Gabriel Landini, plus others (see below)
| maintainer             = Gabriel Landini (G.Landini at bham. ac. uk)
| filename               = Auto_Threshold.jar
| source                 = [http://pacific.mpi-cbg.de/cgi-bin/gitweb.cgi?p=fiji.git;a=tree;f=src-plugins/Auto_Threshold;hb=HEAD on gitweb] (1 file)
| latest version         = v1.10 (25 May 2010)
| status                 = active 
}}

== Purpose ==
This plugin binarises 8-bit images using various '''global''' (histogram-derived) thresholding methods. The segmented phase is always shown as white (255).

For '''local''' thresholding rather than global, see  the [http://pacific.mpi-cbg.de/wiki/index.php/Auto_Local_Threshold Auto Local Threshold] plugin.

== Installation ==
'''ImageJ''': requires v1.42m or newer. Copy the Auto_Threshold.jar file from http://www.dentistry.bham.ac.uk/landinig/software/auto_threshold.jar into the ImageJ/Plugins folder and either restart ImageJ or run the '''Help>Update Menus''' command. After this a new command should appear in '''Image>Adjust>Auto Threshold'''.

'''Fiji''': this plugin is part of the Fiji distribution, there is no need to download it.

== Use ==
'''Method''' selects the algorithm to be applied (detailed below).

The '''Ignore black''' and '''Ignore white''' options set the image histogram bins for [0] and [255] greylevels to 0 respectively. This may be useful if the digitised image has under- or over- exposed pixels.

'''White object on black background''' sets to white the pixels with values above the threshold value (otherwise, it sets to white the values less or equal to the threshold).

'''Set Threshold instead of Threshold (single images)''' sets the thresholding LUT, without changing the pixel data. This works only for single images.

It you are processing a stack, two additional options are available: '''Stack''' can be used to process all the slices (the threshold of each slice will be computed separately). If this option is left unchecked, only the current slice will be processed. '''Use stack histogram''' first computes the histogram of the whole stack, then computes the threshold based on that histogram and finally binarises all the slices with that single value. Selecting this option also selects the '''Stack''' option above automatically.


== Available methods ==

=== Try all ===
Which method segments your data best? One can attempt to answer this question using the '''Try all''' option.
This produces a montage with results from all the methods, allowing to explore how the different algorithms perform on a particular image or stack.
When using stacks, in some cases it might not be a good idea to segment each slice individually rather than with a single threshold for all slices (try the mri-stack.tif from the sample images to better understand this issue).


[[Image:lymp.png]]

Original image


[[Image:lympm2.png]]

Try all methods.

When processing stacks with many slices, the montages can become very large (~16 times the original stack size) and one risks running out of RAM. A popup window will appear (when stacks have more than 25 slices) to confirm whether the procedure should display the montaged results. Select '''No''' to compute the threshold values and display them in the log window.


=== Default ===
This is the original method of auto thresholding available in ImageJ, which is a variation of the IsoData algorithm (described below). The '''Default''' option should return the same values as the '''Image>Adjust>Threshold>Auto''', when selecting '''Ignore black''' and '''Ignore white'''.
To indicate segmentation of the desired phase, use the '''White objects on black background''' option.
The IsoData method is also known as ''iterative intermeans''.


=== Huang ===
Implements Huang's fuzzy thresholding method. This uses Shannon's entropy function (one can also use Yager's entropy function).

* {{Citation
| last = Huang
| first = L-K
| last2 = Wang
| first2 = M-J J
| year = 1995
| journal = Pattern Recognition
| url = http://portal.acm.org/citation.cfm?id=638891
| title = Image thresholding by maximizing the index of nonfuzziness of the 2-D grayscale histogram
| volume = 28(1)
| pages = 41-51
}}

Ported from ME Celebi's fourier_0.8 routines [http://sourceforge.net/projects/fourier-ipal] and [http://www.lsus.edu/faculty/~ecelebi/fourier.htm].


=== Intermodes ===
This assumes a bimodal histogram. The histogram is iteratively smoothed using a running average of size 3, until there are only two local maxima: j and k. The threshold t is then computed as (j+k)/2. Images with histograms having extremely unequal peaks or a broad and ﬂat valley are unsuitable for this method.
method
* {{Citation
| last = Prewitt
| first = JMS
| last2 = Mendelsohn
| first2 = ML
| year = 1966
| journal = Annals of the New York Academy of Sciences
| url = http://www3.interscience.wiley.com/journal/119758871/abstract?CRETRY=1&SRETRY=0
| title = The analysis of cell images
| volume = 128
| pages = 1035-1053
}}

Ported from Antti Niemist&ouml;'s Matlab code. See [http://www.cs.tut.fi/~ant/histthresh/ here] for an excellent slide presentation and his original Matlab code.


=== IsoData ===
Iterative procedure based on the isodata algorithm of:

* {{Citation
| last = Ridler
| first = TW
| last2 = Calvard
| first2 = S
| year = 1978
| journal = IEEE Transactions on Systems, Man and Cybernetics
| url = http://ieeexplore.ieee.org/xpls/abs_all.jsp?arnumber=4310039
| title = Picture thresholding using an iterative selection method
| volume = 8
| pages = 630-632
}}

The procedure divides the image into object and background by taking an initial threshold, then the averages of the pixels at or below the threshold and pixels above are computed. The averages of those two values are computed, the threshold is incremented and the process is repeated until the threshold is larger than the composite average. That is,      
 threshold = (average background + average objects)/2. 

Several implementations of this method exist. See the source code for further comments.


=== Li ===
Implements Li's Minimum Cross Entropy thresholding method based on the iterative version (2nd reference below) of the algorithm.

* {{Citation
| last = Li
| first = CH
| last2 = Lee
| first2 = CK
| year = 1993
| journal = Pattern Recognition
| title = Minimum Cross Entropy Thresholding
| volume = 26(4)
| pages = 617-625
}}

* {{Citation
| last = Li
| first = CH
| last2 = Tam
| first2 = PKS
| year = 1998
| journal = Pattern Recognition Letters
| title = An Iterative Algorithm for Minimum Cross Entropy Thresholding
| volume = 18(8)
| pages = 771-776
}}

* {{Citation
| last = Sezgin
| first = M
| last2 = Sankur
| first2 = B
| year = 2004
| journal = Journal of Electronic Imaging
| title = Survey over Image Thresholding Techniques and Quantitative Performance Evaluation
| volume = 13(1)
| pages = 146-165
| url = http://citeseer.ist.psu.edu/sezgin04survey.html
}}

Ported from ME Celebi's fourier_0.8 routines [http://sourceforge.net/projects/fourier-ipal] and [http://www.lsus.edu/faculty/~ecelebi/fourier.htm].


=== MaxEntropy ===
Implements Kapur-Sahoo-Wong (Maximum Entropy) thresholding method:

* {{Citation
| last = Kapur
| first = JN
| last2 = Sahoo
| first2 = PK
| last3 = Wong
| first3 = ACK
| year = 1985
| journal = Graphical Models and Image Processing
| title = A New Method for Gray-Level Picture Thresholding Using the Entropy of the Histogram
| volume = 29(3)
| pages = 273-285
}}

Ported from ME Celebi's fourier_0.8 routines [http://sourceforge.net/projects/fourier-ipal] and [http://www.lsus.edu/faculty/~ecelebi/fourier.htm].


=== Mean ===
Uses the mean of grey levels as the threshold. It is used by some other methods as a first guess threshold.

* {{Citation
| last = Glasbey
| first = CA
| year = 1993
| journal = CVGIP: Graphical Models and Image Processing
| title = An analysis of histogram-based thresholding algorithms
| volume = 55
| pages = 532-537
}}


=== MinError(I) ===
An iterative implementation of Kittler and Illingworth's Minimum Error thresholding.

This implementation seems to converge more often than the original. Nevertheless, sometimes the algorithm does not converge to a solution. In that case a warning is reported to the log window and the result defaults to the initial estimate of the threshold which is computed using the Mean method.
The '''Ignore black''' or '''Ignore white''' options might help to avoid this problem.

* {{Citation
| last = Kittler
| first = J
| last2 = Illingworth
| first2 = J
| year = 1986
| journal = Pattern Recognition
| title = Minimum error thresholding
| volume = 19
| pages = 41-47
}}
Ported from Antti Niemist&ouml;'s Matlab code. See [http://www.cs.tut.fi/~ant/histthresh/ here] for an excellent slide presentation and the original Matlab code.

=== Minimum ===
Similarly to the Intermodes method, this assumes a bimodal histogram. The histogram is iteratively smoothed using a running average of size 3, until there are only two local maxima. The threshold t is such that yt−1 &gt; yt &lt;&#061; yt+1.

Images with histograms having extremely unequal peaks or a broad and ﬂat valley are unsuitable for this method.

* {{Citation
| last = Prewitt
| first = JMS
| last2 = Mendelsohn
| first2 = ML
| year = 1966
| journal = Annals of the New York Academy of Sciences
| url = http://www3.interscience.wiley.com/journal/119758871/abstract?CRETRY=1&SRETRY=0
| title = The analysis of cell images
| volume = 128
| pages = 1035-1053
}}

Ported from Antti Niemist&ouml;'s Matlab code. See [http://www.cs.tut.fi/~ant/histthresh/ here] for an excellent slide presentation and the original Matlab code.


=== Moments ===
Tsai's method attempts to preserve the moments of the original image in the thresholded result.

* {{Citation
| last = Tsai
| first = W
| year = 1985
| journal = Computer Vision, Graphics, and Image Processing
| url = http://portal.acm.org/citation.cfm?id=201578
| title = Moment-preserving thresholding: a new approach
| volume = 29
| pages = 377-393
}}

Ported from ME Celebi's fourier_0.8 routines [http://sourceforge.net/projects/fourier-ipal] and [http://www.lsus.edu/faculty/~ecelebi/fourier.htm].


=== Otsu ===
Otsu's threshold clustering algorithm searches for the threshold that minimizes the intra-class variance, defined as a weighted sum of variances of the two classes.

* {{Citation
| last = Otsu
| first = N
| year = 1979
| journal = IEEE Trans. Sys., Man., Cyber.
| url = http://ieeexplore.ieee.org/xpl/freeabs_all.jsp?&arnumber=4310076
| title = A threshold selection method from gray-level histograms
| volume = 9
| pages = 62-66
| doi = 10.1109/TSMC.1979.4310076
}}

See also the [http://en.wikipedia.org/wiki/Otsu's_method Wikipedia article on Otsu's method].

Ported from C++ code by Jordan Bevik.


=== Percentile ===
Assumes the fraction of foreground pixels to be 0.5.

* {{Citation
| last = Doyle
| first = W
| year = 1962
| journal = Journal of the Association for Computing Machinery
| url = http://portal.acm.org/citation.cfm?id=321119.321123
| title = Operation useful for similarity-invariant pattern recognition
| volume = 9
| pages = 259-267
| doi = 10.1145/321119.321123
}}

Ported from Antti Niemist&ouml;'s Matlab code. See [http://www.cs.tut.fi/~ant/histthresh/ here] for an excellent slide presentation and the original Matlab code.


=== RenyiEntropy ===
Similar to the '''MaxEntropy''' method, but using Renyi's entropy instead.

* {{Citation
| last = Kapur
| first = JN
| last2 = Sahoo
| first2 = PK
| last3 = Wong
| first3 = ACK
| year = 1985
| journal = Graphical Models and Image Processing
| title = A New Method for Gray-Level Picture Thresholding Using the Entropy of the Histogram
| volume = 29(3)
| pages = 273-285
}}

Ported from ME Celebi's fourier_0.8 routines [http://sourceforge.net/projects/fourier-ipal] and [http://www.lsus.edu/faculty/~ecelebi/fourier.htm].


=== Shanbhag ===

{{Citation
| first = Abhijit G.
| last =  Shanbhag 
| title = Utilization of information measure as a means of image thresholding
| journal = Graph. Models Image Process.
| volume = 56
| number = 5
| year = 1994
| issn = 1049-9652
| pages = 414--419
| doi = 10.1006/cgip.1994.1037
| publisher = Academic Press, Inc.
| address = {Orlando, FL, USA},
}}

Ported from ME Celebi's fourier_0.8 routines [http://sourceforge.net/projects/fourier-ipal] and [http://www.lsus.edu/faculty/~ecelebi/fourier.htm].


=== Triangle ===
This is an implementation of the Triangle method:

*{{Citation
|author=Zack GW, Rogers WE, Latt SA
|title=Automatic measurement of sister chromatid exchange frequency
|journal=J. Histochem. Cytochem.
|volume=25
|issue=7
|pages=741–53
|year=1977
|month=July
|pmid=70454
|doi=
|url=http://www.jhc.org/cgi/pmidlookup?view=long&pmid=70454
}}

Modified from from Johannes Schindelin plugin [http://wbgn013.biozentrum.uni-wuerzburg.de/ImageJ/triangle-algorithm.html Triangle_Algorithm].

See also: http://www.ph.tn.tudelft.nl/Courses/FIP/noframes/fip-Segmenta.html#Heading118

The Triangle algorithm, a geometric method, cannot tell whether the data is skewed to one side or another, but assumes a maximum peak (mode) near one end of the histogram and searches towards the other end.
This causes a problem in the absence of information of the type of image to be processed, or when the maximum is not near one of the histogram extremes (resulting in two possible threshold regions between that max and the extremes).
Here the algorithm was extended to find on which side of the max peak the data goes the furthest and searches for the threshold within that largest range.


=== Yen ===
Implements Yen's thresholding method from:

*{{Citation
| author = Yen JC, Chang FJ, Chang S
| title = A New Criterion for Automatic Multilevel Thresholding
| journal = IEEE Trans. on Image Processing
| volume = 4
| issue = 3
| pages = 370-378
| year = 1995
| doi = 10.1109/83.366472
| url=http://ieeexplore.ieee.org/xpl/freeabs_all.jsp?arnumber=366472
| issn = 1057-7149
}}

* {{Citation
| last = Sezgin
| first = M
| last2 = Sankur
| first2 = B
| year = 2004
| journal = Journal of Electronic Imaging
| title = Survey over Image Thresholding Techniques and Quantitative Performance Evaluation
| volume = 13(1)
| pages = 146-165
| url = http://citeseer.ist.psu.edu/sezgin04survey.html
}}

Ported from ME Celebi's fourier_0.8 routines [http://sourceforge.net/projects/fourier-ipal] and [http://www.lsus.edu/faculty/~ecelebi/fourier.htm].






[[Category:Plugins]]
[[Category:Segmentation]]
