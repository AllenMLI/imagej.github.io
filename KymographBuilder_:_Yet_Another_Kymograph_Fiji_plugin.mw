{{Infobox
| name                  = KymographBuilder
| logo                    = 
| software              = Fiji
| author                = {{Person|Hadim}}
| maintainer            = {{Person|Hadim}}
| source                = {{GitHub|org=fiji|repo=KymographBuilder}}
| released              = 24/04/2016
| status                = v1.2.2, stable
| category              = 
}}
__TOC__

== Presentation ==

''KymographBuilder is Yet Another Kymograph Fiji plugin.''

Features are :

* Build kymograph from a straight or segmented line (a polyline).
* Build kymograph for images with multiple channels.
* Take into account the width of the line using maximum projection along its thickness.
* Built from scratch and use the ImageJ2 Ecosystem.
* Fast and easy to use.

How to use :
* Draw a line: it can be a polyline and you can also set the thickness that will be taken into account by the plugin.
* Launch KymographBuilder : {{bc|Plugins|Kymograph|KymographBuilder}}
* You're done.

[[File:Kymograph_Construction.png|center|thumb|600px|]]

== Scripting ==

You can script the plugin. Here is an example :

<source lang="python">
# @Context context
# @Dataset dataset
# @ImageJ ij
# @LogService log

# This script exemplifies how to instruct KymographBuilder to
# process all the line ROIs present in the ROI Manager. For more
# details see http://imagej.net/KymographBuilder
import ij.plugin.frame.RoiManager as RM
import fiji.plugin.kymographbuilder.KymographFactory as KFactory


def validDataset(dataset):
    """Assess if dataset has suitable dimensions"""
    from net.imagej.axis import Axes
    z = dataset.dimension(dataset.dimensionIndex(Axes.Z))
    t = dataset.dimension(dataset.dimensionIndex(Axes.TIME))
    return z * t > 1


rm = RM.getInstance()
counter = 0
if validDataset(dataset) and rm and rm.getCount():
    for roi in rm.getRoisAsArray():
        if roi.isLine():
            kfactory = KFactory(context, dataset, roi)
            kfactory.build()
            counter += 1
            title = "Kymograph" + str(counter).zfill(3) + "_" + roi.getName()
            ij.ui().show(title, kfactory.getKymograph())
    log.info("MultiKymographBuilder Finished. " + str(counter) + " ROIs processed")
else:
    log.error("Either the ROI Manager is empty or " + dataset.getName() +" has invalid dimensions")
</source>

The script can be found in the source code : https://github.com/fiji/KymographBuilder/blob/master/src/main/resources/script_templates/Examples/MultiKymographBuilder.py

== Related links ==
* [[Multi_Kymograph]] : The first kymograph bundled with Fiji, with support for multiple Line ROIs
* Source code on GitHub : https://github.com/fiji/KymographBuilder
* Maven : http://maven.imagej.net/#nexus-search;quick~kymographbuilder
* Jenkins : http://jenkins.imagej.net/job/KymographBuilder/

== Authors ==

KymographBuilder has been created by Hadrien Mary.

This work started in 2016 at the Gary Brouhard laboratory (http://brouhardlab.mcgill.ca) at McGill University.
