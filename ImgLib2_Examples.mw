== Introduction & required files ==

This page shows ten increasingly complex examples of how to program with ImgLib2. The intention of these examples are not to explain ImgLib2 concepts, but rather to give some practical hints how to work with the library. 

All examples presented on this page are always entire classes including a main method to run them. Simply copying them into your favorite editor and compiling it will run them. The required Java libraries (jar files) can be found in Fiji/jars:

* imglib2.jar (the core)
* imglib2-algorithms.jar (algorithms implemented in ImgLib2)
* imglib2-io.jar (input/output using LOCI bioformats)
* imglib2-ij.jar (the ImageJ interaction)
* ij.jar (ImageJ core, used for display)

and Fiji/plugins:

* loci_tools.jar (LOCI bioformats

=== Overview of all examples ===

* '''[[ImgLib2 Examples#Example 1 | Example 1]]''': opening, creating and displaying images

== Example 1 ==

The first example illustrates the most basic operations of opening, creating, and displaying image content in ImgLib2. It will first focus on entires images ('''Img<T>'''), but also show how to display subsets only.

=== Example 1a ===

If you are already an ImageJ programmer, you might find it the easiest way to simply wrap an ImageJ image into ImgLib2. Here, the data is not copied, so editing the image in ImgLib2 will also modify the ImageJ ImagePlus. 

Internally, we use a compatibility Img to represent the data, which is in the case of higher dimensionality (>2d) slower than ImgLib2 can do with the '''ArrayImg'''. Furthermore you are limited in dimensionality (2d-5d), in the type of data ('''UnsignedByteType''', '''UnsignedShortType''', '''FloatType''' and '''ARGBType''') and maximal size of each 2d-plane (max. 46000x46000).

<source lang="java">
import java.io.File;

import net.imglib2.img.ImagePlusAdapter;
import net.imglib2.img.Img;
import net.imglib2.img.display.imagej.ImageJFunctions;
import net.imglib2.type.numeric.RealType;

import ij.ImageJ;
import ij.ImagePlus;
import ij.io.Opener;

/**
 * Opens a file with ImageJ and wraps it into an ImgLib2 Img.
 *
 */
public class Example1a
{
	// within this method we define <T> to be a RealType
	public < T extends RealType< T > > Example1a()
	{
		// define the file to open
		File file = new File( "DrosophilaWing.tif" );

		// open a file with ImageJ
		final ImagePlus imp = new Opener().openImage( file.getAbsolutePath() );

		// display it via ImageJ
		imp.show();

		// wrap it into an ImgLib image (no copying)
		final Img< T > image = ImagePlusAdapter.wrap( imp );

		// display it via ImgLib using ImageJ
		ImageJFunctions.show( image );
	}

	public static void main( String[] args )
	{
		// open an ImageJ window
		new ImageJ();

		// run the example
		new Example1a();
	}
}
</source>
