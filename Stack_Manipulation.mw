{{Infobox Plugin
| software               = ImageJ
| name                   = Stack manipulation
| author                 = various (see below)
| maintainer             = Jean-Yves Tinevez ([mailto:tinevez@mpi-cbg.de tinevez@mpi-cbg.de])
| filename               = Stack_Manipulation.jar
| source                 = [http://pacific.mpi-cbg.de/cgi-bin/gitweb.cgi?p=fiji.git;a=tree;f=src-plugins/Stack_Manipulation;hb=HEAD on gitweb] (11 java files)
| latest version         =  10 August 2010
| status                 = stable, not active 
}}



== Content and purpose ==

This package regroups various "small" plugins dedicated to the manipulation of stacks, allowing to sort them, combine them, etc...
As they are more of a utility package, they all can be found in the ''Image > Stacks > Manipulation'' menu.


What they do is pretty much summarized by the following diagram, taken from the MacBiophotonics<ref>http://www.macbiophotonics.ca/imagej/stack.htm</ref> webpage. 

[[Image:Stack Manipulation.jpg]]


* The '''Grouped ZProjector''' acts a bit like the '''Substack Maker''', for it allows to reduce the number of frame within a stack. But rather than taking a slice every certain step, it combines a group of slices and project them on a single slice. The size of the groups is configurable, and must be a divisor of the total number of slice.


* The '''Slice Keeper''' does the opposite that of '''Slice Remover'''. Instead of removing every nth slice in a stack, it creates a new stack by only keeping every nth slice from the original stack.


* Since ImageJ version 1.44e (2 August 2010), the SubStack_Maker plugin is now part of ImageJ core (in ''Image>Stacks>Tools>Make Substack''), and has been consequently removed from this package.


== Documentation ==



=== Grouped ZProjector ===

From the source code:

Grouped ZProjector performs a z-projection on a stack of images.
The stack is segregated into some number of groups (by specifying
a group size) and a z-projection is performed on each group using
ZProjector.  The result is a new stack of images, one slice for
each group. The output stack has the same type as the input stack.
The projection methods supported are the same as for ZProjector;
currently "Average Intensity", "Max Intensity", and "Sum Slices".
(It appears that ZProjector actually uses the "Average Intensity"
method instead of the "Sum Slices" method.)

Grouped ZProjector is primarily designed to be run as a plugin
from within the ImageJ environment, but may also be used by other
plugins, etc...  When launched as a plugin, the default constructor
is used and then the run method is called.  Other code wishing to
use Grouped ZProjector should use the <tt>setMethod</tt> and <tt>computeProjection</tt>
methods directly; the <tt>buildDialog</tt> <tt>getMethod</tt>, and <tt>validGroupSize</tt> methods
may also come in handy.







== Author and licenses ==

We list here the authors for each part of this package, with corresponding licenses when relevant.


=== Concatenate ===

By [mailto:j.jackson_at_ucl.ac.uk Jon Jackson].
Last modified June 29 2006.


=== Grouped ZProjector ===

By [mailto:caholly_at_colby.edu Charlie Holly],  Holly Mountain Software. Last modified June 29 2006.


=== DeInterleave  ===

By [mailto:tcollins_at_macbiophotonics.ca Tony Collins].



=== Stack Inserter ===



=== Stack Splitter ===

By [mailto:phkelly_at_ucsd.edu Patrick Kelly], [mailto:gjoss_at_rna.bio.mq.edu.au Greg Joss] & 
[mailto:rcunning@acm.org Bob Cunningham].
Last revision: 30 April 2003.



=== Stack Sorter ===
Taken from '''Bob Dougherty''' Stack_Sorter plugin ([http://www.optinav.com/Stack-Sorter.htm optinav website]). Version 10: 11/18/2005.

License:

<i>
Copyright (c) 2002, 2005, OptiNav, Inc.
All rights reserved.

Redistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met:

* Redistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer.
* Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation and/or other materials provided with the * Neither the name of OptiNav, Inc. nor the names of its contributors may be used to endorse or promote products derived from this software without specific prior written permission.

THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
</i>



=== Stack Combiner ===



=== Interleave ===

By [mailto:tcollins_at_macbiophotonics.ca Tony Collins].



=== Stack Reverser ===



=== Stack Maker ===

'''Demontager''': This plugin by Robert Clements converts a montaged image to an image stack based on the number of rows and columns input by the user. This is the opposite of what the Image/Stacks/Make Montage command does.
http://rsb.info.nih.gov/ij/plugins/demontager.html

=== Slice Remover ===

This command lets you remove multiple slices in one go. You can specify a start slice, and end slice and an increment (i.e. start=1, end=5, increment=2 will remove the slices 1, 3 and 5). Warning: The Slice Remover treats hyperstacks as if they were converted via ''Image>Hyperstacks>Hyperstack to Stack'' first.

Original code by Wayne Rasband.

=== Slice Keeper ===

By [mailto:tcollins_at_macbiophotonics.ca Tony Collins], initially part of his wonderful MacBiophotonics ImageJ plugins package. Tony mentioned credit should go to Wayne Rasband, for the initial code is his work.


<references/>


[[Category:Plugins]]
