{{Infobox
| software               = ImageJFiji
| name                   = NanoTrackJ
| author                 = {{Person|Twagner}},
| maintainer             = {{Person|Twagner}},
| filename               = nanotrackj.jar [https://github.com/thorstenwagner/ij-nanotrackj/latest [1]]
| source                 = Github [https://github.com/thorstenwagner/ij-nanotrackj [2]]
| latest version         = v1.0.2 (22 Feb 2016)
| status                 = active 
}}

== General ==

With NanoTrackJ it is possible to analyze videos of diffusing particles. It is mainly tested with tracking moving diffraction patterns of diffusing nanoparticles. The plugin estimates the particle size and diffusion coefficient distribution. Therefore, a fundamental relationship between the diffusion coefficient and the hydrodynamic diameter is exploited: The Stokes-Einstein relation.

If you are using NanoTrackJ in a scientific publication, please cite: Wagner, T., Lipinski, H.-G. & Wiemann, M., 2014. Dark field nanoparticle tracking analysis for size characterization of plasmonic and non-plasmonic particles. Journal of Nanoparticle Research, 16(5), p.2419.

==Parameters==
'''Center Estimation:''' here are three methods available. The blob method requires a binary image. The objects you want to track should be connected foreground pixels. Such connected regions are often called "blobs". Each blob represents a particle to be tracked. You have to segment your image (e.g. through thresholding) to use this method. The centroid of the blob is used for tracking.

The ''maxima method'' utilizes the [http://rsbweb.nih.gov/ij/docs/menus/process.html#find-maxima "Process -> Find Maxima"] method of ImageJ. A "Spot Assistant" helps the user to select an appropriate mean filter size and tolerance value.

[[File:Spotassistant.png]]

This is the recommended method and it is also usable with RGB image series. The found maxima are used as centroids to track the particles. 

[[File:Spots.png]] [[File:SpotsMax.png]]

The ''maxima method & gaussian fit'' also utilizes the [http://rsbweb.nih.gov/ij/docs/menus/process.html#find-maxima "Process -> Find Maxima"] method of ImageJ but do an gaussian fit after that to improve the estimation qualtity. Theoretically it achieves sub-pixel accuracy. However, diffraction patterns often suffers from saturation and sometimes they do not even have a gaussian shape so that sub-pixel accuracy is not achievable.

'''Diffusion-Coefficient-Estimator:'''
Two methods are available: The regression method and the covariance method. The ''regression method'' is the most used in literature to estimate the diffusion coefficient. It evaluates the mean squared displacement for different time lags. Then it fits a regression line to the data points. This regression line is not constrained to go through the point of origin (0,0). The slope of this regression line is proportional to diffusion coefficient. This method is very simple but unfortunately error prone. Up to now its not clear, how many data points lead to the best estimate. Therefore, the plugin allows the user to determine what minimum and maximum time lag should be used.

[[File:Regression.png]]

There are several recommendations in the literature. Vestergaard [2] states that only the first two time lags should be used and as more time lags are used as greater is the error in the estimate. However, Ernst and KÃ¶hler [1] recommends to use the time lags 2 to 5.

The ''covariance estimator'' is a good alternative to the regression estimator. It is an unbiased estimator and shows a fast convergence to Cramer-Rao lower bound [2]. It need no further parameters and accounting for localization errors.

'''Search-Radius:''' One particle in a frame is matched to another particle in a successive frame only if the distance between their centroids is lower than this radius. It is recommended that the software automatically calculate the radius. This is done by using the expected diffusion coefficient D of a particle with size specified in "Min. Exp. Particle Size". The search radius estimated by [[File:Searchradius.gif]] ensures that 99% of the distances a particle moved between two frames is not greater than the search radius.[4]

'''Min. Exp. Particle Size:''' The minimal expected particle size in the suspension
