The hierarchy of the Plugins Menu is show here, with a few words of explanation for each plugin and links to more documentation where available.  If you know about a plugin that is in this list, but which doesn't yet have a description, please add it.  Also please update this page if you change the menu structure in any way.

<i>FIXME: ideally we should generate this page automatically from the fiji source tree...</i>

== Plugins ==

=== <nowiki>[Ungrouped Plugins]</nowiki> ===

* '''Get Class Versions''':
* '''Multiple Image Processor''':
* '''View5D''':
* '''Volume Viewer''':

=== 3D ===

* '''3D Viewer''': This will launch the ImageJ 3D viewer so that you can visualize an image in 3D, either volume- or surface-rendered.  [http://132.187.25.13/home/?category=Download&page=Viewer3D Further documentation.]
* '''Show Amira Surface''': (Currently gives ClassNotFound exception for Show_Amira_Surface. Should this still be here?) [http://132.187.25.13/home/?category=Download&page=ShowAmiraSurface  Further documentation.]

=== Analyze ===

* '''Grid''':
* '''Find differences''':
* '''Delaunay Voronoi''':
* '''Measure RGB''':
* '''Plot Dots''':
* '''VIB Protocol''':
* '''2D Histogram''': draw a 2D histogram showing the distribution of values in pairs of points in two images
* '''Visual Grep''':
* '''Compute Curvatures''': calculate the principal curvatures of an image at each point
* '''Tubeness''': calculate a score of how "tube-like" each point in an image is, based on the principal curvatures
* '''Surfaceness''': calculate a score of how "surface-like" each point in an image is, based on the principal curvatures

=== Color ===

* '''Average Color''':
* '''RGB to CIELAB''':

=== Edit ===

* '''Crop (3D)''': Crop an image stack [http://homepages.inf.ed.ac.uk/s9808248/imagej/three-pane-crop/ Further documentation]

=== Examples ===

* '''Blobs Demo in Ruby''': Implementation of the Blobs demo macro in the JRuby language. All relevant ImageJ macro functions are reimplemented in [http://jruby.codehaus.org/ JRuby].
* '''blend two images''': Fetches the mandril (RGB) and bridge (8-bit) sample images, and blends the bridge image into each color channel of the mandril image. Written in [http://clojure.sourceforge.net Clojure] (lisp).
* '''celsius to fahrenheit''': Shows a swing GUI with buttons and labels, with attached listeners to transform celsius degrees to fahrenheit. Written in [http://clojure.sourceforge.net Clojure] (lisp).
* '''Example Plot''': Creates a plot with two colored lines in it. Written in Java.
* '''list all threads''': Lists all threads to stdout (the terminal, or Console.app in MacOSX). Written in [http://www.jython.org Jython].
* '''random noise example''': Generates two 8-bit images with random pixel value in each. Written in [http://clojure.sourceforge.net Clojure] (lisp).
* '''T2 Select All''': Selects all objects in an open TrakEM2 display. Writen in [http://www.jython.org Jython].
* '''T2 set all transforms to identity''': Resets the transformation matrix (translation,rotation,scaling and shear) of all objects in a TrakEM2 display to identity (zero translation, scaling of 1.0, zero rotation and no shear). Written in [http://www.jython.org Jython].

=== Image IO ===

<i>This submenu should be removed and the image loaders and writers moved into Import> or Save as...> </i>

=== Image5D ===
* '''New Image5D''':
* '''Open Image5D''':
* '''Save Image5D''':
* '''Open Series As Image5D''':
* '''Virtual Image5D Opener''':
* '''Hypervolume Opener''':

* '''Stack to Image5D''':
* '''RGB to Image5D''':
* '''Image5D to Stack''':

* '''Set Position''':
* '''Set Channel Display''':
* '''Set Channel Labels''':

* '''Make Montage''':
* '''Z Project''':
* '''Image5D Stack to RGB''':
* '''Transfer Channel Settings''':

=== LOCI ===

* '''4D Data Browser''':
* '''Bio-Formats Importer''':
* '''Bio-Formats Exporter''':
* '''Bio-Formats Remote Importer''':
* '''Download from OME''':
* '''Upload to OME''':

=== Macros ===

<i>This submenu should be removed, and the individual macros place in appropriate places in the menu hierarchy</i>

* '''About Plugin Macros''':
* '''Bulls Eye''':
* '''Macro Interpreter''':
* '''Polygon''':
* '''RGB Histogram''':
* '''batch convert any to tif''':

=== Process ===

* '''Bilateral Filter''':
* '''IFT''':
* '''Implicit Interpolate Binary''':
* '''Replace value''':
* '''Distance Transform 3D''':
* '''Fill holes''':
* '''Moving Least Squares''':
* '''Reslice Z''':
* '''Shape-based averaging''':
* '''Seam remover''':
* '''Show label centers''':
* '''Triangle Algorithm''':
* '''Mask of Nearby Points''': create a mask of all points within a given distance of any point above a given threshold [http://homepages.inf.ed.ac.uk/s9808248/imagej/nearby/ Further documentation]
* '''Find Connected Regions''': find connected regions in an image stack based on various criteria [http://homepages.inf.ed.ac.uk/s9808248/imagej/find-connected-regions/ Further documentation]
* '''Quantile Based Normalization''': a method of histogram equalization across several images [http://homepages.inf.ed.ac.uk/s9808248/imagej/quantile-normalization/ Futher documentation]

* '''Resample''': resample to reduce the size of an image
* '''Convolve (3D)''':
* '''Dilate (3D)''':
* '''Erode (3D)''':
* '''FFT (3D)''':
* '''Flood Fill (3D)''':
* '''Gradient (3D)''':
* '''IFT (3D)''':
* '''Laplace (3D)''':
* '''Maximum (3D)''': 
* '''Max (3D)''': <i>FIXME: don't need both this an the one above</i>
* '''Median (3D)''': 
* '''Minimum (3D)''':
* '''Particle Analyzer (3D)''':
* '''Plot Dots (3D)''':
* '''Rebin (3D)''':
* '''Smooth (3D)''':

=== Registration ===

* '''Align Image by line ROI''':
* '''Rigid Registration''':

=== Scripting ===
* '''BeanShell Interpreter''': This plugin launches an interactive BeanShell interpeter.  For more information on BeanShell support, see [[BeanShell Scripting]]
* '''Clojure Interpreter''': This plugin launches an interactive Clojure interpeter.  For more information on Clojure support, see [[Clojure Scripting]]
* '''JRuby Interpreter''': This plugin launches an interactive JRuby interpeter.  For more information on JRuby support, see [[JRuby Scripting]]
* '''Jython Interpreter''': This plugin launches an interactive Jython interpeter.  For more information on Jython support, see [[Jython Scripting]]

=== Segmentation ===

* '''Segmentation Editor''': This plugin provides a user interface for manually segmenting images by painting over regions in an image stack.  [http://132.187.25.13/home/?category=Download&page=SegmentationEditor Futher documentation.]
* '''Simple Neurite Tracer''': A plugin for semi-automated tracing of neurons in a 3D image stack [http://homepages.inf.ed.ac.uk/s9808248/imagej/tracer/ Further documentation]

=== Stacks ===

<i>If we keep this option, I think it should be restricted to plugins that operate a stack but which don't care about the content, e.g. those for cropping or reslicing.  (At least there needs to be some distinction since practically every plugin operates on stacks.)</i>

* '''Stack Reverser''': This plugin reverses the order of the slices in an image stack.

=== Tools ===

* '''Close All Without Saving''':

=== TransformJ ===

<i>TransformJ is non-free, and in any case not have its own submenu - probably should rename this to Transform</i>

* '''TJ Affine''':
* '''TJ Crop''':
* '''TJ Embed''':
* '''TJ Mirror''':
* '''TJ Options''':
* '''TJ Panel''':
* '''TJ Rotate''':
* '''TJ Scale''':
* '''TJ Shift''':
* '''TJ Turn''':

=== Unknown ===

* '''KD Cartoon''':
* '''Lasso''':

=== Utilities ===

* '''Collect Garbage''':
* '''Install Java3D''':
* '''Adjust Menu Font''':
* '''Thread killer''':

=== Utilities>Debugging ===

* '''Test Marching Cubes''':
* '''Test Java3D''':
