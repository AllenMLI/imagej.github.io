{{Infobox
| name                   = BoneJ experimental
| software               = ImageJ
| logo                     = [[File:Bonej-icon.png|96px]]
| author                 = {{Person|Michaeldoube}}, {{Person|Rdom}}, {{Person|Alessandro Felder}}
| maintainer             = {{Person|Michaeldoube}}, {{Person|Rdom}}, {{Person|Alessandro Felder}}
| source                 = {{GitHub|org=bonej-org|repo=BoneJ2}}
| released               = Dec 11<sup>th</sup>, 2017
| latest version         = cuneiform-experimental, Jun 28<sup>th</sup>, 2018
| status                 = Active, Experimental
}}

There's a new experimental, modernized BoneJ available through the ImageJ [http://imagej.net/Updater updater]. Its update site is called [http://sites.imagej.net/BoneJ BoneJ experimental].

This version works with the latest Fiji, and complies with the modern ImageJ [[architecture]]. Most plug-ins also now support hyperstacks, i.e. images with multiple channels or time frames.

As the code is still experimental, it's still likely to change a lot. This means any scripts using the code might break, results can change, and plug-ins gain and lose parameters. Tools marked with ''WIP'' (work in progress), are more likely to undergo large changes. 

Below is the documentation for the plug-ins included in BoneJ experimental.

== Installation ==
[[File:Install-bonej.png|400 px|Installation steps]]
# [http://imagej.net/Downloads Download] the latest version of Fiji for your operating system
# Launch Fiji
# Select in the menu ''Help'' &gt; ''Update...''
# Click ''Manage update sites``
# Check ''BoneJ experimental``
# Click ''Close''
# Click ''Apply changes''
After the downloads have finished, close and restart Fiji.

== Analyse skeleton ==
Menu path ''Plugins &gt; BoneJ &gt; Analyse skeleton''.

This plug-in simply includes [[AnalyzeSkeleton]] in BoneJ. It adds some additional validation to check that your image suits the tool. It also skeletonizes your image by calling [[Skeletonize3D]] if needed.

==== Suitable images ====
The input image must be 2D or 3D, 8-bit and binary. Hyperstacks are not supported.

==== Differences to BoneJ1 ====
Calls the latest version of [[AnalyzeSkeleton]].

== Connectivity ==
Menu path ''Plugins &gt; BoneJ &gt; Connectivity''.

The Connectivity plug-in is designed to estimate the number of connected structures i.e. trabeculae in a trabecular network. This ''connectivity'' measure is related to a topological number ''χ'' known as ''Euler characteristic'', ''Euler number'' or ''Euler-Poincaré characteristic''. Mathematically defined connectivity is ''= 1 - (χ + Δχ)''. Roughly speaking, ''χ'' describes the shape or structure of a topological space. It can also be expressed as ''χ = objects - handles + cavities'', where a handle is a hole that goes through an object (e.g the hole in a doughnut, or the ear of a coffee mug), and a cavity is enclosed inside one. When measuring trabecular cubes, you need to add ''Δχ'' to ''χ'' to get a more accurate estimate of the connectivity of the whole network. The term ''Δχ'' corrects for the change in the topology of an object, when it's cut to pieces. 

NB some other Euler characteristic implementations report ''χ + Δχ'' as ''χ'', i.e. in them the correction ''Δχ'' is implicit.

==== Suitable images ====
The input image must be 3D and binary. The plug-in assumes that there is only one particle in the foreground; to achieve this, run ''Purify''. Having more than one object often leads to negative connectivity.

==== Results ====
* '''Euler characteristic (χ)''': describes the shape of the object(s) in the image, ''χ = objects - handles + cavities''.
* '''Corrected Euler (χ + Δχ)''': the Euler characteristic of the part corrected for edge effects to fit the whole.
* '''Connectivity''': gives an estimate of the number of connected trabeculae in the image. Equal to ''1 - (χ + Δχ)''.
* '''Conn. density''': connectivity divided by unit volume. 

The measures are reported separately for each 3D subspace in the image, i.e. for each channel and time frame.

==== Differences to BoneJ1 ====
* Supports hyperstacks
* The old version reported ''Corrected Euler (χ + Δχ)'' incorrectly as ''Δχ''

==== Related publications ====
* Odgaard A, Gundersen HJG (1993), ''Quantification of connectivity in cancellous bone, with special emphasis on 3-D reconstructions'', Bone 14: 173-182, [http://dx.doi.org/10.1016/8756-3282(93)90245-6 doi:10.1016/8756-3282(93)90245-6.]
* Toriwaki J, Yonekura T (2002), ''Euler number and connectivity indexes of a three dimensional digital picture'', [http://www.scipress.org/journals/forma/abstract/1703/17030183.html Forma 17: 183-209]

== Local thickness ==
Menu path ''Plugins &gt; BoneJ &gt; Thickness''.

This plug-in includes [[Local_Thickness]] in BoneJ, and provides some additional options &amp; results. Local thickness measures ''the diameter of the largest sphere that fits inside the object and contains the point'' for each point i.e. foreground voxel in an image. The plug-in calculates mean and standard deviation of the trabecular thickness (Tb.Th) or trabecular spacing (Tb.Sp) directly from pixel values in the resulting thickness map. Foreground voxels are considered trabeculae, and background voxels are the spacing. Processing time is heavily dependent on feature size (in pixels); large features can take a very long time to process.

==== Suitable images ====
The input image must be 3D, 8-bit and binary. Hyperstacks are not supported.

==== Parameters ====
* '''Calculate''': chooses which thickness maps to calculate - trabecular thickness, trabecular spacing, or both. In order to calculate trabecular spacing, the image voxels are inverted.
* '''Show thickness maps''': display the calculated thickness maps or not.
* '''Mask thickness maps''': remove artifacts from the thickness maps. Artifacts are foreground voxels not present in the original image.
* '''Crop to ROI manager''': create thickness maps only from the area bounded by the ROIs in the ROI manager. Checking this option requires you've added ROIs to the ROI manager.

==== Results ====
* The mean and standard deviation for each thickness map calculated.
* Displays thickness map images if ''Show thickness maps'' was selected. 

==== Differences to BoneJ1 ====
* Calls the latest version of [[Local_Thickness]].
* Thickness values for background voxels are marked ''NaN'' instead of ''0''.

==== Related publications ====
* Dougherty R, Kunzelmann K (2007), ''Computing local thickness of 3D structures with ImageJ'', Microsc. Microanal., 13: 1678-1679, [http://dx.doi.org/10.1017/S1431927607074430 doi:10.1017/S1431927607074430]
* Hildebrand T, Rüegsegger P (1997), ''A new method for the model-independent assessment of thickness in three-dimensional images'', J. Microsc., 185: 67-75, [http://dx.doi.org/10.1046/j.1365-2818.1997.1340694.x doi:10.1046/j.1365-2818.1997.1340694.x]

== Skeletonise ==
Menu path ''Plugins &gt; BoneJ &gt;Skeletonise''.

This plug-in simply includes [[Skeletonize3D]] in BoneJ. It adds some additional validation to check that your image suits the tool.

==== Suitable images ====
The input image must be 2D or 3D, 8-bit and binary. Hyperstacks are not supported.

==== Differences to BoneJ1 ====
Calls the latest version of [[Skeletonize3D]].

== Surface fraction ==
Menu path ''Plugins &gt; BoneJ &gt; Fraction &gt; Surface fraction''

''Surface fraction'' calculates the fraction of bone volume in an image by comparing surface meshes created from bone particles and the whole image. A mesh is a collection of triangular faces that defines the shape of an object in 3D graphics. The plug-in assumes that all foreground voxels represent bone. 

More formally defined, ''Surface fraction'' calculates the fraction ''BV/TV'', which is the volume of mineralised bone ''BV'' per unit volume of the sample ''TV''.

==== Suitable images ====
The input image must be 3D and binary.

==== Results ====
* ''Bone volume'': volume of the surface mesh created from bone voxels.
* ''Total volume'': volume of the surface mesh created from the whole image.
* ''Volume ratio'': ratio of bone to total volume.

The measures are reported separately for each 3D subspace in the image, i.e. for each channel and time frame.

==== Differences to BoneJ1 ====
* Supports hyperstacks.
* Results differ, because the marching cubes and mesh volume implementations are different.

== Where is my favorite plug-in? ==
We've decided to remove some plug-ins from BoneJ experimental (note that some have just not been documented here yet). These include ''Interpolate ROIs'', ''Neck shaft angle'', ''Optimise threshold'', ''Plateness'' and ''Structure model index'' have been discontinued. ''Dilate'' and ''Erode'' come pre-packaged with ImageJ, so there's no need to include them.

Support for ''Kontron IMG'', ''Scanco ISQ'' and ''Stratec pQCT'' file formats has been moved to [[SCIFIO]]. Just run ''Edit  &gt; Options  &gt; ImageJ2'', and check ''Use SCIFIO when opening files''. When the option is enabled, these kinds of files can be opened from `File > Open` or dragging &amp; dropping them like any other format. 

''Distribution analysis'' and other pQCT related tools can now be downloaded independently from the [[PQCT]] update site.

== License ==
BoneJ experimental is free, open-source software. You can redistribute it and/or modify it under the terms of the [https://github.com/bonej-org/BoneJ2/blob/master/LICENCE.md BSD 2-clause license]. The software is provided "as is" and any warranties are disclaimed. In no event shall the copyright holder or contributors be liable.

== Citation ==
If you'd like to cite the software, we will soon publish a paper about BoneJ experimental. We recommend you cite the specific release used in your research.
