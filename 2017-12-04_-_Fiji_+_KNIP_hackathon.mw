From Monday, December 4, 2017 through Friday, December 15, 2017, the [https://mpi-cbg.de/ Max Planck Institute of Molecular Cell Biology and Genetics] hosts ~50 developers at the [http://www.csbdresden.de/ Center for Systems Biology] in Dresden, Germany for a [[hackathon]] to develop [[ImageJ2]] and [[Fiji]] core infrastructure and [[plugins]].


https://gitter.im/fiji/hackathon_dd_2017


== Voluntary hackathon calendar ==
https://tinyurl.com/ybjcq9qw

== Hackathon google doc ==
https://docs.google.com/document/d/1h4uCt4PAEdeGQQwwVZC73o_Anq6-AI2KZiSzxY8kWng/edit

== Hackathon on Twitter (#hackdd17) ==
https://twitter.com/hashtag/hackdd17?vertical=default&src=hash

== Technical Discussions ==

=== N5, not HDF5 ===

For more info on N5, check out the github repository [https://github.com/saalfeldlab/n5/ here].

* feels like HDF5, but stores chunks(blocks) in separate files in the file system.
* is a Java library, but Constantin Pape already wrote a C++/python version of it: z5 (also matches "zarr" library), https://github.com/constantinpape/z5
* attributes are stored in an additional JSON file
* Discussion: should we define standard now as to how data should be stored in there to prevent an emergence of a zoo of different flavors as there is for HDF5?
** how to do time series where each timestep / angle could have different image size
** if we want a general "N5 viewer" for images, we'd have to add calibration data
** put this information around the N5 dataset, because it behaves more like a dataset within an H5 file.
** Perhaps [https://github.com/saalfeldlab/n5/issues/15 make it versioned]?  Because ''a duck is not always a duck...''
* why another file format?
** parallel writes (awesome for clusters with shared filesystem)
** there is a special type for label blocks
** blocks can have a halo
** the block grid does not need to be filled dense, some blocks could be missing
** couldn't this just be another flavor of HDF5?
* are parallel writes to the same block prevented by some kind of locks?
* the HDF5 team should be included in the discussions to learn from their mistakes - there is lots of information on parallel writing of HDF5 files out there
* Try to write a N5 dataset into a FUSE filesystem/file??? Could this be a work-around for the many-small-files issue?

=== BigDataViewer ===

== Hackathon Progress ==


=== ilastik - (Dominik Kutra, Carsten Haubold) ===

* developed an ImageJ2 plugin that allows to stream raw data and predictions from the ''work in progress'' ilastik processing backend: https://github.com/ilastik/org.ilastik.bdvsource
* discussed with Philipp Hanslovsky about the benefits of using the N5 format for communication
** the label block format together with the fact that datasets can be stored sparse could be a great foundation for label storage / communication
** played around with [https://github.com/constantinpape/z5 Constantin Pape's C++/Python N5] reader as available format on the [https://github.com/ilastik/ilastik/tree/apistar-add-n5 ilastik server]
** noticed that the only thing needed to serve a N5 dataset on the web is to serve the directory contents. Philipp wrote a [https://github.com/hanslovsky/n5-rest N5 REST reader] for BigCAT to talk to the ilastik server that way

[[Category:News]]
