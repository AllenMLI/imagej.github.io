
plugins/Read_and_Write_Excel-1.0.2.jar (Installation instructions at bottom of this page)

Created in Eclipse IDE Mars.1 release (4.5.1), using the java jdk1.6.0_45 for ImageJ/Fiji compatibility.

Release date:

19 Nov 2015 v1.0.0

25 Nov 2015 v1.0.1

10 April 2017 v1.0.2

Description :
This plugin extracts data from the Results Table and adds it to a sheet-tab "A" in an .xlsx Excel file on the user's desktop. The plugin will create a file named "Rename me after writing is done" on the desktop if none-exists already, and will update this file if it has already been created. Data is added to the latest sheet (created as "A" if the file is new). Within the latest sheet, data will be added adjacent to previous data. Results Table column headers are added automatically.

This plugin can be called from a macro using:
run("Read and Write Excel");
and it works very well with batching.

The title of the first open image will be added as a label for exported results data by default. The argument function can also be used to overwrite this, so that the user may provide their own title for each export:
run("Read and Write Excel", "This is my new title");

I am aware that another Excel_Writer plugin exists but it did not work for me very well (hence me creating this). I did not consult their source code but did find out about Apache POI(*) from them.

If you decide to consult my source-code, please excuse odd methods and strange notes. I have taught myself Java to write this.

(*)This plugin uses the Apache POI api, which is distributed under the terms of the Apache Licence (available from https://poi.apache.org/legal.html). I believe this software to be free and open source.

Version 1.0.1 changes: 
1) package is not bloated by dependency .jar files.
2) now contains source-code for reference.
3) removed platform specification as I believe this plugin will work across operating systems.

Version 1.0.2 changes:
1) the legacy feature was removed that allowed data to be fed to the plugin in a single-line string to the 'arg' function
2) all data is now exported as string/text into the generated spreadsheet. This is sub-optimal, in that cells will then need to be converted back to a number format in the spreadsheet, but was required to immediately fix an issue whereby string data (when it exists within the Results table) was not being handled properly by the plugin
3) Replaced the legacy data import function of the argument line (note 1 above) with an allowance for user supplied headings for each import; the argument now accepts a string title (e.g "this is my new title") that will then be used to label the results when exported.

Author:
Anthony Sinadinos

Platforms:
Multi

Category:
Input/Output.
Export data to file. Batch tested.

Link:
YouTube tutorial (https://www.youtube.com/watch?v=79rzUae-7N8)

Dependencies:
jars/xmlbeans.jar,
jars/poi-ooxml.jar,
jars/poi-ooxml-schemas.jar,
jars/poi.jar,
jars/ij.jar

Update site:
http://sites.imagej.net/ResultsToExcel

Installation:
* With ImageJ open, navigate to 'Help'
* In the presented drop down menu, then select 'Update...'
* Allow ImageJ to check for updates
* If required, download updates and restart ImageJ as prompted
* Repeat the first two steps = Help>Update...
* This time ImageJ should let you know that there are no updates available
* Click on 'OK' but do not close the 'ImageJ Updater' window that is also open
* In the bottom left of the 'ImageJ Updater' window, find and click on 'Manage update sites'
* In the newly presented 'Manage update sites' window, find and check the 'ResultsToExcel' check box
* Then close the 'Manage update sites' window
* The 'ImageJ Updater' window will now present you with the plugin files for installation
* Press 'Apply changes'
* After the update has been applied successfully, restart ImageJ
