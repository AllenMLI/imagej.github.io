The first DAIS Learnathon took place from June 18 until June 24 2017.

==Schedule==

See [https://indico.mpi-cbg.de/event/50/other-view?view=standard this page]!

==Setting up your system==

Check if you have this set up:
* Jupyter + the SciJava kernel (https://github.com/scijava/scijava-jupyter-kernel)
** Install [https://conda.io/miniconda.html Miniconda] if you do not have installed it or Anaconda already. (We need the version for Python 3!)
** Your `.bashrc` or `.zshrc` will need a line like this: <code>export PATH="/Users/someforders/miniconda3/bin:$PATH"</code>
** Make a new conda environment and install `jupyter` and `scijava-jupiter-kernel`:
*** <code>conda create --name scijava python=3</code>
*** <code>source activate scijava</code>
*** <code>conda install jupyter</code>
*** <code>conda config --add channels conda-forge</code>
*** <code>conda install scijava-jupyter-kernel</code>
** Now (and in the future) you will have to activate the environment we just created: <code>source activate scijava</code>.
** Deactivation would work like this: <code>source deactivate</code>
** Get some notebook to try it out:
*** <code>git clone git@github.com:scijava/scijava-jupyter-kernel.git</code>
*** <code>cd scijava-jupyter-kernel</code>
*** <code>jupyter lab</code>
*** execute cells by hitting shift+enter -- enjoy! 
* Eclipse (Neon)
* bash / zsh
* GIT
* Maven
* Gitter

This can happen later:
* KNIME (app with all extensions)
** https://www.knime.org/downloads/overview?quicktabs_knimed=1#quicktabs-knimed
* imglyb (forget that for now)

==Monday==

Git repos to clone:
* <code>https://github.com/imagej/tutorials</code>
* <code>https://github.com/imagej/imagej</code>
* <code>https://github.com/scijava/scijava-common</code> (optional)
* <code>https://github.com/imagej/imagej-ops</code> (optional)
* <code>https://github.com/imglib/imglib2</code> (optional)

Slides online:
* <code>https://imagej.github.io/presentations/2017-06-19-dais-learnathon/</code>

=== Ops practical ===

Write your first <code>Command</code> plugin!

* Try to do it completely on your own, using Internet resources.
* If you get stuck, click on hint links.
* If still stuck, '''''grab a teacher'''''!

Details of your assignment:

* Create a [[Git]] repository.
* Create a [[Maven]] project. (hints: [https://github.com/imagej/example-imagej-command 1], [[Building a POM|2]])
* Implement a <code>Command</code> plugin in your [[IDE]], which calculates the ''mean'' across an image. (hints: [https://nbviewer.jupyter.org/github/imagej/tutorials/blob/master/notebooks/1_-_Using_ImageJ/2_-_Introduction_to_ImageJ_Ops.ipynb 1], [https://github.com/imagej/tutorials/tree/master/maven-projects/simple-commands/src/main/java 2])
* Push to [[GitHub]] (hints: [https://help.github.com/articles/pushing-to-a-remote/ 1], [https://git-man-page-generator.lokaltog.net/ 2]).

If you get that far, YOU WIN. {{Person|Jug}} has a reward for you.

Extra credit:

* Grab fun snippets from the "Introduction to Ops" Jupyter notebook.
* Integrate them into your command, to make it do fancier things.

=== How to create a new git repository ===
This is, from my (Hanslovsky) point of view, the best way to create a new git repository. All commands should run on Linux, OSX, and the git bash shell on Windows.
* Create a new repository on github.com (choose not to add a README.md or .gitignore), e.g. with name 'awesome-learnathon'
* On your local machine create a directory where you would like to have the repository and cd into it: <code>mkdir 'awesome-learnathon' && cd 'awesome-learnathon'</code>
* Initalize local git repository: <code>git init</code>
* Add remote repository as origin: <code>git remote add -f origin git@github.com:user/awesome-learnathon</code> or <code>git remote add -f origin https://github.com/user/awesome-learnathon</code> if you did not set up git through ssh. The <code>-f</code> parameter fetches from the remote repository
* Create a first file, e.g. <code>pom.xml</code>, and stage it for a commit: <code>git add pom.xml</code>
* Commit the stage files with commit message: <code>git commit -m 'Add pom.xml'</code>
* Push your commit: <code>git push --set-upstream origin master</code> (you can ommit <code>--set-upstream origin master</code> in future commits)

==Tuesday==

Git repos to clone:
* Morning + early afternoon sessions:
** <code>https://github.com/imglib/imglib2-introductory-workshop</code>
** (bonus) LabelingPlus: https://github.com/TrNdy/Indago/blob/master/src/main/java/com/indago/data/segmentation/LabelingPlus.java
* Afternoon session:
** The pull-request example: [https://github.com/Meyenhofer/ij-command-2/issues/ to solve]
** <code>https://github.com/mpicbg-scicomp/ij2course-images</code>
** <code>https://github.com/mpicbg-scicomp/ij2course-regions</code>
** <code>https://github.com/mpicbg-scicomp/ij2course-tables</code>

Optional practical for you to do on your own:
* <code>https://github.com/imglib/imglib2-advanced-workshop</code>

==Wednesday==

Git repos to clone:
* Morning Session on ClearVolume and BDV VisTools:
** [[Media:Jug_BigDataAnd3dViz.pdf|Slides]]
** <code>https://github.com/fjug/TutorialClearVolume.git</code>
** <code>https://github.com/fjug/TutorialBigDataViewer.git</code>
** <code>https://github.com/imglib/imglib2-cache-examples.git</code> (optional but awesome)
** <code>https://github.com/bigdataviewer/bigdataviewer-vistools.git</code>
* Afternoon Session on KNIME:
** <code>https://github.com/knime-ip/knip-sdk-setup</code>
** <code>https://github.com/knime-ip/knip-imagej2</code>
** <code>https://github.com/knime-ip/knip-course</code>

==Thursday==

Instructions:
* <code>https://gist.github.com/hanslovsky/508fb1ff7668f1e53bb769e6dccc789c</code>

Git repos to clone:
* <code>https://github.com/imglib/imglib2-unsafe</code>
* <code>https://github.com/hanslovsky/imglib2-imglyb</code>
* <code>https://github.com/hanslovsky/imglyb-examples</code>
* <code>https://github.com/hanslovsky/imagey</code>
* <code>https://github.com/hanslovsky/imglyb-learnathon</code>

==Friday==

Git repos to clone:
* <code>https://github.com/mpicbg-scicomp/ij2course-scijava-plugin-mechanism</code>

==Saturday==

[[Category:News]]
