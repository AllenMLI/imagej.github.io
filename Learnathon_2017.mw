The first DAIS Learnathon took place from June 18 until June 24 2017.

==Setting up your system==

Check if you have this set up:
* Jupyter + the SciJava kernel (https://github.com/scijava/scijava-jupyter-kernel)
** Install [https://conda.io/miniconda.html Miniconda] if you do not have installed it or Anaconda already. (We need the version for Python 3!)
** Your `.bashrc` or `.zshrc` will need a line like this: <code>export PATH="/Users/someforders/miniconda3/bin:$PATH"</code>
** Make a new conda environment and install `jupyter` and `scijava-jupiter-kernel`:
*** <code>conda create --name scijava python=3</code>
*** <code>source activate scijava</code>
*** <code>conda install jupyter</code>
*** <code>conda config --add channels conda-forge</code>
*** <code>conda install scijava-jupyter-kernel</code>
** Now (and in the future) you will have to activate the environment we just created: <code>source activate scijava</code>.
** Deactivation would work like this: <code>source deactivate</code>
** Get some notebook to try it out:
*** <code>git clone git@github.com:scijava/scijava-jupyter-kernel.git</code>
*** <code>cd scijava-jupyter-kernel</code>
*** <code>jupyter lab</code>
*** execute cells by hitting shift+enter -- enjoy! 
* Eclipse (Neon)
* bash / zsh
* GIT
* Maven
* Gitter

This can happen later:
* KNIME (app with all extensions)
** https://www.knime.org/downloads/overview?quicktabs_knimed=1#quicktabs-knimed
* imglyb (forget that for now)

==Monday==

Git repos to clone:
* <code>https://github.com/imagej/tutorials</code>
* <code>https://github.com/imagej/imagej</code>
* <code>https://github.com/scijava/scijava-common</code> (optional)
* <code>https://github.com/imagej/imagej-ops</code> (optional)
* <code>https://github.com/imglib/imglib2</code> (optional)

=== Ops practical ===

Write your first <code>Command</code> plugin!

* Try to do it completely on your own, using Internet resources.
* If you get stuck, click on hint links.
* If still stuck, '''''grab a teacher'''''!

Details of your assignment:

* Create a [[Git]] repository.
* Create a [[Maven]] project. (hints: [https://github.com/imagej/example-imagej-command 1], [[Building a POM|2]])
* Implement a <code>Command</code> plugin in your [[IDE]], which calculates the ''mean'' across an image. (hint: [https://nbviewer.jupyter.org/github/imagej/tutorials/blob/master/notebooks/1_-_Using_ImageJ/2_-_Introduction_to_ImageJ_Ops.ipynb 1], [https://github.com/imagej/tutorials/tree/master/maven-projects/simple-commands/src/main/java 2])
* Push to [[GitHub]] (hint: [https://help.github.com/articles/pushing-to-a-remote/ 1]).

If you get that far, YOU WIN. {{Person|Jug}} has a reward for you.

Extra credit:

* Look at the "Introduction to Ops" Jupyter notebook.
* Grab fun snippets.
* Integrate them into your command, to make it do fancier things.

==Tuesday==

Git repos to clone:
* muhaha

==Wednesday==

Git repos to clone:
* <code>https://github.com/knime-ip/knip-sdk-setup</code>
* <code>https://github.com/knime-ip/knip-imagej2</code>
* <code>https://github.com/knime-ip/knip-course</code>

==Thursday==

Instructions:
* <code>https://gist.github.com/hanslovsky/508fb1ff7668f1e53bb769e6dccc789c</code>

Git repos to clone:
* <code>https://github.com/imglib/imglib2-unsafe</code>
* <code>https://github.com/hanslovsky/imglib2-imglyb</code>
* <code>https://github.com/hanslovsky/imglyb-examples</code>
* <code>https://github.com/hanslovsky/imagey</code>
* <code>https://github.com/hanslovsky/imglyb-learnathon</code>

==Friday==

Git repos to clone:
 * muhaha

==Saturday==

[[Category:News]]
