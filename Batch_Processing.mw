{{Scripting}}{{TOC}}
= Overview =

A fundamental benefit to creating [[Scripting|scripts and macros]] in [[ImageJ]] is the ability to reuse their functionality on more than one image. Although this can be done manually, there are multiple ways to easily automate this batch processing.

= General workflow =

# Create a basic macro which operates on the active image.
#* The [[Introduction into Macro Programming#The_recorder|macro recorder]] is an excellent way to generate macro code.
#* The [[Introduction into Macro Programming]] explains the principles of macro writing.
# Apply your macro to a group of images.
#* These images do not need to be open in ImageJ alreadyâ€”they will be read in as part of the batch process.
#* See below for details.

= Easy option =

The fastest way to start batch conversion is via the [http://imagej.net/docs/guide/146-29.html#toc-Subsubsection-29.12.3 {{bc | Process | Batch | Macro...}}] command. This will open a dialog (below) that will allow you to specify an input and output directory. You can select an output file format, and then use the <code>Add Macro Code</code> drop-down to generate a macro with the desired functionality.

[[Image:BatchProcess.png|center]]

= Flexible option =

Open the [[Using_the_Script_Editor|script editor]], select <code>Templates > IJ1 Macro > Process Folder</code>. This will generate the following boilerplate:

[[Image:Process_folder_ij1.png|center]]

Lines 26 and 27 can now be edited, replaced with the functional macro code you would like to apply to all images of a given type in a folder. Furthermore you can now modify the batch processing logic itself, for example if you need to customize what (if any) output information is saved.

= See also =

* [http://imagej.net/docs/guide/146-29.html#toc-Subsection-29.12 {{bc | Process | Batch}}] submenu.
* [[Scripting]] documentation and tutorials.
* [[How to apply a common operation to a complete directory]]
