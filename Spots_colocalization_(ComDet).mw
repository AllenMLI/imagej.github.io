{{Infobox
| software               = ImageJ
| name                   = ComDet
| author                 = [http://katpyxa.info Eugene Katrukha]
| maintainer             = [mailto:katpyxa_at_gmail.com Eugene Katrukha]
| filename               = [https://github.com/ekatrukha/ComDet/blob/master/target/ComDet_-0.4.0.jar?raw=true ComDet.jar] + for ImageJ [https://math.nist.gov/javanumerics/jama/Jama-1.0.3.jar Jama lib]
| source                 = [https://github.com/ekatrukha/ComDet github]
| released               = 23 November 2012
| latest version         = 23 January 2019
| status                 = stable 
| category               = [[:Category:Colocalization]]
| website                = [https://github.com/ekatrukha/ComDet/wiki wiki]
}}

Plugin for finding and/or analyzing colocalization of bright intensity spots (cells, particles, vesicles, comets, dots, etc) in images with heterogeneous background (microscopy, astronomy, engineering, etc). 

For help with plugin installation, see [https://github.com/ekatrukha/ComDet/wiki/How-to-install-plugin instructions].

== How to use plugin ==

Open the image to be analyzed in ImageJ. In general plugin works in two modes: 
* particles detection (whole image or ROI)
* particles detection and colocalization analysis (whole image or ROI).

For '''colocalization''' you need an image containing '''two color channels'''. Plugin auto-detects the number of channels and if it is equal to two then the plugin will automatically switch to second mode (see below).

Plugin works with time/z-stacks.  

Launch the detection by choosing ''Plugins->ComDet->Detect Particles''.  

http://katpyxa.info/software/ComDet/ComDet_open.png

== Simple detection (1 channel) ==

If the image is not two channels image, the following dialog window will appear:  

http://katpyxa.info/software/ComDet/ComDet_detection_only_v0.4.0.png

Specify estimated particles size and intensity threshold (particle brightness) and press OK.
To have good detection usually you need to play with parameters and see how it goes. Checkbox "''Preview...''" allows to see detection on the current picture and simplifies this task.

http://katpyxa.info/software/ComDet/ComDet_preview_button.gif

By default, plugin looks only for particles of specified size. If you check "''Include larger particles?''" box, it will also try to quantify bigger spots.

If "''Segment larger particles (slow)?''" box is checked, plugin will try to further split large particles into a smaller dots, if it is possible. As its name suggests, this procedure requires computational power and can be slow, especially on big images.  

If you choose ''Add to ROI Manager'' option ("All particles"), plugin will add detected rectangular ROIs around particles to [https://imagej.nih.gov/ij/docs/guide/146-30.html#sub:ROI-Manager... ROI Manager]. ROIs will have names in the format of d(detection# in Results table)_ch(#channel)_sl(#slice)_fr(#frame)_c(0 if particle is not colocalized and 1 if it is, see below).

After pressing OK plugin runs and add rectangles in overlay on top of detected particles.
   
http://katpyxa.info/software/ComDet/ComDet_detection_before_after_v2.png

Also it will provide you ''Results'' table containing particles' coordinates (see below) and ''Summary'' table.  
I recommend to play with parameters to get a nice detection result.

== Detection in ROI ==

If you want detection to be performed in some specific region instead of whole image, select some ROI using any ImageJ ROI selection tools before launching plugin:
    
http://katpyxa.info/software/ComDet/ComDet_ROI_before_v2.png

In this case only particles in that ROI will be detected (also supported in "''Preview..''" mode):
   
http://katpyxa.info/software/ComDet/ComDet_ROI_after_v2.png  

== Detection and colocalization in 2 channels ==

If your image contains two channels then after pressing ''Detect Particles'' the dialog will look a bit more complex:
  

http://katpyxa.info/software/ComDet/ComDet_detection_and_coloc_v0.4.0.png  

In this case you can specify the same parameters of detection for each channel separately.
To get colocalization analysis you need to check "''Calculate colocalization?''" box. If you uncheck it, then only detection will be performed. 

There is an additional parameter in case of colocalization: maximum distance between spots' centers. It defines at what distance (in pixels) two spots in different channels are considered to be localized. 

'''So colocalization is based on the distance between spots' centers!'''

Take a notice that "''Preview...''" button in this case will only show detection, it will not mark/analyze colocalization.

After detection is finished ComDet marks detected particles with rectangles of their own channel colour and colocalized particles in yellow:

http://katpyxa.info/software/ComDet/ComDet_detection_and_coloc_mark_v2.png

Also ''Add to ROI Manager'' option is available. ROIs will have names in the format of d(detection# in Results table)_ch(#channel)_sl(#slice)_fr(#frame)_c(0 if particle is not colocalized and 1 if it is). You can add all detected particles or only those that colocalize.

''Only ROI detection'' mode (as described above) also works in this case. 

== Results table ==
Here is example of ''Results'' table (''Summary'' table is kind of self-explanatory). 
   
http://katpyxa.info/software/ComDet/Results_v.0.4.0.png 


Columns are: 
# ''Abs_frame'' = absolute frame number in stack (unique frame number)
# ''X_(px)'' = ''x'' coordinate of spot (centroid fitting)
# ''Y_(px)'' = ''y'' coordinate of spot (centroid fitting)
# ''Channel'' = corresponding channel number
# ''Slice'' = corresponding slice number (if z-stack)
# ''Frame'' = corresponding frame number (if timelapse)
# ''xMin'', ''yMin'', ''xMax'', ''yMax'' = coordinate of rectangle around spot (in pixels)
# ''NArea'' = [https://github.com/ekatrukha/ComDet/wiki/How-does-detection-work%3F thresholded area] of the spot in pixels
# ''Colocalized'' = 0 if spot does not colocalize with another and 1 if it does.
# ''ColocIndex'' = corresponds to the detection index in Results table, corresponding to the particle in anothe channels (works only for two channel independent detection).
# ''IntegrIntChX'' = for each channel (marked by X number) shows spot's integrated intensity: sum of all pixels intensity inside the [https://github.com/ekatrukha/ComDet/wiki/How-does-detection-work%3F thresholded area] minus average spot-specific backgrounds. Background value is calculates as average intensity of pixels on perimeter of the rectangle.

 
== Additional info ==

For detection explanation, see [https://github.com/ekatrukha/ComDet/wiki/How-does-detection-work%3F How does detection work?]. Also [https://github.com/ekatrukha/ComDet/wiki/Updates-history updates history] is available.

[[Category:Plugins]]
[[Category:Colocalization]]
