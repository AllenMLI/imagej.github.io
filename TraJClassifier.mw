{{Infobox
| software               = Fiji
| name                   = Trajectory classifier for TrackMate
| author                 = {{Person|Twagner}}
| maintainer             = {{Person|Twagner}}
| filename               = ij-trajectory-classifier.jar [https://github.com/thorstenwagner/ij-trajectory-classifier/releases/latest [1]]
| source                 = Github [https://github.com/thorstenwagner/ij-trajectory-classifier [2]]
| latest version         = v0.8.1 (24 Aug. 2016)
| status                 = active 
}}


== Purpose ==
This Fiji plugin loads trajectories from TrackMate, characterize them using [https://github.com/thorstenwagner/TraJ TraJ] and classificate them into normal diffusion, subdiffusion, confined diffusion and directed/active motion by a random forest approach (through Renjin). It supports local analysis and is therefore able to split a single trajectory into segments with different motion types.

== Installation ==

Simply turn on the  [http://imagej.net/How_to_follow_a_3rd_party_update_site TraJClassifier update site].

== Introduction ==

Please start by reading the [https://github.com/thorstenwagner/TraJ/wiki#introduction introduction] of TraJ, because the TraJClassifier is build upon this library. The TraJClassifier was [https://github.com/thorstenwagner/ij-trajectory-classifier/blob/master/src/main/java/de/biomedical_imaging/ij/trajectory_classifier/help/GenerateTrainingSet.java trained] using [https://github.com/thorstenwagner/TraJ/wiki#simulation simulated trajectories] of normal diffusion, subdiffusion, confined diffusion and directed motion. For each simulated, we estimated nine features for each trajectory (For more information about these features, go to the  [https://github.com/thorstenwagner/TraJ/wiki#features TraJ wiki]):

* Alpha
* Asymmetry (Asymmetry3)
* Efficiency 
* Fractal dimension
* Gaussianity
* Kurtosis
* Mean squared displacement ratio
* Straightness
* Trappedness

The features and the corresponding class was then used to train a random forest classifier. Furthermore the TraJClassifier employs a sliding window to allow local analysis of single trajectories. 

As summary, the classification process is as follows:
  
  1. Load trajectories from TrackMate xml file
  2. For each trajectory
    2.1 Split the trajectory into subtrajectories using a sliding window
    2.2 Calculate the features of each subtrajectory and classificate them (-> results in a class l with confidence c for each subtrajectory)
    2.3 Each position in original trajectory which is contained in a subtrajectory gets a vote for l with the weight c.
    2.4 Each position in original trajectory gets the class with the majority of votes.
  3. Split successive positions with the same class into single segments.
  4. Output results


== Examples ==


== Parameters ==
[[File:Trajclassifier_gui.png|300px|thumb]]
'''Minimal tracklength:''' Minimal number of positions in a trajectory. It has to be greater than the window size. As the window size should be at least 30, the same is true for the minimal tracklength.

'''Window size:''' The parameter determines how many positions are used in the sliding window.

'''Minimal segment size:''' After classification of a trajectory it consistes of several segments. This parameter determines the minimal segment length. Segments smaller than this length will be removed. It is good rule of thumb to set this parameter to same value as the window size because segments which are smaller than the window size seems to be very error prone.

'''Resample rate:''' During the local analysis using a sliding window, one trajectory is splitted into several subtrajectories. In very noisy cases it could make sense to resample the subtrajectories to increase the signal to noise ratio (e.g. if the rate is set to 2, then only every second position is used in the trajectory). However, we belief that a trajectory should contain at least 30 position therefore the ratio of windowsize and the resample rate should be >= 30.

'''Pixelsize:''' Size of a single pixel in Âµm. However, if your TrackMate data is already scaled, set it to zero.

'''Framerate:''' Frames per second

'''Use reduced model for confined motion:''' The shape constants for the [https://github.com/thorstenwagner/TraJ/wiki#mean-square-displacement confined diffusion MSD model] are set to 1.

'''Show IDs:''' Show trajectory IDs as overlay. The trajectories IDs given in the format PARENT ID:SEGMENT ID

'''Show overview classes:''' Show classes and color codes as overlay.

'''Remove global drift:'''  In some cases the particles are moving relativ to another object (e.g. particles in a cell). When the object is moving approx. at a constant speed, than it could be possible to estimate it via a global drift estimation and remove this drift component from each trajectory.
