__TOC__


This page provides user documentation for the utility functions of the [[CIP]] package

{{CIP Navigation}}

='''measure'''=

<span style="font-size:110%">'''Description'''</span><br>
This function performs measures in image and region and return them as a table.

<span style="font-size:110%">'''Signature'''</span><br>

&nbsp;&nbsp;&nbsp;&nbsp;<code>outputTable = cip.measure( inputImage* ,measures*, unit, prefix )</code><br>
&nbsp;&nbsp;&nbsp;&nbsp;perform the specified measures on the entire input image.

&nbsp;&nbsp;&nbsp;&nbsp;<code>outputTable = cip.measure( regions* ,measures*, source, unit, prefix )</code><br>
&nbsp;&nbsp;&nbsp;&nbsp;perform the specified measures for each of the provided region. if provided the source image is used for intensity measure.<br>

<span style="font-size:110%">'''Input'''</span><br>
&nbsp;&nbsp;&nbsp;&nbsp;'''inputImage*''' : the image to measure<br>
&nbsp;&nbsp;&nbsp;&nbsp;'''regions*''' : a region or list of regions to be measured.<br>
&nbsp;&nbsp;&nbsp;&nbsp;'''measures*''' : a string or a list of strings taken from {'min', 'max', 'mean', 'stddev', 'median', 'position', 'boundary', 'size'}  and representing the measure to be performed<br>
&nbsp;&nbsp;&nbsp;&nbsp;'''source''' : a image that will be used to perform the intensity based measure if the input is of type region. if not provided the measure will be done on the input object intensity<br>
&nbsp;&nbsp;&nbsp;&nbsp;'''unit''' : is a boolean value indicating to use or not the image pixel size. Default is true.<br>
&nbsp;&nbsp;&nbsp;&nbsp;'''prefix''' : is a string that will be set at the beginning of each column header in the output. It can be used for instance to differentiate measures performed on the same object with different source image. Default is an empty string.

<span style="font-size:110%">'''Output'''</span><br>
&nbsp;&nbsp;&nbsp;&nbsp;'''outputTable''': the measures table. Each column represent one of the requested measure while the first column provides a reference to the measures object. Each row contains the measures performed for a particular object.

<span style="font-size:110%">'''Implementation'''</span><br>
The measure function instanciate a toolbox adapted for the object to measure. the toolbox can receive new measures tools to extend the existing measure set.

='''show'''=

<span style="font-size:110%">'''Description'''</span><br>
show display CIP data within IJ1 component: hyperstack viewer, results table and log window. this ensures easy communication and reuse of the data by the rest of imageJ ecosystem.

<span style="font-size:110%">'''Signature: image'''</span><br>
&nbsp;&nbsp;&nbsp;&nbsp;<code>handle = cip.show( inputImage* , lut )</code>
&nbsp;&nbsp;&nbsp;&nbsp;will display an hyperstack viewer with the name of the image and the requested color luts.

&nbsp;&nbsp;&nbsp;&nbsp;'''inputImage*''': the image to display.
&nbsp;&nbsp;&nbsp;&nbsp;'''lut''': a string or a list of string representing a Look Up Table available in ImageJ menu. For basic colors using the first letter of the lut is enough ('r' in place of 'red' or 'rgb' in place of ['red','green','blue']). 

<span style="font-size:110%">'''Signature: region'''</span><br>
&nbsp;&nbsp;&nbsp;&nbsp;<code>cip.show( handle* , region*, color, width, scalar, reset )</code>
&nbsp;&nbsp;&nbsp;&nbsp; will add region contours to the overlay of the image pointed by handle and with the specified properties: color, width, scalars.

&nbsp;&nbsp;&nbsp;&nbsp;'''handle''': a string with the name of the window where region(s) will be displayed the image to display.
&nbsp;&nbsp;&nbsp;&nbsp;'''region''': a region or list of regions. this works with bot 2d and 3d regions.
&nbsp;&nbsp;&nbsp;&nbsp;'''color''': a string representing a colors or a lut available in imageJ menu. default is 'lila'. Colors have priority on lut of the same name.
&nbsp;&nbsp;&nbsp;&nbsp;'''width''': a scalar representing contour width in point. default is 1. 
&nbsp;&nbsp;&nbsp;&nbsp;'''scalars''': a list of scalars representing a region attribute and being used to choose region color in the lut. default is [1,2,..., n] where n is the number of region provided as input.
&nbsp;&nbsp;&nbsp;&nbsp;'''reset''': a boolean indication whether or not to reset the overlay.

<span style="font-size:110%">'''Signature: table'''</span><br>
&nbsp;&nbsp;&nbsp;&nbsp;<code>handle = cip.show( inputTable* , handle, reset)</code>
&nbsp;&nbsp;&nbsp;&nbsp; will display an IJ1 results table with same headers and rows as the input table.

&nbsp;&nbsp;&nbsp;&nbsp;'''region''': a table to display.
&nbsp;&nbsp;&nbsp;&nbsp;'''handle''': a string with the name of the results table where the data will be appended.
&nbsp;&nbsp;&nbsp;&nbsp;'''reset''': a boolean indication whether or not to reset the results table.

<span style="font-size:110%">'''Output'''</span><br>
&nbsp;&nbsp;&nbsp;&nbsp;'''handle''': a string with the name of the created results table or image window.

<span style="font-size:110%">'''Implementation'''</span><br>
The show function relies on IJ1 component as a starting point as this is the way data are displayed when downloading a fresh version of Fiji. this also ensure that this data can easily be seen and processed the usual way by any imageJ plugins.

='''region'''=

='''toIJ1'''=

='''toIJ2'''=

='''spacing'''=

='''unit'''=

='''axes'''=

='''list'''=
