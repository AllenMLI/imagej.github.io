
== Introduction ==

ImageJ and Fiji are able to run scripts written in [http://imagej.net/Scripting#Supported_languages different languages]. Besides all the differences the approach on how to use the [http://javadoc.imagej.net/ API of ImageJ] is similar for all of them. This article will introduce the basic concepts and is valid for all scripting languages.

{{Notice|The examples are written in Groovy, but they are easy to adapt for any other scripting language ImageJ supports.}}

== Get an image and preform an action ==

First we want to learn different ways to select an image and perform an action on it. In [[ImageJ1]] the image is represented by an [http://javadoc.imagej.net/ImageJ1/ij/ImagePlus.html ImagePlus] object. The recommended way to select an ImagePlus opbject is to use [[Script_parameters|Script Parameters]]:

<source lang='java'>
/*
 * @ImagePlus imp
 * @Integer(label='Filter radius',description='The sigma of the gaussian filter.',value=2) sig
 */
print(imp)

import ij.IJ

IJ.run(imp, "Gaussian Blur...", "sigma=" + sig)
</source>

Script Parameters are placed at the beginning of the script file. If only one <code>@ImagePlus</code> is used, the front most image is selected. A second Script Parameter is used to get the radius of the gaussion filter. By using <code>print(imp)</code> we verify, that an ImagePlus object is assigned to the variable.

To perform an operation on the selected image, we use <code>IJ.run()</code>. Therefore we have to import the [http://javadoc.imagej.net/ImageJ1/ij/IJ.html class IJ]. There are three different versions of the [http://javadoc.imagej.net/ImageJ1/ij/IJ.html#run(java.lang.String) run() method] of these we need the one with three parameters. The first parameter is the image to perform the action on, the second parameters defines the action (called '''command''') and the last parameter is used to configure the action (here we set the filter radius). The easiest way to find a command is to use the [[Introduction_into_Macro_Programming#The_recorder|Recorder]].

The second approach is similar to how to perform this operation using the [[Introduction_into_Macro_Programming|macro language]]:

<source lang='java'>
import ij.IJ

imp = IJ.getImage()
sig = IJ.getNumber('Filter radius:', 2)
IJ.run(imp, "Gaussian Blur...", "sigma=" + sig)
</source>

The first step is to select the front most image by using IJ's method <code>getImage()</code>. The second step is to use the method <code>getNumber()</code> to show up a dialog to enter the filter radius. Running the filter is the same as in the previous example.

Finally we want to use the [http://javadoc.imagej.net/ImageJ1/ij/WindowManager.html WindowManager] to select the front most image:

<source lang='java'>
import ij.IJ
import ij.WindowManager

imp = WindowManager.getCurrentImage()
sig = IJ.getNumber('Filter radius:', 2)
IJ.run(imp, "Gaussian Blur...", "sigma=" + sig)
</source>

This is nearly identical to the use of <code>IJ.getImage()</code> and therefore not recommended. The WindowManager class contains some useful methods that can be used to select more than one image (e.g. <code>getImageTitles()</code> and <code>getIDList()</code>.
