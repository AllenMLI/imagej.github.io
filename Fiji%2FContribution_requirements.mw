{{Notice | There is another good way to distribute your extension: your own [[update site]]. See the [[Distribution]] page for details.}}
{{Development | fiji}}

Distributing your software component as part of [[Fiji]] is an effective way to immediately and easily put it into the hands of many users, as well as to actively participate in the community of ImageJ software development. However, doing so comes with a few corresponding rules.

The following document describes these requirements, as well as associated best practices, for shipping your component as part of the [[Fiji]] update site.

= Requirements =

== Freely accessible source code ==

A key principle of the Fiji project is:

:''If you want to go fast, go alone. If you want to go far, go together.''
: - ''African proverb''

There are many corollaries to this wisdom, the most prominent: if you write software in your endeavor to discover new insights, [[Open Source]] is the way that brings you farthest. Withholding the source code—like any other method to obstruct other researchers' work, e.g. refusing to share materials and methods—will invariably have the opposite effect in the long run. Likewise, working with interested parties to improve one's project will invariably lead to a much better and stronger result.

As such, components distributed with Fiji must be licensed in a way [https://www.gnu.org/licenses/license-list.html compatible with the GNU General Public License].

== Source hosted on GitHub ==

Core Fiji development takes place on [[GitHub]]. This ensures continuity and visibility, and facilitates collaboration.

There are two possibilities for where to host your project:

# '''Standard.''' Repository is hosted in the [https://github.com/fiji fiji organization], or a descendant organization (e.g., [https://github.com/trakem2 trakem2]). [[Governance|Fiji maintainers]] help maintain the project.
# '''External.''' Repository is hosted in a GitHub organization you control. You alone maintain the project (though Fiji maintainers may submit PRs to help).

== Continuous integration: Jenkins ==

To verify that the Fiji components build without problems, and that all regression tests pass, every Fiji project's source code repository is connected to a job of [http://jenkins.imagej.net/view/Fiji ImageJ's Jenkins server] that builds and tests the source code whenever a new revision is made available.

== Versioning and dependency convergence ==

Most Fiji projects use the [[Versioning|SemVer versioning scheme]]: a standard to encourage API consistency without obstructing API improvements.

The minimum requirement for core Fiji projects is to abide by the '''MAJOR''' digit portion of [http://semver.org/ SemVer]—i.e., if the first digit of the version string increases, it means that the new version is ''not'' backwards compatible with the old version. Conversely, if any later digit of the version string increases, it means that the new version ''is'' backwards compatible.

This requirement exists to facilitate automated tooling for dependency convergence: the use of compatible dependency versions across all of Fiji. When two (or more) components of Fiji depend on different versions of the same component, it must be possible to verify which version is newer, and whether the newer version is backwards compatible with the old one. As long as the newest required dependencies are indeed backwards compatible, those dependencies are said to ''converge''.

From example, Apache Commons Math v3.x breaks backwards compatibility with Apache Commons Math v2.x. Since both versions share the same package and class names, only one of these versions can be shipped with Fiji. Therefore, all components of Fiji must rely on the same major version: either v2 or v3.

In general, if the rest of the Fiji distribution upgrades to a new major version of a library on which your component depends, your component must also be upgraded to use the new version. Such decisions are typically reached after [[Mailing Lists|public discussion on the fiji-devel list]].

== Maven artifacts ==

[[Fiji]] and related [[SciJava]] software uses [[Maven]], an industry standard to declare metadata about a project, to build projects using said metadata, and to ''deploy'' the resulting artifacts to a [[Architecture#Maven_repositories|Maven repository]]. Such repositories are essentially for developers what [[update sites]] are for users.

* The minimum requirement for core Fiji projects is to use a build system (e.g., [[Maven]] or Gradle) that automatically deploys required artifacts to the [http://maven.imagej.net/ ImageJ Maven repository], such that they can be consumed by downstream code, including other Fiji projects. Required artifacts to deploy include the main JAR and POM files, <code>-tests</code> JAR, <code>-sources</code> JAR and <code>-javadoc</code> JAR.
* To facilitate this, most Fiji projects inherit a common Maven configuration from the [https://github.com/fiji/pom-fiji pom-fiji] parent project. This configuration ensures that not only the compiled ''.jar'' files are deployed, but also the Javadocs and the sources. Therefore, it is strongly encouraged to extend this parent; see the [[Architecture#Maven_component_structure|Maven component structure]] section for details.
* All of Fiji's components are deployed by Jenkins to the [http://maven.imagej.net/ ImageJ Maven repository] or to [http://oss.sonatype.org/ OSS Sonatype]. That way, all Fiji components can be added easily as dependencies to downstream projects.
* All Fiji components are declared in the toplevel [https://github.com/fiji/fiji fiji] project's POM as dependencies, and declared in the [https://github.com/fiji/pom-fiji pom-fiji] parent as ''managed dependencies'', as part of Fiji's [[Architecture#Bill_of_Materials|Bill of Materials]].

= Guidelines =

The following guidelines are less technical and more philosophical, but represent best practice for core Fiji components.

== Open development process ==

Developers of Fiji components should invite others to contribute. That entails welcoming developers, acknowledging and working on pull requests, encouraging improvements, working together, enhancing upon each others' work, share insights, etc.

To leverage the power of Open Source, the default for discussions should be the [[mailing lists]], [[IRC]] and GitHub issues and pull requests. In other words, the question to ask should be "Is there any good reason why this conversation should be private?" instead of the opposite.

== Active bug management ==

Bug reports need to be acknowledged, participation in resolving bugs should be encouraged whenever possible, bugs should not go uncommented for months (we all have times when we are busy e.g. writing a paper; a little message helps the involved people understand), explanations are due when bugs go unresolved for years, etc

== Reusability and reliability ==

Whenever possible, source code should be reused. If necessary, improve the existing source code. Only rewrite from scratch when absolutely necessary.

Make code reusable, i.e. define APIs to use the functionality. This requires a little bit of discipline so that third parties can rely on the interfaces.

== Regression tests ==

Writing regression tests is [https://github.com/junit-team/junit/wiki/Getting-started easy]: create a class in the ''src/test/java/'' directory structure and annotate methods with ''@Test'', testing for various [https://github.com/junit-team/junit/wiki/Assertions assertions] (the most common ones are ''assertEquals()'', ''assertTrue()'' and ''assertNotNull()'').

In particular when fixing a bug, it is a good idea to write a regression test ''first'', making sure that it actually fails. After that, one should develop the fix, getting a cozy and warm feeling once the regression test passes.

== Separation of concerns ==

New features should be put into the appropriate component. E.g., when adding a general purpose utility, consider contributing to [[SciJava Common]] or [[ImageJ Common]] instead of bundling it with your specific extension.

= Examples =

The following table provides a few examples of how various Fiji components are structured.

{| class="wikitable"
| colspan=5 style="text-align: center" | '''Basics'''
| colspan=2 style="text-align: center" | '''[[GitHub]]'''
| colspan=3 style="text-align: center" | '''[[Maven]]'''
| colspan=2 style="text-align: center" | '''Depends on'''
|-
| '''Classification'''
| '''Component'''
| '''Core?<sup>1</sup>'''
| '''Update site'''
| '''License<sup>2</sup>'''
| '''Organization'''
| '''Repository'''
| '''groupId'''
| '''Parent POM'''
| '''Managed in<sup>3</sup>'''
| '''BDV<sup>4</sup>'''
| '''TrakEM2<sup>5</sup>'''
|-
| rowspan=4 | '''Standard'''
| [[3D Viewer]]
| style="text-align: center" | {{Yes}}
| [http://fiji.sc/update/ Fiji]
| ?
| [https://github.com/fiji fiji]
| {{GitHub | org = fiji | repo = 3D_Viewer | label = 3D_Viewer}}
| <code>sc.fiji</code>
| {{GitHub | org = fiji | repo = pom-fiji | label = pom-fiji}}
| {{GitHub | org = fiji | repo = pom-fiji | label = pom-fiji}}
| style="text-align: center" | {{No}}
| style="text-align: center" | {{No}}
|-
| [[Coloc 2]]
| style="text-align: center" | {{Yes}}
| [http://fiji.sc/update/ Fiji]
| [[GPLv3]]
| [https://github.com/fiji fiji]
| {{GitHub | org = fiji | repo = Colocalisation_Analysis | label = Colocalisation_Analysis}}
| <code>sc.fiji</code>
| {{GitHub | org = fiji | repo = pom-fiji | label = pom-fiji}}
| {{GitHub | org = fiji | repo = pom-fiji | label = pom-fiji}}
| style="text-align: center" | {{No}}
| style="text-align: center" | {{No}}
|-
| [[Simple Neurite Tracer]]
| style="text-align: center" | {{Yes}}
| [http://fiji.sc/update/ Fiji]
| [[GPLv3]]
| [https://github.com/fiji fiji]
| {{GitHub | org = fiji | repo = Simple_Neurite_Tracer | label = Simple_Neurite_Tracer}}
| <code>sc.fiji</code>
| {{GitHub | org = fiji | repo = pom-fiji | label = pom-fiji}}
| {{GitHub | org = fiji | repo = pom-fiji | label = pom-fiji}}
| style="text-align: center" | {{No}}
| style="text-align: center" | {{No}}
|-
| [[TrackMate]]
| style="text-align: center" | {{Yes}}
| [http://fiji.sc/update/ Fiji]
| ?
| [https://github.com/fiji fiji]
| {{GitHub | org = fiji | repo = TrackMate | label = TrackMate}}
| <code>sc.fiji</code>
| {{GitHub | org = fiji | repo = pom-fiji | label = pom-fiji}}
| {{GitHub | org = fiji | repo = pom-fiji | label = pom-fiji}}
| style="text-align: center" | {{No}}
| style="text-align: center" | {{No}}
|-
| rowspan=2 | '''External'''
| [[Sholl Analysis]]
| style="text-align: center" | {{Yes}}
| [http://fiji.sc/update/ Fiji]
| [[GPLv3]]
| [https://github.com/tferr tferr]
| {{GitHub | org = tferr | repo = ASA | label = ASA}}
| <code>ca.mcgill</code>
| {{GitHub | org = fiji | repo = pom-fiji | label = pom-fiji}}
| {{GitHub | org = fiji | repo = pom-fiji | label = pom-fiji}}
| style="text-align: center" | {{No}}
| style="text-align: center" | {{No}}
|-
| [[Bio-Formats]]
| style="text-align: center" | {{Yes}}
| [http://fiji.sc/update/ Fiji]
| [[GPLv2]]
| [https://github.com/openmicroscopy openmicroscopy]
| {{GitHub | org = openmicroscopy | repo = bioformats | label = bioformats}}
| <code>ome</code>
| -
| {{GitHub | org = scijava | repo = pom-scijava | label = pom-scijava}}
| style="text-align: center" | {{No}}
| style="text-align: center" | {{No}}
|-
| rowspan=2 | '''Subproject'''
| [[BigDataViewer]]
| style="text-align: center" | {{Yes}}
| [http://fiji.sc/update/ Fiji]
| [[GPLv3]]
| [https://github.com/bigdataviewer bigdataviewer]
| {{GitHub | org = bigdataviewer | repo = bigdataviewer_fiji | label = bigdataviewer_fiji}}
| <code>sc.fiji</code>
| {{GitHub | org = bigdataviewer | repo = pom-bigdataviewer | label = pom-bigdataviewer}}
| {{GitHub | org = bigdataviewer | repo = pom-bigdataviewer | label = pom-bigdataviewer}}
| style="text-align: center" | {{Yes}}
| style="text-align: center" | {{No}}
|-
| [[TrakEM2]]
| style="text-align: center" | {{Yes}}
| [http://fiji.sc/update/ Fiji]
| [[GPLv3]]
| [https://github.com/trakem2 trakem2]
| {{GitHub | org = trakem2 | repo = TrakEM2 | label = TrakEM2}}
| <code>sc.fiji</code>
| {{GitHub | org = trakem2 | repo = TrakEM2 | label = pom-trakem2}}
| {{GitHub | org = trakem2 | repo = TrakEM2 | label = pom-trakem2}}
| style="text-align: center" | {{No}}
| style="text-align: center" | {{Yes}}
|-
| rowspan=3 | '''Third party'''
| [[Cookbook]]
| style="text-align: center" | {{No}}
| [http://sites.imagej.net/Cookbook/ Cookbook]
| [[Cookbook#Credits|Various]]
| [https://github.com/fiji fiji]
| {{GitHub | org = fiji | repo = cookbook | label = cookbook}}
| <code>sc.fiji</code>
| {{GitHub | org = fiji | repo = pom-fiji | label = pom-fiji}}
| N/A
| style="text-align: center" | {{No}}
| style="text-align: center" | {{No}}
|-
| [[MaMuT]]
| style="text-align: center" | {{No}}
| [http://sites.imagej.net/MaMuT/ MaMuT]
| [[GPLv3]]
| [https://github.com/fiji fiji]
| {{GitHub | org = fiji | repo = MaMuT | label = MaMuT}}
| <code>sc.fiji</code>
| {{GitHub | org = fiji | repo = pom-fiji | label = pom-fiji}}
| N/A
| style="text-align: center" | {{Yes}}
| style="text-align: center" | {{No}}
|-
| [[SLIM Curve]]
| style="text-align: center" | {{No}}
| [http://sites.imagej.net/SLIM-Curve/ SLIM-Curve]
| [[GPLv3]]
| [https://github.com/slim-curve slim-curve]
| {{GitHub | org = slim-curve | repo = slim-plugin | label = slim-plugin}}
| <code>slim-curve</code>
| {{GitHub | org = imagej | repo = pom-imagej | label = pom-imagej}}
| N/A
| style="text-align: center" | {{No}}
| style="text-align: center" | {{No}}
|}
<sup>1</sup> A "core" project is one distributed on the Fiji update site. These projects are subject to the requirements discussed on this page.
<br><sup>2</sup> See the [[Licensing]] page for further details.
<br><sup>3</sup> The POM ancestor which manages the version of this component, if any.
<br><sup>4</sup> Whether the component depends on one or more components in the [https://github.com/bigdataviewer bigdataviewer GitHub organization].
<br><sup>5</sup> Whether the component depends on one or more components in the [https://github.com/trakem2 trakem2 GitHub organization].
