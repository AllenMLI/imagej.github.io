The following [[Beanshell_Scripting|Beanshell script]] allows you to evaluate the performance of your [[:Category:Segmentation|segmentation]] method. 

Just copy/paste it in the [[Script Editor]] or save it into a .bsh file and run it (File > Open):

<source lang=java>
/**
 * Script to calculate the segmentation error between some 2D 
 * original labels and their corresponding proposed labels. 
 * The evaluation metrics are:
 *  - Pixel error
 *  - Warping error
 *  - Rand error
 * 
 * @author Ignacio Arganda-Carreras (iarganda@mit.edu)
 */

import trainableSegmentation.*;

// Get the list of images that are open
ids = WindowManager.getIDList();

if ( ids == null || ids.length < 2 )
{
	IJ.showMessage( "You should have at least two images open." );
	return;
}

// Get all the titles of the open images		
titles = new String[ ids.length ];
for ( int i = 0; i < ids.length; ++i )
{
	titles[ i ] = ( WindowManager.getImage( ids[ i ] ) ).getTitle();
}

// Create dialog		
gd = new GenericDialog( "Evaluate segmentation results" );
		
gd.addMessage( "Image Selection:" );
current = WindowManager.getCurrentImage().getTitle();
gd.addChoice( "Original_labels", titles, current );
gd.addChoice( "Proposal", titles, current.equals( titles[ 0 ] ) ? titles[ 1 ] : titles[ 0 ] );
		
gd.addMessage( "Segmentation error metrics:" );
gd.addCheckbox( "Pixel_error", true );
gd.addCheckbox( "Warping_error", true );
gd.addCheckbox( "Rand_error", true );

gd.addMessage( "Parameters:" );
gd.addNumericField( "Binary_threshold:", 0.5, 2 );
gd.showDialog();
		
if (gd.wasCanceled()) 
	return;
		
originalLabels = WindowManager.getImage( ids[ gd.getNextChoiceIndex() ] );
proposedLabels = WindowManager.getImage( ids[ gd.getNextChoiceIndex() ] );

calculatePixelError = gd.getNextBoolean();
calculateWarpingError = gd.getNextBoolean();
calculateRandError = gd.getNextBoolean();
		
threshold = ( double )gd.getNextNumber();

IJ.log("---");
IJ.log("Evaluating segmentation...");
IJ.log("  Original labels: " + originalLabels.getTitle());
IJ.log("  Proposed labels: " + proposedLabels.getTitle());
IJ.log("  Threshold: " + threshold);

// Calculate segmentation error with the selected metrics

if( calculatePixelError )
{
	IJ.log("Calculating pixel error...");
	pixelError = WekaSegmentation.pixelError( originalLabels, proposedLabels, 0.5);
	IJ.log("  Pixel error = " + pixelError);
}

if( calculateWarpingError )
{
	IJ.log("Calculating warping error...");
	warpingError = WekaSegmentation.warpingError( originalLabels, proposedLabels, null, threshold );
	IJ.log("  Warping error = " + warpingError);
}

if( calculateRandError )
{
	IJ.log("Calculating Rand error...");
	randError = WekaSegmentation.randError( originalLabels, proposedLabels, 0.5 );
	IJ.log("  Rand error = " + randError);
}
		
</source>

If you run it, the following dialog will pop up:

[[Image:Challenge-segmentation-metrics-script.png]]

Here you can select among the open images which ones are the original and the proposed labels, along with the specific metrics you want to apply and the threshold you want to binarize the labels. 

After clicking OK the metrics will be applied and the results will be shown in the Log window:

[[Image:Challenge-script-log-window.png]]
