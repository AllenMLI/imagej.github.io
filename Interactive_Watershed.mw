
= Under Construction =








__TOC__

{{Infobox
| software               = ImageJ/Fiji
| name                   = Interactive H-Watershed
| author                 = [[User:Benoit|Benoit Lombardot]]
| maintainer             = [[User:Benoit|Benoit Lombardot]]
| released               = 08 May 2017
| filename               = SCF-MPI-CBG update site
| source                 = https://github.com/mpicbg-scicomp/Interactive-H-Watershed
| category               = [[:Category:Plugins|Plugins]], [[:Category:Segmentation|Segmentation]]
}}

[[Category:Plugins]]
[[Category:Segmentation]]


[[File:InteractiveWatershed_illustration.PNG|center|500px]]
<div align="center">'''Figure 1''' Illustration of the interactive watershed plugin. Showing the plugin control panel in from of a segmentation overlaying raw microspy data. The raw data shows a section of a platynereis organism during its early development. Data were acquired by Mette Handberg-Thorsager (Tomancak lab, MPI-CBG, Dresden)</div>

=Introduction=

Watershed [ref Soille] is a common tool to segment objects in an 2D and 3D images. It is relatively fast and can provides understandable and robust results which can be used for image analysis.

Creating a good segmentation however requires some expertise and can be time consuming. One has to determine the right threshold to stop the watershed. Meaningful local extrema have to be selected to initiate the algorithm. And once a result is obtained the segmentation has to be compared to the original data. That process can then be iterated till satisfying parameters are found. That procedure can be very time consuming if not provided with practicle tools, especially when image are large and a single watershed can take minutes.

The interactive Watershed plugin provides an interactive way to explore local minima (maxima) and threshold, updating the resulting watershed on the fly. This is possible by calculating the watershed only once at plugin initialization. Further when Threshold or maxima selection are updated this initial segmentation is reused to generate the new segmentation instantly. In order to ease quality assessment the results directly overlaid to the data.

The 2 following subsection gives additionnal details on watershed working principle and on the strategy used in the plugin for local maxima detection: H-Maxima


==Watershed principle==

If we interpret images as landscapes of hills and valleys, the watershed algorithm gradually flood the valleys starting from their lowest point (the image local minima). When the floodings of two minima meet at a sadle they remain distinct as each minima region is labelled with a distinct value. The flooding is stopped when all the image is flooded. As objects do not always cover the whole image a threshold can be set to stop region evolution before the entire flooding. Alternatively the flooding can be started from local maxima. Figure 2 shows the flooding of 3 peaks for different values of the treshold parameter.

[[File:Figure_Watershed.PNG|center|800px]]
<div align="center">'''Figure 2''' illustrates the flooding of an image by the watershed algorithm. First row shows the flooding of a 2D image while the 2nd row illustrates the process in a 1D image (section along the red cut in the 1st row). 1st column shows the orginal image. 2nd column shows with spot the detection of local minima. Column 3,4,5 show the flooding of the image. If no stopping criteria is used the entire image is flooded (column 5).</div>

==H-Maxima amd H-Watershed==

An image local maximum (minimum) is a region in the image for which all neighboring pixels have a lower (higher) value. A lot of maxima in an image are simply caused by noise and are not meaningful. If one can select more significant maxima corresponding to objects, they could be used to initiate a watershed segmentation of these objects.

There exist many different ways of detecting local maxima. H-maxima focuses on maxima robustness. It has one parameter, H, that can be compared to the intensity of the noise in the image. H-maxima selects all maxima which are still maxima when their value is decreased by H. When H is increased, less maxima are selected but they end being more robust to noise. Figure 3 shows the maxima selected in a sample image for different H values.

We call H-Watershed the segmentation obtained by flooding the H-maxima of an image. Such segmentation has 2 parameters. The Threshold, T, that stops the flooding of the image and the H-maxima robustness, H, that defines the flooding initialization.

[[File:Figure_HMax_HWatershed_v3.PNG|center|800px]]
<div align="center">'''Figure 3''' illustrates the detection of H-Maxima in 2D, 1D and the resulting 2D watershed (repectively row 1, 2 and 3). The 1st column shows the original data, whereas column 2, 3 and 4 show the H-Maxima and H-Watershed respectively for H values 0, 10 and 40. The threshold value 100 was used for the H-Watershed on row 3. The image used for the illustration is a crop of the blobs image available from ImageJ sample images.</div>

=Usage=


==Installation==

To install the plugin in your ImageJ or Fiji installation. Add the update site SCF-MPI-CBG. Java8 update site should also be installed it is not there yet. The procedure to follow an update site [[Following_an_update_site|can be found there]].

Once the update site is intalled, restart ImageJ. A new menu, SCF, should have appeared. The Interactive Watershed plugin can be found in the menu ''SCF>Labelling>Interactive H-Watershed''.

==User Interface==

To use the Interactive Watershed plugin.

# Open an image to analyze. If the image has multiple channels or time points crop out a single channel/time point. the plugin only analyze 2D or 3D images.
# In the menu SCF-MPI-CBG>Labelling click the item Interactive H_Watershed. The plugin will be initialized with the image that is in focus. A full watershed of the image is then performed. if the image is large it could take some time, in such a case a process dialog will open showing an estimation of the remaining processing time. If the process is really too long it can be interrupted and restarted later on with a smaller volume. 
# When the initialization is finished 2 windows will popup: the interactive watershed image and a control panel. When the control panel is updated the image window is updated on the fly. When satisfied with the segmentation press the export button to create a label map.

The control panel items, see Figure 4, and usage are described in the rest of this section:

* '''Analyzed image''': This is the name of the image on which the watershed was processed. It is there for the user information
* '''Segmentation paramters''':
** '''Seed dynamics''': The slider allow to adjust the H-maxima that will be flooded in the resulting window. Increasing that value will merge the segment and decreasing it will split the segment visible in the result window. Note that the value shown at the end of the line is not the actual <math>H</math> but <math>log(1+H)</math>. The reason is that logarithm scale provides a more intuitive interaction as many merging happen at low <math>H</math> value and much less at large <math>H</math> value.
** '''intensity threshold''': The slider allow to select the watershed stopping criteria. Increasing that value decrease the segment size while decreasing the value will segment size grow. Note that the value shown at the end of the line is not the actual <math>T</math> but <math>log(1+T)</math>. The reason is that logarithm scale provides a more intuitive interaction as regions evolve fast at low value but much slowly at larger value .
** '''peak flooding''': this parameter is an alternative way to explore the threshold parameter. Rather than using a global threshold one can apply distinct thresholds to each segment. Peak flooding proposes to flood the peak only to a certain percentage of the their height. For the peak <math>i</math> the threshold <math>T_i = T + \alpha/100 . (Imax_i-T)</math>, where <math>T</math> is the threshold parameter, <math>\alpha</math> is the peak flooding in percent and <math>Imax_i</math> is the maximum intensity in segment <math>i</math>.  
* '''Display Parameters''':
** '''Display style''' decides how the current segmentation is displayed. The different modes are illustrated in Figure 5.
*** ''Image'' will show directly the label map of the segmentation as an Image plus. This mode is convenient to adjust the segmentation display control and look up table.
*** ''Contour overlay'': will overlay the contour of each segment to a background image (by default the analyzed image). This is convenient to check that the label map segment are actual object in the raw data.
*** ''Solid overlay'' mode will overlay solid segment to the bakground image. 
** '''Slicing axis''': If the analyzed image is 3D the user can select in which direction to look at the dataset. For instance, selecting ''X'' will slice the data in the plane perpendicular to the X axis (the plane YZ). As the resolution of microscopy data is often lower in the Z dimension and might be the bottleneck for segmentation quality it is important to check segmentation quality in XZ and YZ planes. The choice of slicing axis is illustrated in figure 6.
** '''View Image''' is the background image displayed below the segmentation overlay. By default, it is the image that was segmented, but can also be set to any other image with the same dimension as the original image (only these image will be proposed in the drop down menu). Note that images after the plugin is initialized are not included on the list. In practice this feature helps compare the segmentation to the original data in case, for instance, the segmentation was done on a filtered image (see figure 7).
* '''Export''': Once satisfied with the segmentation visible on screen the corresponding label map can be exported to an ImagePlus that can be further analyzed. The export action records a comman to the macro recorder that allow to reproduce current result in jython script or a macro.


[[File:Figure_IWS_controlPanel.PNG|center|800px]]
<div align="center">'''Figure 4''' shows the user interface of the Interactive Watershed plugin for 2D image (Left) and 3D image (Right). On the top it shows the name of the analyzed image (Red). Below are parameters input, H value (Green), watershed threshold, T,(Blue) and peak Flooding (Orange). Then one can control segmentation display parameter: display style(Light purple) and the image displayed in the background of the segmentation (Yellow). Finally the export button (Lilac) exports a label map corresponding to the current parameter H,T and peak flooding. User interface for 3D images also allow to select the orientation of the plane displayed (Pink). XY, XZ or YZ planes can then be navigated directly with the slider of the image stack.</div>


[[File:Figure_IWS_visualisationMode.PNG|center|800px]]
<div align="center">'''Figure 5''' is illustrating the way the segmentation can be displayed. The second row shows a close up (red region fom the first row). The raw data (1st column) are segmented by the Interactive Watershed plugin and can be displayed as a label map (2nd column), the segments contour overlaid on aw data (column 3), transparent solid segment overlaid on raw data (column 4).</div>


[[File:Figure_IWS_sideViews_v2.PNG|center|800px]]
<div align="center">'''Figure 6:''' In 3D images a good assessment of segmentation requires to observe data under different angles. Beside the usual XY view of the data (Left), the Interactive Watershed plugin can display YZ sections (Center panel, section along the red line in the left panel) and XZ sections (Right panel, section along the green line in the left panel). If the data are not istropic the views a resampled to remove distortion that makes the inspection effortless.</div>


[[File:Figure_IWS_customBgImage.PNG|center|800px]]
<div align="center">'''Figure 7''' Illustrates the ability to overlay the segmentation to an image different from the one segmented. When performing a segmentation on a filtered image (Left panel), One can select a view image different from the view image (Center Panel), for instance to assess the segmentation against the raw data (Right Panel). in that case the segmentation could be imporved by a preliminary filtering while not hurt too much final segment shape.</div>

==Scripting==

In ImageJ macro language one can perform a H-Watershed segmentation with the following command:

{{GitHubEmbed|org=mpicbg-scicomp|repo=Interactive-H-Watershed|path=scripts/macro_IJ1.ijm}}

In a Jython script the H-Watershed segmentation could be called as follows:

{{GitHubEmbed|org=mpicbg-scicomp|repo=Interactive-H-Watershed|path=scripts/jython_Ops.py}}

The run commands are also recorded by the macro recorder when exporting a label map.

=Methods and Implementation=

principle: Build a Hierarchy of segments that allow to build all H-Watershed without reprocessing the watershed

Cite paper Najman (initial paper, equivalence to hierarchy), Abealez (ultrametric), Lotufo (IFT watershed)


=References=
[ref Soille]

[ref Najman 1996]

[ref Najman 2010]

[ref Arbealez 1996]

[ref Lotufo]
