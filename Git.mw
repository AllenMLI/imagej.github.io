{{Notice | If Git is completely new to you, read:
* [https://try.github.io/ TryGit 15-minute interactive tutorial]
* [http://pcottle.github.io/learnGitBranching/ Learn Git Branching interactive tutorial]
* [[Git for dummies]] tutorial on this web site

If you are passingly familiar with Git, but wish it wasn't so arcane, check out:
* [http://think-like-a-git.net/ Think Like (a) Git - A Guide for the Perplexed]
}}
{{Development | tools}}Development of ImageJ and related software relies heavily on [http://git-scm.com/ Git], a first-class [[wikipedia:Distributed version control|distributed]] [[wikipedia:Version control|version control]] system. Git saves "snapshots" of the source code, keeping a history of changes.

See the [[source code]] page for information on where the Git repositories reside.

== Git tutorials ==

<div style="float: left; padding-right: 20px">{{Git}}</div>
This web site has lots of tutorials on Git; see the left sidebar.

== Rewriting history ==

One of the most powerful things Git can do is rewrite a series of patches after the fact. This is a powerful technique worth learning. There are many guides available here and elsewhere:
<div style="list-style-position: inside;">
* [[How to contribute to an existing plugin or library#Modifying_your_commits|Modifying your commits]] section of the [[How to contribute to an existing plugin or library|Contributing to a plugin]] page
* [[Git topic branches#Advanced_topic_branch_editing_.28AKA_rebase_on_drugs.29|Advanced topic branch editing]] section of the [[Git topic branches]] tutorial
* [https://www.atlassian.com/git/tutorials/rewriting-history/ Rewriting history] tutorial from Atlassian
* [https://git-scm.com/book/en/v2/Git-Tools-Rewriting-History 7.6 Git Tools - Rewriting History] from the Git book
* [https://help.github.com/articles/about-git-rebase/ About Git rebase] article from GitHub
* [https://help.github.com/articles/using-git-rebase/ Using Git rebase] article from GitHub
</div>
[[Category:Development]]
[[Category:Git]]
