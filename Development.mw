{{Development}}<div style="float: left; padding-right: 10px">__TOC__</div>
This page provides an overview of ImageJ from the perspective of software development: how to use it from your programs, as well as how to modify or extend its capabilities via [[plugins]].
<div style="clear: left"></div>

== What is ImageJ? ==

{| style="text-align: center"
| style="padding-top: 2.5em; vertical-align: top" | An end-user<br>[https://en.wikipedia.org/wiki/Application_software software application]
| [[File:Imagej-app.png | 500px | link=Getting started]]
|-
| style="vertical-align: middle" | Reusable<br>[https://en.wikipedia.org/wiki/Library_(computing) software libraries]
| <source lang="java">
public void loadAndDisplay(File file) {
	ImageJ ij = new ImageJ();
	Object data = ij.io().open(file);
	ij.ui().show(data);
}
</source>
|-
| style="vertical-align: middle" | An extensible collection<br>of [[plugins]] and [[services]]
| style="padding-bottom: 2em; padding-top: 2em" | [[File:Scijava-logo.png | x72px | link=SciJava]]
|-
| style="vertical-align: middle" | "Write once, run anywhere"<br>[[Ops|image processing routines]]
| [[File:Write-once-run-anywhere.png | 500px | link=Ops]]
|}

== Project structure ==

ImageJ is divided into three parts:

{| class="wikitable nicetable"
! colspan=2 style="font-size: 56px" | [[File:Imagej2-icon.png | x72px | link=ImageJ]] [[ImageJ]]
|-
| colspan=2 style="text-align: center" | <span style="font-size: large">'''Image-specific components'''</span>
<ul style="list-style-type: none; padding-top: 0.5em; padding-bottom: 1em">
<li style="display: inline; background-color: peachpuff; border-radius: 0.5em; margin: 0.5em; padding: 0.5em">[[ImageJ Common]]</li>
<li style="display: inline; background-color: peachpuff; border-radius: 0.5em; margin: 0.5em; padding: 0.5em">[[ImageJ Ops]]</li>
<li style="display: inline; background-color: peachpuff; border-radius: 0.5em; margin: 0.5em; padding: 0.5em">[[ImageJ Updater]]</li>
<li style="display: inline; background-color: peachpuff; border-radius: 0.5em; margin: 0.5em; padding: 0.5em">[[ImageJ Legacy]]</li>
<li style="display: inline; background-color: peachpuff; border-radius: 0.5em; margin: 0.5em; padding: 0.5em">[[SCIFIO]]</li>
</ul>
|-
! style="font-size: 56px; width: 320px" | [[File:Imglib2-icon.png | x72px | link=ImgLib2]] [[ImgLib2]]
! style="width: 320px" | [[File:Scijava-logo.png | x72px | link=SciJava]]
|-
| style="text-align: center; vertical-align: top" | <span style="font-size: large">'''Core image data model'''</span><br>
<ul style="display: inline-block; text-align: left; padding-top: 0.5em; padding-bottom: 1em">
<li>Extensible pixel types &ndash; not just uint8, uint16, float32</li>
<li>Extensible data sources &ndash; not just files on disk</li>
<li>Extensible sample organizations &ndash; not just arrays</li>
<li>Extensible dimensionality &ndash; not just X, Y, Z and time</li>
<li>Interface-driven design</li>
</ul>
| style="text-align: center; vertical-align: top" | <span style="font-size: large">'''More general than images'''</span><br>
<ul style="display: inline-block; text-align: left; padding-top: 0.5em; padding-bottom: 1em">
<li>Application container</li>
<li>Plugin framework</li>
<li>Module framework</li>
<li>Display and UI frameworks</li>
<li>Scripting framework and plugins</li>
</ul>
|}

For full details on the technical structure of ImageJ, see the [[Architecture]] page.

== Key developer tools ==

There are four indispensable software development tools on which ImageJ relies:

{| class="wikitable nicetable"
| [[File:Git-icon.png | 64px | link=Git]]
| [[Git]]
| A first-class [https://en.wikipedia.org/wiki/Distributed_version_control distributed] [https://en.wikipedia.org/wiki/Version_control version control] system.
Git saves "snapshots" of the source code, keeping a history of changes.
|-
| [[File:Octocat.png | 64px | link=GitHub]]
| [[GitHub]]
| A website which hosts all of ImageJ's [[source code]] and [[issues|issue trackers]].
GitHub is ImageJ's nexus of online collaboration (i.e., "social coding").
|-
| style="vertical-align: middle" | [[File:Maven-icon.png | 64px | link=Maven]]
| [[Maven]]
| A [https://en.wikipedia.org/wiki/Build_automation build automation] tool which emphasizes [[Philosophy#Convention_over_configuration|convention over configuration]].
Maven builds the code and manages its dependencies.
|-
| [[File:Eclipse-luna-icon.png | 64px | link=Eclipse]]
| [[Eclipse]]
| An [[IDE|integrated development environment]] (IDE) used by many ImageJ developers.
Eclipse makes it much easier to explore and edit the source code.<br>
Although: ImageJ can be developed using ''any'' IDE which supports [[Maven]].
|}
See the [[Project management]] page for further details.

== Source code ==

[[ImageJ]] and related [[SciJava]] software projects are [[open source]]. The code is organized into [[Architecture#Modularity|well-separated]] projects.

See the [[source code]] page for further details.

== Tutorials ==

{| class="wikitable nicetable"
| '''Learning the ImageJ API'''
| '''ImageJ plugins'''
| '''The Fiji distribution of ImageJ'''
|-
| style="vertical-align: top" |
* [https://github.com/imagej/imagej-tutorials ImageJ tutorials]
* [[ImgLib2 Examples]]
|
* [[Introduction into Developing Plugins|Writing ImageJ 1.x plugins]]
* [[Writing ImageJ2 plugins]]
* [[How to contribute to an existing plugin or library|Contributing to an existing plugin]]
* [[Distribution|Distributing your plugin]]
| style="vertical-align: top" |
* [[Developing Fiji]]
* [[Fiji contribution requirements]]
* [[Supported Compilers]]
|}

[[Category:Development]]
