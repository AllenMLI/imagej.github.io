The second DAIS Learnathon took place from June 3 until June 9 2018.<br>
[https://imagej.net/2017-06-18_-_DAIS_learnathon This page] is the Learnathon Wiki page of last year's event!

==Schedule==

See [https://indico.mpi-cbg.de/event/50/other-view?view=standard this page]!

==Setting up your system==

Check if you have this set up:
<ul>
  <li>Eclipse (Neon)</li>
  <li>bash / zsh</li>
  <li>GIT</li>
  <li>Maven</li>
  <li>Gitter</li>
</ul>

==Monday==

===Intro session...===
See [https://frauzufall.github.io/imagej-universe-intro/ slides]!

===Start a Maven project with Eclipse===

See [https://github.com/fiji/learnathon-2018/blob/master/Start%20a%20Maven%20Project.pdf slides]

Git repos to clone:
* <code>git@github.com:imagej/example-imagej-command.git</code>

Notes:
In case you want to switch to the legacy UI (ImageJ 1), you change the dependencies section in your POM to...
<source lang="xml">
<dependencies>
	<dependency>
		<groupId>net.imagej</groupId>
		<artifactId>imagej</artifactId>
	</dependency>
	<dependency>
		<groupId>net.imagej</groupId>
		<artifactId>imagej-legacy</artifactId>
	</dependency>
</dependencies>
</source>

===Introduction to ImgLib2===

Git repos to clone:
* [https://github.com/imglib/imglib2-introductory-workshop <code>https://github.com/imglib/imglib2-introductory-workshop.git</code>]

([https://github.com/imglib/imglib2-introductory-workshop/blob/master/Introduction-ImgLib2.pdf Slides] are contained in the repository.)


==Tuesday==

===ImageJ2 and SciJava===
* Search for stuff in our ecosystem: [https://search.imagej.net https://search.imagej.net]
* [https://github.com/imagej/presentations/blob/gh-pages/2018-06-05-dais-learnathon/SciJava%20and%20ImageJ%20Ops.ipynb SciJava and ImageJ Ops Jupyter notebook / slides]
* [http://imagej.github.io/presentations/2017-06-19-dais-learnathon/ Slides from last year's Learnathon about SciJava community]
* [https://imagej.net/Developing_ImageJ_in_Eclipse Developing ImageJ in Eclipse]

===ImageJ2 Ops===
* [http://imagej.github.io/tutorials http://imagej.github.io/tutorials ImageJ Tutorial Notebooks]

===ImageJ Legacy===
The ImageJ Legacy Course covered the topics: images, tables, regions of interest and command execution.
* [https://github.com/maarzt/imagej-legacy-course ImageJ Legacy Exercises (Slides Included)]
* Last years [https://github.com/maarzt/imagej-legacy-course/blob/master/slides/ij_legacy_cheetsheet.pdf cheatsheet]
* Last years course [https://github.com/mpicbg-scicomp/ij2course-images/blob/master/slides/ij_legacy.pdf Slides] [https://github.com/mpicbg-scicomp/ij2course-images Old Exercise 1] [https://github.com/mpicbg-scicomp/ij2course-regions Old Exercise 2] [https://github.com/mpicbg-scicomp/ij2course-tables Old Exercise 3]

===Jupyter Notebooks===
* [https://github.com/imagej/tutorials ImageJ Tutorials]
* Installation:
** [https://conda.io/miniconda.html Anaconda] (we suggest miniconda) should be installed on your system.
** Clone to a place of your choice: <code>git clone https://github.com/imagej/tutorials</code>
** go into the tutorials folder you just cloned
** create a conda environment: <code>conda env create</code>
** activate the new environment: <code>source activate scijava</code>
** start jupyter notebook: <code>jupyter notebook</code>
* Useful link to [https://github.com/twosigma/beakerx beakerx]
* [https://github.com/imagej/imagej.py Python client for ImageJ]

===Git===
* See the [[Git]] page!

==Wednesday==

===KNIME Usage===
* Download and install the KNIME Analytics Platform from [https://www.knime.com/downloads/download-knime here]

===KNIME Development Introduction===
* Make sure you have Eclipse Oxygen installed
* Clone https://github.com/knime-ip/knip-sdk-setup
* Clone https://github.com/knime-ip/knip-course

===Developing ImageJ Ops===
* Clone https://github.com/imagej/tutorials (but you already have it, right?)
* Import <code>maven-projects/create-a-new-op</code> in Eclipse.
* See also the [[Adding new ops]] guide
* See also the "Extending ImageJ: Ops" notebook linked from [http://imagej.github.io/tutorials here]

===ImageJ Server===
* https://github.com/imagej/imagej-server
* [https://github.com/imagej/imagej.py/tree/master/imagej/server imagej.server Python module]
* [https://github.com/CellProfiler/notebooks/blob/master/cellprofiler_with_imagej_server.ipynb Example Jupyter notebook using imagej-server]
* [http://forum.imagej.net/t/remote-hpc-cluster-parallelization-support-in-scijava-plugins/10755 Remote HPC cluster parallelization support in SciJava plugins]

==Thursday==

=== ClearVolume and BDV VisTools===
* [[Media:Jug_BigDataAnd3dViz.pdf|Slides]]
* Repositories to be cloned:
** <code>https://github.com/fjug/TutorialClearVolume.git</code>
** <code>https://github.com/fjug/TutorialBigDataViewer.git</code>
* ImgLib2 Cache Examples (optional): <code>https://github.com/imglib/imglib2-cache-examples.git</code>
* Vistools live here: <code>https://github.com/bigdataviewer/bigdataviewer-vistools.git</code>

=== scenery & SciView ===
* Slides: [https://ulrik.is/sharing-a-file-named/dais-learnathon-2018-scenery-sciview.pdf pdf] / [https://ulrik.is/sharing-a-file-named/dais-learnathon-2018-scenery-sciview.zip zipped keynote]
* Repositories to be cloned:
** <code>https://github.com/skalarproduktraum/sciview-tutorial.git</code>
* scenery repo: <code>https://github.com/scenerygraphics/scenery</code>
* SciView repo: <code>https://github.com/scenerygraphics/SciView</code>

=== KNIME ImageJ2 Integration ===
* Course: <code>https://github.com/knime-ip/knip-course</code> (Take a look at the README.md)
* KNIP ImageJ2 repo: <code>https://github.com/knime-ip/knip-imagej2</code>

== Friday ==

=== Imglib2 Algorithm ===

* Slides: [https://github.com/maarzt/imglib2-algorithm-workshop/blob/master/slides/presentation.pdf https://github.com/maarzt/imglib2-algorithm-workshop/blob/master/slides/presentation.pdf]
* Exercises: [https://github.com/maarzt/imglib2-algorithm-workshop https://github.com/maarzt/imglib2-algorithm-workshop]

=== Imglib2 Advanced ===
