== Introduction. ==

Actions were my crude solution to the problem of adding random features to [[TrackMate]] without having to change the GUI too much. Adding buttons or dialogs or extra panels is cumbersome and I thought it would complexify the GUI, which is meant to be simple. A TrackMate action is a lazy workaround for this problem. You must keep in mind that is a placeholder for random feature ideas, and provided a quick and dirty way to test them.

A TrackMate action takes the shape of an item in a drop-down list in the last panel of the GUI. It can do more or less anything, since we pass everything to the action, even a reference to the GUI itself. Thanks to the [[SciJava]] discovery mechanism, we do not have to worry about adding it on the GUI: it will automatically be listed in the action list. The drawback of this simplicity is that you cannot use it to provide elaborated user interaction mechanisms, such as the ones you can find in a view. 

In this tutorial, we will use it to launch the event logger we created in the [[How to write your own viewer for TrackMate|previous tutorial] of this series. If you remember, we saw in the last paragraph how to use the <code>visible = false</code> parameter the [[SciJava]] annotation to hide it from the view menu. Hereby preventing the user to access it. No problem, we will now build an action that will launch it as a supplementary view. 


== The [https://github.com/fiji/TrackMate/blob/master/src/main/java/fiji/plugin/trackmate/action/TrackMateActionFactory.java TrackMateActionFactory] interface. ==

Again, the action behavior and its integration in TrackMate are split in two classes. The behavior is described by the  [https://github.com/fiji/TrackMate/blob/master/src/main/java/fiji/plugin/trackmate/action/TrackMateAction.java TrackMateAction] interface. The integration mechanism is controlled by the [https://github.com/fiji/TrackMate/blob/master/src/main/java/fiji/plugin/trackmate/action/TrackMateActionFactory.java TrackMateActionFactory] interface, which extends the [https://github.com/fiji/TrackMate/blob/master/src/main/java/fiji/plugin/trackmate/TrackMateModule.java TrackMateModule] interface. 

=== [[SciJava]] parameters recap. ===

There is not much to say about the factory itself. Ii is the class that must be annotated with 
<source lang="java">
@Plugin( type = TrackMateActionFactory.class )
</source>

All the SciJava annotation parameters apply, and they have the following meaning:
<ul>
  <li> The <code>enabled = true/false</code> parameter is used to control whether the action is enabled or not. A disabled action is not even instantiated.
  <li> The <code>visible = true/false</code> parameter determines whether the action is listed in the action panel. If false, the action factory is instantiated but the corresponding action will not be listed in the panel, preventing any use. 
  <li> The <code>priority = double</code> parameter is used here just to determine the order in which the action items appear in the list. High priorities are listed last.
</ul>

=== Action factory methods. ===

As of [[TrackMate]] version 2.2.0 (March 2014), actions are the only TrackMate modules that use the <code>getIcon()</code> method. The icon is then displayed in the action list, next to the action name. That's it for the <code>TrackMateModule part<code>.

The method specific to actions is more interesting:
<source lang="java">
@Override
public TrackMateAction create( final TrackMateGUIController controller )
</source>



== The [https://github.com/fiji/TrackMate/blob/master/src/main/java/fiji/plugin/trackmate/action/TrackMateAction.java TrackMateAction] interface. ==




[[Category:Tutorials]]
