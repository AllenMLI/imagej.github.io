{{Development}}
The source code of ImageJ is very modular; i.e., it is organized into [[Architecture#Modularity|well-separated]] projects. This separation offers many advantages for efficient software development and it is well worth investing a little bit of time to understand.

== Source code ==
{{Tip | tip=You can search the source code at http://search.imagej.net/ using the GitHub button!}}{{ ImageJ1 | For ImageJ 1.x source, use the [https://github.com/imagej/ImageJA ImageJA] repository in the ImageJ organization. }}* All source code is on [[GitHub]]. 
* Each project exists in its own GitHub organization. 
* Each organization contains multiple source code repositories.
* Each repository corresponds to one Java library (.jar file).

{| class="wikitable nicetable"
| '''Logo'''
| '''Organization'''
| '''Purpose'''
|-
| [[File:Scijava-icon.png|28px]]
| [https://github.com/scijava SciJava]
| Common utilities, plugin infrastructure, scripting, the context 
|-
| [[File:Imagej2-icon.png|28px]]
| [https://github.com/imagej ImageJ]
| A general-purpose image processing application
|-
| [[File:Imglib2-icon.png|28px]]
| [https://github.com/imglib ImgLib]
| Generic multi-dimensional data processing
|-
| [[File:Scifio-icon.png|28px]]
| [https://github.com/scifio SCIFIO]
| Extensible image file I/O
|-
| [[File:Fiji-icon.png|28px]]
| [https://github.com/fiji Fiji]
| A distribution of ImageJ and plugins supporting life sciences in particular 
|}

See the [[Architecture]] page for more information about the relationship between these projects.

== Building from source ==

Virtually all of these repositories have a top-level <code>pom.xml</code> file, identifying them as [[Maven]] projects.

To build a Maven project:

# [http://maven.apache.org/guides/getting-started/maven-in-five-minutes.html Install Maven].
# Clone the source repository of interest.
# Type <code>mvn</code> from the top-level directory.

Advanced instructions for building, or modifying, the source code are available for specific development environments:
{|
| style="padding: 10px; text-align: center" | [[Image:Eclipse-luna.png|link=Eclipse|84px]]
| style="padding: 10px; text-align: center" | [[Image:Netbeans.png|link=NetBeans|100px]]
| style="padding: 10px; text-align: center" | [[Image:Intellij-idea.png|link=IntelliJ IDEA|73px]]
| style="padding: 10px; text-align: center" | [[Image:Command-line.png|link=Command Line|97px]]
|}
Note that these tutorials are targeted towards [[ImageJ2|ImageJ]], but would apply to any Maven-based project.

== Javadocs ==

You can browse the [http://javadoc.imagej.net/ Javadocs] online.

Each organization has its own [[Git]] repository and [[Jenkins]] job responsible for generating its javadocs:
{| class="wikitable nicetable"
| '''Logo'''
| '''Organization'''
| '''Javadocs'''
| '''Git repository'''
| '''Jenkins job'''
|-
| [[File:Scijava-icon.png|28px]]
| [https://github.com/scijava SciJava]
| {{Javadoc | project = SciJava | label = SciJava}}
| {{GitHub | org = scijava | repo = scijava-javadoc | label = scijava-javadoc}}
| {{Jenkins | job = SciJava-javadoc}}
|-
| [[File:Imagej2-icon.png|28px]]
| [https://github.com/imagej ImageJ]
| {{Javadoc | project = ImageJ | label = ImageJ}}
| {{GitHub | org = imagej | repo = imagej-javadoc | label = imagej-javadoc}}
| {{Jenkins | job = ImageJ-javadoc}}
|-
| [[File:Imglib2-icon.png|28px]]
| [https://github.com/imglib ImgLib]
| {{Javadoc | project = ImgLib2 | label = ImgLib2}}
| {{GitHub | org = imglib | repo = imglib2-javadoc | label = imglib2-javadoc}}
| {{Jenkins | job = ImgLib2-javadoc}}
|-
| [[File:Scifio-icon.png|28px]]
| [https://github.com/scifio SCIFIO]
| {{Javadoc | project = SCIFIO | label = SCIFIO}}
| {{GitHub | org = scifio | repo = scifio-javadoc | label = scifio-javadoc}}
| {{Jenkins | job = SCIFIO-javadoc}}
|-
| [[File:Fiji-icon.png|28px]]
| [https://github.com/fiji Fiji]
| {{Javadoc | project = Fiji | label = Fiji}}
| {{GitHub | org = fiji | repo = fiji-javadoc | label = fiji-javadoc}}
| {{Jenkins | job = Fiji-javadoc}}
|}

All SciJava projects use a [https://github.com/scijava/pom-scijava/blob/pom-scijava-5.4.0/pom.xml#L1393-L1418 build-javadoc] profile to standardize configuration for the [http://maven.apache.org/plugins/maven-javadoc-plugin/ Maven Javadoc plugin]. This allows the Jenkins jobs to aggregate javadoc for their project with its direct Maven dependencies.

== Running ImageJ1 unit tests ==

We have written a substantial number of unit tests to exercise ImageJ 1.x functionality. See the [[Unit tests for ImageJ1]] page for more information.

[[Category:Development]]
