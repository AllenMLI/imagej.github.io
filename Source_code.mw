{{Development}}
The source code of ImageJ is very modular; i.e., it is organized into [[Architecture#Modularity|well-separated]] subprojects. This separation offers many advantages for efficient software development and it is well worth investing a little bit of time to understand.

== Source code ==
The source code of [[ImageJ]] and related [[SciJava]] projects is managed using the [[Git]] version control system.

All source code is on GitHub. The user-facing parts are:

* [https://github.com/imagej ImageJ] – a generic image processing application
* [https://github.com/fiji Fiji] – a distribution of ImageJ and plugins supporting life sciences in particular

Both ImageJ and Fiji consist of multiple sub-projects; All projects address their individual "concern" and leave all other concerns to the respective other projects. 

The developer-facing parts are:

* [https://github.com/imglib ImgLib2] – generic multi-dimensional data processing in Java
* [https://github.com/scifio SCIFIO] – file I/O
* [https://github.com/scijava SciJava] – common utilities, plugin infrastructure, scripting, the context

== Building from source ==
# Install [[Maven]].
# Clone the source repository of interest.
# Type <code>mvn</code> from the top-level directory.

== Using an IDE ==
You can [[IDEs|import the code into your favorite IDE]].

== Javadocs ==
You can browse the [http://javadoc.imagej.net/ Javadocs] online.

== Running ImageJ1 unit tests ==

We have written a substantial number of unit tests to exercise ImageJ 1.x functionality. See the [[Unit tests for ImageJ1]] page for more information.

[[Category:Development]]
