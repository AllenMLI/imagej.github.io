This page contains a loose list of ideas for cool/useful projects that have some relation to Fiji

== Plugin for Mixed-File-Format MultiVirtualHyperStack viewing window ==

The idea is to be able to display multiple virtual hyperstack-type data sets in a single multi-color composite window. I've already arranged this using multiple QuickTime Movies or AVIs. But the ideal will be to allow overlay from mixed data of any of the many BioFormats-supported file types.

The user would be able to overlay, realign and fit the separate channels in 4 dimensions, and then synchronously browse the composite view in ZT dimensions. There should be some demand for this functionality, especially with the very large data repositories being made by many labs in different file formats. Enabling automatic spatial calibration from metadata would allow measurements analysis of all channels with regions of interest addressing all of the overlaid data.

The project would consist of

* Writing a class extending VirtualStack.java class for each type of input data file series.  Currently, these exist for FileSeriesFromList and QTVirtualStack.

* Create a MultiVirtualHyperStack.java class that can organize multiple VirtualStack types into a single VirtualHyperStack displayed via a single ImagePlus and StackWindow.  The getProcessor() method in this class must be able to sort out the file coordinates of any channel/slice/frame requested from the mixed-format virtual stack and call getProcessor() from each of the specialized VirtualStack classes for each format.

* Create a control panel that allows adjustments of XYZT position for any single VirtualHyperStack that is a component of the mixed overlay window.

'''Goal:''' Plugin for Mixed-File-Format MultiVirtualHyperStack viewing window.<br />
'''Language:''' Java.<br />
'''Contact:''' Bill Mohler (wmohler@neuron.uchc.edu)<br />

= Suggestions by Gabriel Landini =

== Alpha shapes / concave hull / other Graph Theory algorithms ==

Fiji already contains a [[Delaunay_Voronoi]] plugin.  The purpose of this project is to implement more graph algorithms.  Most likely, this will involve designing a common framework for graph theory as applied to two- or higher-dimensional graphs.

== Colorizing algorithms ==

There are a number of publications about turning greyscale images into color images.  This project is about implementing as many of them as possible.

Note: this is an ill-posed problem, as there is not enough information in the greyscale images to identify the original color.  However, under certain circumstances, it is possible to estimate a best guess for the color for most or all pixels.

== Retinex algorithm ==

== Interactively adjustable intensity/LUT curves ==

In Fiji, you can adjust the dynamic range of an image by calling ''Image>Adjust>Brightness & Contrast''.  However, this only lets you choose a linear mapping between pixel intensity and lookup table.  This project aims to provide non-linear controls, such as piecewise linear functions, gamma curves, splines, etc

== Support for storing ROIs in TIFF tag fields ==

Fiji can save images as TIFF files and ROIs into custom .roi files.  Provide a way to store the ROIs inside custom tags in the TIFF file so ROIs and images can be saved together.

== Integrate ImageFlow into Fiji ==

[[Image:ImageFlow.png|700px|center]]

ImageFlow provides a graphical way to construct macros.  Every action is represented by a node which the user can connect with lines to define a workflow.

ImageFlow has its own [http://github.com/Dahie/imageflow Git repository] ([http://pacific.mpi-cbg.de/cgi-bin/gitweb.cgi?p=imageflow.git;a=summary our mirror).

The following issues need to be resolved:

* At the moment, it is not a true plugin, but wants to start its own ImageJ instance

* it only targets the macro language, while we want to target all the scripting languages supported by Fiji

* it searches for its .xml files outside of the .jar file, which makes it cumbersome to ship with the Fiji updater.

== image selector/sorter ==

Implement an algorithm that sorts a number of images by features, such as color.  Inspired by Kai-Uwe Barthel's [http://pixolu.de pixolu] project.

== Interface between R and ImageJ/Fiji ==

Dimiter Prodanov has done something like this, but it would be nice to have a set of implemented procedures so IJ/Fiji can run statistical procedures directly from Results tables, etc).

== A set of more powerful painting brushes and image editing tools ==

Even if Fiji aims at scientific image processing rather than beautifying photographs, it might be fun to take your holiday pictures and post-process them with the image processing software you are familiar with.

Possible tools to do so would be airbrushes (allowing for transparent colors) or brushes with a certain inertia to allow calligraphic effects, etc

== Cross platform webcam support ==

Supporting image recording from webcams might provide a cheap way to make videomicroscope/telescope units (possibly using the [[Distortion Correction]] plugin to overcome low-quality CCD chips and lenses).

One way to achieve that would be by using the [http://fmj-sf.net/ Free Java Media Framework].

== Fractal interpolation resizing (from the GIMP GSoC entry) ==

== A unique/common segmentation interface ==

I have collected near 15 new histogram segmentation methods that would be better put under a single interface together with others already available.

== A javascript Recorder ==

Similar to the Macro Recorder but producing javascript instead.

== Virtual microscope-like image viewer ==
                                                                                
== HSB/Lab painting modes ==

= Other resources =

There is a wish list on the [http://imagejdocu.tudor.lu/doku.php?id=wishlist:start&s%5b%5d=ideas ImageJ Documentation Wiki].
